"use strict";(self.webpackChunkstudy_doxs=self.webpackChunkstudy_doxs||[]).push([[8670],{3905:(t,e,n)=>{n.d(e,{Zo:()=>s,kt:()=>h});var r=n(67294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function c(t,e){if(null==t)return{};var n,r,i=function(t,e){if(null==t)return{};var n,r,i={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var p=r.createContext({}),l=function(t){var e=r.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},s=function(t){var e=l(t.components);return r.createElement(p.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,i=t.mdxType,a=t.originalType,p=t.parentName,s=c(t,["components","mdxType","originalType","parentName"]),d=l(n),h=i,y=d["".concat(p,".").concat(h)]||d[h]||u[h]||a;return n?r.createElement(y,o(o({ref:e},s),{},{components:n})):r.createElement(y,o({ref:e},s))}));function h(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var a=n.length,o=new Array(a);o[0]=d;var c={};for(var p in e)hasOwnProperty.call(e,p)&&(c[p]=e[p]);c.originalType=t,c.mdxType="string"==typeof t?t:i,o[1]=c;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},85162:(t,e,n)=>{n.d(e,{Z:()=>o});var r=n(67294),i=n(86010);const a="tabItem_Ymn6";function o(t){let{children:e,hidden:n,className:o}=t;return r.createElement("div",{role:"tabpanel",className:(0,i.Z)(a,o),hidden:n},e)}},74866:(t,e,n)=>{n.d(e,{Z:()=>w});var r=n(87462),i=n(67294),a=n(86010),o=n(12466),c=n(16550),p=n(91980),l=n(67392),s=n(50012);function u(t){return function(t){return i.Children.map(t,(t=>{if(!t||(0,i.isValidElement)(t)&&function(t){const{props:e}=t;return!!e&&"object"==typeof e&&"value"in e}(t))return t;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof t.type?t.type:t.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(t).map((t=>{let{props:{value:e,label:n,attributes:r,default:i}}=t;return{value:e,label:n,attributes:r,default:i}}))}function d(t){const{values:e,children:n}=t;return(0,i.useMemo)((()=>{const t=e??u(n);return function(t){const e=(0,l.l)(t,((t,e)=>t.value===e.value));if(e.length>0)throw new Error(`Docusaurus error: Duplicate values "${e.map((t=>t.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(t),t}),[e,n])}function h(t){let{value:e,tabValues:n}=t;return n.some((t=>t.value===e))}function y(t){let{queryString:e=!1,groupId:n}=t;const r=(0,c.k6)(),a=function(t){let{queryString:e=!1,groupId:n}=t;if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,p._X)(a),(0,i.useCallback)((t=>{if(!a)return;const e=new URLSearchParams(r.location.search);e.set(a,t),r.replace({...r.location,search:e.toString()})}),[a,r])]}function g(t){const{defaultValue:e,queryString:n=!1,groupId:r}=t,a=d(t),[o,c]=(0,i.useState)((()=>function(t){let{defaultValue:e,tabValues:n}=t;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((t=>t.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const r=n.find((t=>t.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:e,tabValues:a}))),[p,l]=y({queryString:n,groupId:r}),[u,g]=function(t){let{groupId:e}=t;const n=function(t){return t?`docusaurus.tab.${t}`:null}(e),[r,a]=(0,s.Nk)(n);return[r,(0,i.useCallback)((t=>{n&&a.set(t)}),[n,a])]}({groupId:r}),m=(()=>{const t=p??u;return h({value:t,tabValues:a})?t:null})();(0,i.useLayoutEffect)((()=>{m&&c(m)}),[m]);return{selectedValue:o,selectValue:(0,i.useCallback)((t=>{if(!h({value:t,tabValues:a}))throw new Error(`Can't select invalid tab value=${t}`);c(t),l(t),g(t)}),[l,g,a]),tabValues:a}}var m=n(72389);const f="tabList__CuJ",x="tabItem_LNqP";function b(t){let{className:e,block:n,selectedValue:c,selectValue:p,tabValues:l}=t;const s=[],{blockElementScrollPositionUntilNextRender:u}=(0,o.o5)(),d=t=>{const e=t.currentTarget,n=s.indexOf(e),r=l[n].value;r!==c&&(u(e),p(r))},h=t=>{let e=null;switch(t.key){case"Enter":d(t);break;case"ArrowRight":{const n=s.indexOf(t.currentTarget)+1;e=s[n]??s[0];break}case"ArrowLeft":{const n=s.indexOf(t.currentTarget)-1;e=s[n]??s[s.length-1];break}}e?.focus()};return i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":n},e)},l.map((t=>{let{value:e,label:n,attributes:o}=t;return i.createElement("li",(0,r.Z)({role:"tab",tabIndex:c===e?0:-1,"aria-selected":c===e,key:e,ref:t=>s.push(t),onKeyDown:h,onClick:d},o,{className:(0,a.Z)("tabs__item",x,o?.className,{"tabs__item--active":c===e})}),n??e)})))}function _(t){let{lazy:e,children:n,selectedValue:r}=t;const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const t=a.find((t=>t.props.value===r));return t?(0,i.cloneElement)(t,{className:"margin-top--md"}):null}return i.createElement("div",{className:"margin-top--md"},a.map(((t,e)=>(0,i.cloneElement)(t,{key:e,hidden:t.props.value!==r}))))}function v(t){const e=g(t);return i.createElement("div",{className:(0,a.Z)("tabs-container",f)},i.createElement(b,(0,r.Z)({},t,e)),i.createElement(_,(0,r.Z)({},t,e)))}function w(t){const e=(0,m.Z)();return i.createElement(v,(0,r.Z)({key:String(e)},t))}},45456:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>p,default:()=>h,frontMatter:()=>c,metadata:()=>l,toc:()=>u});var r=n(87462),i=(n(67294),n(3905)),a=n(74866),o=n(85162);const c={title:"\u30b9\u30ad\u30e5\u30bf\u30ec\u30fc\u6697\u53f7",sidebar_label:"\u30b9\u30ad\u30e5\u30bf\u30ec\u30fc\u6697\u53f7",draft:!1,toc_max_heading_level:4,tags:["\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0","\u53e4\u5178\u6697\u53f7"]},p=void 0,l={unversionedId:"Cryptography/classical-cipher/scythia-cipher",id:"Cryptography/classical-cipher/scythia-cipher",title:"\u30b9\u30ad\u30e5\u30bf\u30ec\u30fc\u6697\u53f7",description:"\u30b9\u30ad\u30e5\u30bf\u30ec\u30fc\u6697\u53f7\u3068\u306f",source:"@site/docs/02-Cryptography/00-classical-cipher/02-scythia-cipher.md",sourceDirName:"02-Cryptography/00-classical-cipher",slug:"/Cryptography/classical-cipher/scythia-cipher",permalink:"/study-docs/docs/Cryptography/classical-cipher/scythia-cipher",draft:!1,editUrl:"https://github.com/koseki2580/study-docs/edit/main/docs/02-Cryptography/00-classical-cipher/02-scythia-cipher.md",tags:[{label:"\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0",permalink:"/study-docs/docs/tags/\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0"},{label:"\u53e4\u5178\u6697\u53f7",permalink:"/study-docs/docs/tags/\u53e4\u5178\u6697\u53f7"}],version:"current",lastUpdatedBy:"koseki2580",lastUpdatedAt:1697349708,formattedLastUpdatedAt:"2023\u5e7410\u670815\u65e5",sidebarPosition:2,frontMatter:{title:"\u30b9\u30ad\u30e5\u30bf\u30ec\u30fc\u6697\u53f7",sidebar_label:"\u30b9\u30ad\u30e5\u30bf\u30ec\u30fc\u6697\u53f7",draft:!1,toc_max_heading_level:4,tags:["\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0","\u53e4\u5178\u6697\u53f7"]},sidebar:"CryptographySidebar",previous:{title:"\u30b7\u30d5\u30c8\u6697\u53f7",permalink:"/study-docs/docs/Cryptography/classical-cipher/shift-cipher"},next:{title:"\u8ee2\u7f6e\u5f0f\u6697\u53f7",permalink:"/study-docs/docs/Cryptography/classical-cipher/transposition-cipher"}},s={},u=[{value:"\u30b9\u30ad\u30e5\u30bf\u30ec\u30fc\u6697\u53f7\u3068\u306f",id:"\u30b9\u30ad\u30e5\u30bf\u30ec\u30fc\u6697\u53f7\u3068\u306f",level:2},{value:"\u30d7\u30ed\u30b0\u30e9\u30e0",id:"\u30d7\u30ed\u30b0\u30e9\u30e0",level:3},{value:"\u52d5\u4f5c",id:"\u52d5\u4f5c",level:3}],d={toc:u};function h(t){let{components:e,...c}=t;return(0,i.kt)("wrapper",(0,r.Z)({},d,c,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"\u30b9\u30ad\u30e5\u30bf\u30ec\u30fc\u6697\u53f7\u3068\u306f"},"\u30b9\u30ad\u30e5\u30bf\u30ec\u30fc\u6697\u53f7\u3068\u306f"),(0,i.kt)("p",null,"\u7b52\u3084\u68d2\u306a\u3069\u306b\u7d19\u3092\u5dfb\u304d\u3064\u3051\u3001\u7b52\u306e\u4f38\u3073\u308b\u65b9\u5411\u306b\u5e73\u6587\u3092\u8a18\u8ff0\u3057\u3001\u4f59\u767d\u90e8\u5206\u306b\u4efb\u610f\u306e\u6587\u5b57\u3067\u57cb\u3081\u5c3d\u304f\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u7d19\u3092\u7b52\u304b\u3089\u53d6\u308a\u5916\u3057\u305f\u969b\u306b\u5e73\u6587\u3067\u66f8\u3044\u305f\u6587\u5b57\u306f\u30d0\u30e9\u30d0\u30e9\u306b\u914d\u7f6e\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u6697\u53f7\u5316\u3055\u308c\u308b\u3002\n\u540c\u3058\u7b52\u306b\u540c\u3058\u69d8\u306b\u5dfb\u304d\u3064\u3051\u308b\u3053\u3068\u3067\u6587\u5b57\u3092\u5fa9\u5143\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u3053\u306e\u3088\u3046\u306a\u6697\u53f7\u5316\u65b9\u5f0f\u3092",(0,i.kt)("inlineCode",{parentName:"p"},"\u30b9\u30ad\u30e5\u30bf\u30ec\u30fc\u6697\u53f7"),"\u3068\u3044\u3046\u3002"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"\u30a4\u30e1\u30fc\u30b8\u56f3",src:n(97520).Z,title:"\u30b9\u30ad\u30e5\u30bf\u30ec\u30fc\u6697\u53f7 \u30a4\u30e1\u30fc\u30b81",width:"1480",height:"976"})),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"\u30a4\u30e1\u30fc\u30b8\u56f3",src:n(87805).Z,title:"\u30b9\u30ad\u30e5\u30bf\u30ec\u30fc\u6697\u53f7 \u30a4\u30e1\u30fc\u30b82",width:"1406",height:"942"})),(0,i.kt)("p",null,"\u56f3\u306e\u3088\u3046\u306b\u7b52\u306b\u5408\u308f\u305b\u3066\u6587\u5b57\u3092\u66f8\u304f\u3053\u3068\u3067\u7d19\u3092\u7b52\u304b\u3089\u5916\u3059\u3068",(0,i.kt)("inlineCode",{parentName:"p"},"AAKL PXMP PSXQ LWRJ EEAE"),"\u3068\u306a\u308b\u3002(\u308f\u304b\u308a\u3084\u3059\u3044\u3088\u3046\u306b\u533a\u5207\u3063\u3066\u3044\u308b\u3002\u533a\u5207\u308a\u306e\u59cb\u3081\u306e\u6587\u5b57\u306e\u307f\u3092\u53d6\u308a\u51fa\u3059\u3068",(0,i.kt)("inlineCode",{parentName:"p"},"APPLE"),"\u3068\u306a\u308b\u3002)"),(0,i.kt)("h3",{id:"\u30d7\u30ed\u30b0\u30e9\u30e0"},"\u30d7\u30ed\u30b0\u30e9\u30e0"),(0,i.kt)(a.Z,{groupId:"code",mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="scythia-cipher.py"',title:'"scythia-cipher.py"'},'import random\n\ndef scythia_cipher_to_encrypt(input_text: str, width: int = 3):\n    input_text = input_text.upper()\n    base = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"\n    encrypt_box = [[] for _ in range(len(input_text))]\n    for i in range(len(input_text)):\n        encrypt_box[i] = input_text[i]\n        for _ in range(1, width):\n            encrypt_box[i] += base[random.randint(0, 25)]\n    rotate_count = random.randint(0, width)\n    for i in range(len(encrypt_box)):\n        encrypt_box[i] = encrypt_box[i][rotate_count:] + \\\n            encrypt_box[i][:rotate_count]\n    return "".join(encrypt_box)\n\n\ndef scythia_cipher_to_decrypt(input_text: str, width: int = 3):\n    decrypt_box = [[] for _ in range(width)]\n    for i in range(len(input_text)):\n        decrypt_box[i % width].append(input_text[i])\n    for i in range(width):\n        decrypt_box[i] = "".join(decrypt_box[i])\n    return decrypt_box\n'))),(0,i.kt)(o.Z,{value:"C++",label:"C++",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="scythia-cipher.cpp"',title:'"scythia-cipher.cpp"'},'string ScythiaCipherToEncrypt(string inputText, int width = 3)\n{\n    transform(inputText.begin(), inputText.end(), inputText.begin(), ::toupper);\n    string base = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n    std::random_device rnd;\n    std::mt19937 mt(rnd());\n    uniform_int_distribution<> rand26(0, 25);\n    vector<string> encryptBox(inputText.size(), "");\n    for (int i = 0; i < inputText.size(); ++i)\n    {\n        encryptBox[i] += inputText[i];\n        for (int j = 1; j < width; ++j)\n        {\n            encryptBox[i] += base[rand26(mt)];\n        }\n    }\n    uniform_int_distribution<> randRotate(0, width);\n    int rotateCount = randRotate(mt);\n    for (int i = 0; i < encryptBox.size(); ++i)\n    {\n        rotate(encryptBox[i].begin(), encryptBox[i].begin() + rotateCount, encryptBox[i].end());\n    }\n    std::ostringstream os;\n    std::copy(encryptBox.begin(), encryptBox.end(), std::ostream_iterator<std::string>(os));\n\n    return os.str();\n}\n\nvector<string> ScythiaCipherToDecrypt(string inputText, int width = 3)\n{\n    vector<string> decryptBox(width, "");\n    for (int i = 0; i < inputText.size(); ++i)\n    {\n        decryptBox[i % width] += inputText[i];\n    }\n\n    return decryptBox;\n}\n'))),(0,i.kt)(o.Z,{value:"C#",label:"C#",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="scythia-cipher.cs"',title:'"scythia-cipher.cs"'},'static private string ScythiaCipherToEncrypt(string inputText, int width = 3)\n{\n    inputText.ToUpper();\n    String _base = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n    var rand = new Random();\n    List<StringBuilder> encryptBox = new List<StringBuilder>();\n    for (int i = 0; i < inputText.Length; ++i)\n    {\n        StringBuilder item = new StringBuilder();\n        item.Append(inputText[i]);\n        encryptBox.Add(item);\n        for (int j = 1; j < width; ++j)\n        {\n            encryptBox[i].Append(_base[rand.Next(0, 26)]);\n        }\n    }\n    int rotateCount = rand.Next(0, width);\n    StringBuilder ret_string = new StringBuilder();\n    for (int i = 0; i < inputText.Length; ++i)\n    {\n        String beforeRotate = encryptBox[i].ToString();\n        ret_string.Append(\n            beforeRotate.Substring(rotateCount) + beforeRotate.Substring(0, rotateCount)\n        );\n    }\n    return ret_string.ToString();\n}\n\nstatic private string[] ScythiaCipherToDecrypt(string inputText, int width = 3)\n{\n    StringBuilder[] decryptBox = new StringBuilder[width];\n    for (int i = 0; i < width; ++i)\n    {\n        decryptBox[i] = new StringBuilder();\n    }\n    for (int i = 0; i < inputText.Length; ++i)\n    {\n        decryptBox[i % width].Append(inputText[i]);\n    }\n    string[] ret_string = new string[width];\n    for (int i = 0; i < width; ++i)\n    {\n        ret_string[i] = decryptBox[i].ToString();\n    }\n    return ret_string;\n}\n'))),(0,i.kt)(o.Z,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"rand \u30af\u30ec\u30fc\u30c8\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust",metastring:'title="scythia-cipher.rs"',title:'"scythia-cipher.rs"'},'use rand::Rng;\nfn scythia_cipher_to_encrypt(input_text:String, width:u8) -> String{\n    let  input_text_upper: Vec<char> = input_text.to_uppercase().chars().collect();\n    let base =  "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n    let mut rng = rand::thread_rng();\n    let mut encrypt_box: Vec<String> =  Vec::new();\n    for i in 0..input_text_upper.len(){\n        encrypt_box.push(input_text_upper[i].to_string());\n        for _ in 1..width{\n            let  rand = rng.gen_range(0..26);\n            encrypt_box[i] += &base[rand..rand+1];\n        }\n    }\n    let mut ret_string = String::new();\n    let rotate_count = rng.gen_range(0..width) as usize;\n    for i in 0..encrypt_box.len(){\n        let before_rotate = encrypt_box.get(i as usize).unwrap();\n        ret_string += &((&before_rotate[rotate_count..]).to_string() + &before_rotate[..rotate_count].to_string());\n    }\n    ret_string\n}\n\nfn scythia_cipher_to_decrypt(input_text:String, width:u8) -> Vec<String>{\n\n    let mut decrypt_box: Vec<String> =  vec![String::new(); width as usize];\n    for i in 0..input_text.len(){\n        decrypt_box[i % width as usize] += &input_text[i..i+1];\n    }\n    decrypt_box\n}\n'))),(0,i.kt)(o.Z,{value:"JavaScript",label:"JavaScript",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="scythia-cipher.js"',title:'"scythia-cipher.js"'},'// \u6307\u5b9a\u7bc4\u56f2\u5185\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u3067\u6570\u5b57\u3092\u751f\u6210 [min, max]\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nfunction ScythiaCipherToEncrypt(inputText, width = 3) {\n  inputText = inputText.toUpperCase();\n  const base = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n  let encryptBox = [];\n  for (let i = 0; i < inputText.length; ++i) {\n    encryptBox.push(inputText[i]);\n    for (let j = 1; j < width; ++j) {\n      encryptBox[i] += base[getRandomInt(0, 26)];\n    }\n  }\n  let retString = "";\n  let rotateCount = getRandomInt(0, width);\n  for (let i = 0; i < inputText.length; ++i) {\n    retString +=\n      encryptBox[i].substring(rotateCount) +\n      encryptBox[i].substring(0, rotateCount);\n  }\n  return retString;\n}\nfunction ScythiaCipherToDecrypt(inputText, width = 3) {\n  let decryptBox = new Array(width).fill("");\n  for (let i = 0; i < inputText.length; ++i) {\n    decryptBox[i % width] += inputText[i];\n  }\n  return decryptBox;\n}\n')))),(0,i.kt)("h3",{id:"\u52d5\u4f5c"},"\u52d5\u4f5c"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function ScythiaCipher(props) {\n  // \u6697\u53f7\u5316 or \u5fa9\u53f7\u5316\u3059\u308b\u6587\u5b57\u5217\n  const inputText = "APPLE";\n\n  // \u6587\u5b57\u5217\u3092\u683c\u7d0d\u3059\u308b\u9762\u306e\u500b\u6570\n  const width = 3;\n\n  // \u4ee5\u4e0b\u306f\u7279\u306b\u5909\u66f4\u3057\u306a\u304f\u3066\u826f\u3044\n  const base = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n\n  // \u6307\u5b9a\u7bc4\u56f2\u5185\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u3067\u6570\u5b57\u3092\u751f\u6210 [min, max]\n  function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n  function ScythiaCipherToEncrypt(inputText, width = 3) {\n    inputText = inputText.toUpperCase();\n    let encryptBox = [];\n    for (let i = 0; i < inputText.length; ++i) {\n      encryptBox.push(inputText[i]);\n      for (let j = 1; j < width; ++j) {\n        encryptBox[i] += base[getRandomInt(0, 26)];\n      }\n    }\n    let retString = "";\n    let rotateCount = getRandomInt(0, width);\n    for (let i = 0; i < inputText.length; ++i) {\n      retString +=\n        encryptBox[i].substring(rotateCount) +\n        encryptBox[i].substring(0, rotateCount);\n    }\n    return retString;\n  }\n  function ScythiaCipherToDecrypt(inputText, width = 3) {\n    let decryptBox = new Array(width).fill("");\n    for (let i = 0; i < inputText.length; ++i) {\n      decryptBox[i % width] += inputText[i];\n    }\n    return decryptBox;\n  }\n  let cipher = ScythiaCipherToEncrypt(inputText, width);\n  return (\n    <div\n      style={{\n        display: "flex",\n        flexDirection: "row",\n        flexWrap: "nowrap",\n        alignItems: "flex-start",\n        justifyContent: "space-evenly",\n      }}\n    >\n      <div>\n        <h3>\u5143\u306e\u6587\u5b57\u5217</h3>\n        <p>{inputText}</p>\n      </div>\n      <span className="mrel" style={{ padding: "5px", margin: "auto 0px" }}>\n        \u2192\n      </span>\n      <div style={{ overflowX: "scroll" }}>\n        <h3>\u6697\u53f7\u5316</h3>\n        <p>{cipher}</p>\n      </div>\n      <span className="mrel" style={{ padding: "5px", margin: "auto 0px" }}>\n        \u2192\n      </span>\n      <div>\n        <h3>\u5fa9\u53f7\u5316</h3>\n        {ScythiaCipherToDecrypt(cipher, width).map((data) => (\n          <p style={{ padding: "1px", margin: "2px" }}>{data}</p>\n        ))}\n      </div>\n    </div>\n  );\n}\n')))}h.isMDXComponent=!0},97520:(t,e,n)=>{n.d(e,{Z:()=>r});const r=n.p+"assets/images/scythia-cipher-1-6eca27ad39aaf64c258d45992bb146b8.png"},87805:(t,e,n)=>{n.d(e,{Z:()=>r});const r=n.p+"assets/images/scythia-cipher-2-e074e3e67051df6de3ebc3c0d1545758.png"}}]);