"use strict";(self.webpackChunkstudy_doxs=self.webpackChunkstudy_doxs||[]).push([[339],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return h}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(n),h=i,f=u["".concat(p,".").concat(h)]||u[h]||c[h]||a;return n?r.createElement(f,o(o({ref:t},d),{},{components:n})):r.createElement(f,o({ref:t},d))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2360:function(e,t,n){n.d(t,{Z:function(){return o}});var r=n(7294),i=n(6010),a="tabItem_OmH5";function o(e){var t=e.children,n=e.hidden,o=e.className;return r.createElement("div",{role:"tabpanel",className:(0,i.Z)(a,o),hidden:n},t)}},9877:function(e,t,n){n.d(t,{Z:function(){return h}});var r=n(7462),i=n(7294),a=n(2389),o=n(7392),l=n(7094),p=n(2466),s=n(6010),d="tabList_uSqn",c="tabItem_LplD";function u(e){var t,n,a,u=e.lazy,h=e.block,f=e.defaultValue,m=e.values,g=e.groupId,k=e.className,b=i.Children.map(e.children,(function(e){if((0,i.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=m?m:b.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),N=(0,o.l)(v,(function(e,t){return e.value===t.value}));if(N.length>0)throw new Error('Docusaurus error: Duplicate values "'+N.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===f?f:null!=(t=null!=f?f:null==(n=b.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(a=b[0])?void 0:a.props.value;if(null!==y&&!v.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var w=(0,l.U)(),x=w.tabGroupChoices,C=w.setTabGroupChoices,Z=(0,i.useState)(y),T=Z[0],D=Z[1],S=[],_=(0,p.o5)().blockElementScrollPositionUntilNextRender;if(null!=g){var F=x[g];null!=F&&F!==T&&v.some((function(e){return e.value===F}))&&D(F)}var O=function(e){var t=e.currentTarget,n=S.indexOf(t),r=v[n].value;r!==T&&(_(t),D(r),null!=g&&C(g,r))},L=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=S.indexOf(e.currentTarget)+1;n=S[r]||S[0];break;case"ArrowLeft":var i=S.indexOf(e.currentTarget)-1;n=S[i]||S[S.length-1]}null==(t=n)||t.focus()};return i.createElement("div",{className:(0,s.Z)("tabs-container",d)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":h},k)},v.map((function(e){var t=e.value,n=e.label,a=e.attributes;return i.createElement("li",(0,r.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:function(e){return S.push(e)},onKeyDown:L,onFocus:O,onClick:O},a,{className:(0,s.Z)("tabs__item",c,null==a?void 0:a.className,{"tabs__item--active":T===t})}),null!=n?n:t)}))),u?(0,i.cloneElement)(b.filter((function(e){return e.props.value===T}))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},b.map((function(e,t){return(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==T})}))))}function h(e){var t=(0,a.Z)();return i.createElement(u,(0,r.Z)({key:String(t)},e))}},9640:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return d},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return h}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=n(9877),l=n(2360),p=["components"],s={title:"\u6df1\u3055\u512a\u5148\u63a2\u7d22",sidebar_label:"\u6df1\u3055\u512a\u5148\u63a2\u7d22",draft:!1,toc_max_heading_level:4},d=void 0,c={unversionedId:"Algorithm/depth-first-search",id:"Algorithm/depth-first-search",title:"\u6df1\u3055\u512a\u5148\u63a2\u7d22",description:"\u6df1\u3055\u512a\u5148\u63a2\u7d22\u3068\u306f",source:"@site/docs/00-Algorithm/02-depth-first-search.mdx",sourceDirName:"00-Algorithm",slug:"/Algorithm/depth-first-search",permalink:"/study-docs/docs/Algorithm/depth-first-search",draft:!1,editUrl:"https://github.com/koseki2580/study-docs/edit/main/docs/00-Algorithm/02-depth-first-search.mdx",tags:[],version:"current",lastUpdatedAt:1653132322,formattedLastUpdatedAt:"2022/5/21",sidebarPosition:2,frontMatter:{title:"\u6df1\u3055\u512a\u5148\u63a2\u7d22",sidebar_label:"\u6df1\u3055\u512a\u5148\u63a2\u7d22",draft:!1,toc_max_heading_level:4},sidebar:"AlgorithmSidebar",previous:{title:"\u5e45\u512a\u5148\u63a2\u7d22",permalink:"/study-docs/docs/Algorithm/breadth-first-search"}},u={},h=[{value:"\u6df1\u3055\u512a\u5148\u63a2\u7d22\u3068\u306f",id:"\u6df1\u3055\u512a\u5148\u63a2\u7d22\u3068\u306f",level:2},{value:"\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0",id:"\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0",level:2},{value:"\u6d41\u308c",id:"\u6d41\u308c",level:3},{value:"\u4f7f\u7528\u3059\u308b\u30c7\u30fc\u30bf\u69cb\u9020",id:"\u4f7f\u7528\u3059\u308b\u30c7\u30fc\u30bf\u69cb\u9020",level:3},{value:"\u8d70\u67fb\u9806",id:"\u8d70\u67fb\u9806",level:3},{value:"\u884c\u304d\u304c\u3051\u9806",id:"\u884c\u304d\u304c\u3051\u9806",level:4},{value:"\u901a\u308a\u304c\u3051\u9806",id:"\u901a\u308a\u304c\u3051\u9806",level:4},{value:"\u5e30\u308a\u304c\u3051\u9806",id:"\u5e30\u308a\u304c\u3051\u9806",level:4},{value:"\u30d7\u30ed\u30b0\u30e9\u30e0",id:"\u30d7\u30ed\u30b0\u30e9\u30e0",level:3},{value:"\u884c\u304d\u304c\u3051\u9806",id:"\u884c\u304d\u304c\u3051\u9806-1",level:4},{value:"\u901a\u308a\u304c\u3051\u9806",id:"\u901a\u308a\u304c\u3051\u9806-1",level:4},{value:"\u5e30\u308a\u304c\u3051\u9806",id:"\u5e30\u308a\u304c\u3051\u9806-1",level:4}],f={toc:h};function m(e){var t=e.components,s=(0,i.Z)(e,p);return(0,a.kt)("wrapper",(0,r.Z)({},f,s,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"\u6df1\u3055\u512a\u5148\u63a2\u7d22\u3068\u306f"},"\u6df1\u3055\u512a\u5148\u63a2\u7d22\u3068\u306f"),(0,a.kt)("p",null,"\u6df1\u3055\u512a\u5148\u63a2\u7d22(DFS : Depth First Search)\u3068\u306f",(0,a.kt)("a",{parentName:"p",href:"/docs/Data-structure/graph"},"\u30b0\u30e9\u30d5"),"\u3084",(0,a.kt)("a",{parentName:"p",href:"/docs/Data-structure/tree"},"\u6728\u69cb\u9020"),"\u3092\u63a2\u7d22\u3059\u308b\u305f\u3081\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3042\u308a\u3001\u63a2\u7d22\u3092\u958b\u59cb\u3059\u308b\u4f4d\u7f6e\u304b\u3089\u8fd1\u3044\u3082\u306e\u304b\u3089\u63a2\u7d22\u3057\u3066\u3044\u304f\u63a2\u7d22\u624b\u6cd5\u3002"),(0,a.kt)("h2",{id:"\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0"},"\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0"),(0,a.kt)("h3",{id:"\u6d41\u308c"},"\u6d41\u308c"),(0,a.kt)("p",null,"\u6b21\u306e\u56f3\u306e\u3088\u3046\u306a\u6728\u69cb\u9020\u304c\u3042\u3063\u305f\u3068\u3059\u308b\u3002"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"\u30a4\u30e1\u30fc\u30b8\u56f3",src:n(5269).Z,title:"\u6700\u521d\u306e\u6728\u69cb\u9020",width:"555",height:"201"})),(0,a.kt)("p",null,"\u9802\u70b9",(0,a.kt)("inlineCode",{parentName:"p"},"1"),"\u3092\u59cb\u70b9\u3068\u3057\u3066\u3001\u5e45\u512a\u5148\u63a2\u7d22\u3092\u884c\u3046\u3068\u6b21\u306e\u3088\u3046\u306a\u6d41\u308c\u306b\u306a\u308b\u3002"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u59cb\u70b9\u306f\u63a2\u7d22\u6e08\u307f\u3068\u3057\u3066\u8a18\u9332\u3059\u308b\u3002")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"\u30a4\u30e1\u30fc\u30b8\u56f3",src:n(5250).Z,title:"\u624b\u98061\u5f8c\u306e\u6728\u69cb\u9020",width:"555",height:"201"})),(0,a.kt)("p",null,"\u9802\u70b9",(0,a.kt)("inlineCode",{parentName:"p"},"1"),"\u3068\u7e4b\u304c\u3063\u3066\u3044\u308b\u9802\u70b9",(0,a.kt)("inlineCode",{parentName:"p"},"2,4"),"\u3092\u6b21\u306e\u63a2\u7d22\u70b9\u306b\u8ffd\u52a0\u3059\u308b\u3002"),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\u9802\u70b9",(0,a.kt)("inlineCode",{parentName:"p"},"4"),"\u63a2\u7d22\u6e08\u307f\u3068\u3057\u3066\u8a18\u9332\u3059\u308b\u3002\n",(0,a.kt)("img",{alt:"\u30a4\u30e1\u30fc\u30b8\u56f3",src:n(6361).Z,title:"\u624b\u98062\u5f8c\u306e\u6728\u69cb\u9020",width:"555",height:"201"}),"\n\u9802\u70b9",(0,a.kt)("inlineCode",{parentName:"p"},"4"),"\u3068\u7e4b\u304c\u3063\u3066\u3044\u308b\u9802\u70b9",(0,a.kt)("inlineCode",{parentName:"p"},"7,6"),"\u3092\u6b21\u306e\u63a2\u7d22\u70b9\u306b\u8ffd\u52a0\u3059\u308b")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\u9802\u70b9",(0,a.kt)("inlineCode",{parentName:"p"},"6"),"\u63a2\u7d22\u6e08\u307f\u3068\u3057\u3066\u8a18\u9332\u3059\u308b\u3002\n",(0,a.kt)("img",{alt:"\u30a4\u30e1\u30fc\u30b8\u56f3",src:n(6218).Z,title:"\u624b\u98063\u5f8c\u306e\u6728\u69cb\u9020",width:"555",height:"201"}),"\n\u9802\u70b9",(0,a.kt)("inlineCode",{parentName:"p"},"6"),"\u3068\u7e4b\u304c\u3063\u3066\u3044\u308b\u9802\u70b9",(0,a.kt)("inlineCode",{parentName:"p"},"8"),"\u3092\u6b21\u306e\u63a2\u7d22\u70b9\u306b\u8ffd\u52a0\u3059\u308b")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\u9802\u70b9",(0,a.kt)("inlineCode",{parentName:"p"},"8"),"\u63a2\u7d22\u6e08\u307f\u3068\u3057\u3066\u8a18\u9332\u3059\u308b\u3002\n",(0,a.kt)("img",{alt:"\u30a4\u30e1\u30fc\u30b8\u56f3",src:n(1658).Z,title:"\u624b\u98064\u5f8c\u306e\u6728\u69cb\u9020",width:"555",height:"201"}),"\n\u9802\u70b9",(0,a.kt)("inlineCode",{parentName:"p"},"8"),"\u3068\u7e4b\u304c\u3063\u3066\u3044\u308b\u9802\u70b9\u306f\u5b58\u5728\u3057\u306a\u3044\u306e\u3067\u4f55\u3082\u8ffd\u52a0\u3057\u306a\u3044")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\u9802\u70b9",(0,a.kt)("inlineCode",{parentName:"p"},"7"),"\u63a2\u7d22\u6e08\u307f\u3068\u3057\u3066\u8a18\u9332\u3059\u308b\u3002\n",(0,a.kt)("img",{alt:"\u30a4\u30e1\u30fc\u30b8\u56f3",src:n(6437).Z,title:"\u624b\u98065\u5f8c\u306e\u6728\u69cb\u9020",width:"555",height:"201"}),"\n\u9802\u70b9",(0,a.kt)("inlineCode",{parentName:"p"},"7"),"\u3068\u7e4b\u304c\u3063\u3066\u3044\u308b\u9802\u70b9\u306f\u5b58\u5728\u3057\u306a\u3044\u306e\u3067\u4f55\u3082\u8ffd\u52a0\u3057\u306a\u3044")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\u9802\u70b9",(0,a.kt)("inlineCode",{parentName:"p"},"2"),"\u63a2\u7d22\u6e08\u307f\u3068\u3057\u3066\u8a18\u9332\u3059\u308b\u3002\n",(0,a.kt)("img",{alt:"\u30a4\u30e1\u30fc\u30b8\u56f3",src:n(2627).Z,title:"\u624b\u98066\u5f8c\u306e\u6728\u69cb\u9020",width:"555",height:"201"}),"\n\u9802\u70b9",(0,a.kt)("inlineCode",{parentName:"p"},"2"),"\u3068\u7e4b\u304c\u3063\u3066\u3044\u308b\u9802\u70b9",(0,a.kt)("inlineCode",{parentName:"p"},"3"),"\u3092\u6b21\u306e\u63a2\u7d22\u70b9\u306b\u8ffd\u52a0\u3059\u308b")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\u9802\u70b9",(0,a.kt)("inlineCode",{parentName:"p"},"3"),"\u63a2\u7d22\u6e08\u307f\u3068\u3057\u3066\u8a18\u9332\u3059\u308b\u3002\n",(0,a.kt)("img",{alt:"\u30a4\u30e1\u30fc\u30b8\u56f3",src:n(6726).Z,title:"\u624b\u98067\u5f8c\u306e\u6728\u69cb\u9020",width:"555",height:"201"}),"\n\u9802\u70b9",(0,a.kt)("inlineCode",{parentName:"p"},"3"),"\u3068\u7e4b\u304c\u3063\u3066\u3044\u308b\u9802\u70b9",(0,a.kt)("inlineCode",{parentName:"p"},"5"),"\u3092\u6b21\u306e\u63a2\u7d22\u70b9\u306b\u8ffd\u52a0\u3059\u308b")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\u9802\u70b9",(0,a.kt)("inlineCode",{parentName:"p"},"5"),"\u63a2\u7d22\u6e08\u307f\u3068\u3057\u3066\u8a18\u9332\u3059\u308b\u3002\n",(0,a.kt)("img",{alt:"\u30a4\u30e1\u30fc\u30b8\u56f3",src:n(7372).Z,title:"\u624b\u98068\u5f8c\u306e\u6728\u69cb\u9020",width:"601",height:"201"}),"\n\u9802\u70b9",(0,a.kt)("inlineCode",{parentName:"p"},"5"),"\u3068\u7e4b\u304c\u3063\u3066\u3044\u308b\u9802\u70b9\u306f\u5b58\u5728\u3057\u306a\u3044\u306e\u3067\u4f55\u3082\u8ffd\u52a0\u3057\u306a\u3044"))),(0,a.kt)("h3",{id:"\u4f7f\u7528\u3059\u308b\u30c7\u30fc\u30bf\u69cb\u9020"},"\u4f7f\u7528\u3059\u308b\u30c7\u30fc\u30bf\u69cb\u9020"),(0,a.kt)("p",null,"\u6d41\u308c\u306e\u6b21\u306e\u63a2\u7d22\u70b9\u306e\u914d\u5217\u306e\u9806\u756a\u3092\u898b\u308b\u3068\u914d\u5217\u65b0\u305f\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u969b\u3082\u914d\u5217\u304b\u3089\u8981\u7d20\u3092\u53d6\u308a\u51fa\u3059\u969b\u3082\u4e00\u756a\u53f3\u5074\u3001\u8981\u7d20\u756a\u53f7\u306e\u4e00\u756a\u5f8c\u308d\u306e\u8981\u7d20\u306b\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u308b\u3002"),(0,a.kt)("p",null,"\u3064\u307e\u308a\u3001FILO \u306e\u52d5\u4f5c\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u3002\u3053\u306e FILO \u3092\u8868\u3059\u306e\u306b\u9069\u3057\u305f\u30c7\u30fc\u30bf\u69cb\u9020\u304c",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"/docs/Data-structure/stack"},"Stack")),"\u3067\u3042\u308b\u3002"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u6b21\u306e\u63a2\u7d22\u70b9\u306e\u914d\u5217\u306e\u4e00\u756a\u5f8c\u308d\u306e\u8981\u7d20\u3092\u53d6\u308a\u51fa\u3057\u3001\u63a2\u7d22\u3092\u884c\u3046"),(0,a.kt)("li",{parentName:"ul"},"\u63a2\u7d22\u3057\u305f\u969b\u306b\u65b0\u305f\u306a\u672a\u63a2\u7d22\u8981\u7d20\u304c\u898b\u3064\u304b\u3063\u305f\u3089\u3001\u6b21\u306e\u63a2\u7d22\u70b9\u306e\u914d\u5217\u306e\u5f8c\u308d\u306b\u8981\u7d20\u306e\u8ffd\u52a0\u3059\u308b")),(0,a.kt)("p",null,"\u4ee5\u4e0a\u306e 2 \u3064\u306e\u51e6\u7406\u3092\u884c\u3048\u308c\u3070\u6df1\u3055\u512a\u5148\u63a2\u7d22\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u305d\u306e\u305f\u3081\u3001\u305d\u308c\u305e\u308c Stack \u3092\u7528\u3044\u308b\u3068"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u6b21\u306e\u63a2\u7d22\u70b9\u306e\u914d\u5217\u306e\u4e00\u756a\u5f8c\u308d\u306e\u8981\u7d20\u3092",(0,a.kt)("inlineCode",{parentName:"li"},"pop"),"\u3057\uff08\u53d6\u308a\u51fa\u3057\uff09\u3001\u63a2\u7d22\u3092\u884c\u3046"),(0,a.kt)("li",{parentName:"ul"},"\u63a2\u7d22\u3057\u305f\u969b\u306b\u65b0\u305f\u306a\u672a\u63a2\u7d22\u8981\u7d20\u304c\u898b\u3064\u304b\u3063\u305f\u3089\u3001\u6b21\u306e\u63a2\u7d22\u70b9\u306e\u914d\u5217\u306e\u5f8c\u308d\u306b",(0,a.kt)("inlineCode",{parentName:"li"},"push"),"\uff08\u8981\u7d20\u306e\u8ffd\u52a0\uff09\u3059\u308b")),(0,a.kt)("p",null,"\u3068\u8a00\u3048\u308b\u306e\u3067 Stack \u3092\u7528\u3044\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002"),(0,a.kt)("h3",{id:"\u8d70\u67fb\u9806"},"\u8d70\u67fb\u9806"),(0,a.kt)("p",null,"\u6df1\u3055\u512a\u5148\u63a2\u7d22\u306b\u306f 3 \u7a2e\u985e\u306e\u8d70\u67fb\u9806\u304c\u5b58\u5728\u3059\u308b\u3002\u8d70\u67fb\u9806\u3068\u306f\u7c21\u5358\u306b\u3044\u3046\u3068\u3069\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u8a2a\u308c\u305f\u3053\u3068\u3092\u8a18\u9332\u3059\u308b\u304b\u3068\u3044\u3046\u3053\u3068\u3067\u3042\u308b\u3002\n\u63a2\u7d22\u3059\u308b\u9806\u756a\u306f\u540c\u3058\u3067\u3042\u308a(\u6839\u304b\u3089\u6728\u69cb\u9020\u306e\u5de6\u306b\u6cbf\u3046\u5f62)\u3001\u8a2a\u308c\u305f\u756a\u53f7\u306e\u8a18\u9332\u9806\u304c\u7570\u306a\u308b\u3002"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u884c\u304d\u304c\u3051\u9806(\u9802\u70b9\u306b\u5230\u9054\u6642)"),(0,a.kt)("li",{parentName:"ul"},"\u901a\u308a\u304c\u3051\u9806(\u5de6\u90e8\u5206\u6728\u3092\u8d70\u67fb\u7d42\u4e86\u6642)"),(0,a.kt)("li",{parentName:"ul"},"\u5e30\u308a\u304c\u3051\u9806(\u90e8\u5206\u6728\u3092\u8d70\u67fb\u7d42\u4e86\u6642)")),(0,a.kt)("p",null,"\u305d\u308c\u305e\u308c\u306e\u8d70\u67fb\u9806\u5e8f\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\u3002(\u4e0a\u306e\u6d41\u308c\u306e\u8a18\u9332(\u63a2\u7d22\u6e08\u307f\u70b9\u306e\u4e26\u3073)\u306f\u884c\u304d\u304c\u3051\u9806\u3067\u3042\u308b)"),(0,a.kt)("p",null,"\u305d\u308c\u305e\u308c\u306e\u8d70\u67fb\u9806\u306e\u9055\u3044\u3092\u6b21\u306e\u56f3\u3092\u30d9\u30fc\u30b9\u306b\u78ba\u8a8d\u3059\u308b\u3002\u8d64\u70b9\u7dda\u306b\u6cbf\u3063\u3066\u9802\u70b9\u3092\u8a2a\u308c\u308b\u3068\u3059\u308b\u3002"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"\u30a4\u30e1\u30fc\u30b8\u56f3",src:n(4080).Z,title:"\u6728\u69cb\u9020\u30d9\u30fc\u30b9",width:"587",height:"561"})),(0,a.kt)("p",null,"\u8a18\u9332\u3059\u308b\u9806\u756a\u306f\u9802\u70b9\u306b\u3064\u3044\u3066\u308b\u9752\u8272\u306e\u4e38\u3092\u901a\u3063\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u9802\u70b9\u3092\u8a18\u9332\u3059\u308b\u3002"),(0,a.kt)("h4",{id:"\u884c\u304d\u304c\u3051\u9806"},"\u884c\u304d\u304c\u3051\u9806"),(0,a.kt)("p",null,"\u9802\u70b9\u306b\u8a2a\u308c\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u63a2\u7d22\u6e08\u307f\u3068\u3059\u308b\u8d70\u67fb\u9806"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"\u30a4\u30e1\u30fc\u30b8\u56f3",src:n(878).Z,title:"\u884c\u304d\u304c\u3051\u9806",width:"587",height:"561"})),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"1 \u2192 3 \u2192 6 \u2192 5 \u2192 7 \u2192 2 \u2192 4"),"\u306e\u9806\u306b\u8a18\u9332\u3055\u308c\u308b\u3002"),(0,a.kt)("h4",{id:"\u901a\u308a\u304c\u3051\u9806"},"\u901a\u308a\u304c\u3051\u9806"),(0,a.kt)("p",null,"\u5de6\u90e8\u5206\u6728\u3092\u8d70\u67fb\u3057\u7d42\u3048\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u63a2\u7d22\u6e08\u307f\u3068\u3059\u308b\u8d70\u67fb\u9806(\u591a\u5206\u6728\u3067\u306f\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044)"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"\u30a4\u30e1\u30fc\u30b8\u56f3",src:n(6762).Z,title:"\u901a\u308a\u304c\u3051\u9806",width:"587",height:"561"})),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"6 \u2192 3 \u2192 7 \u2192 5 \u2192 1 \u2192 2 \u2192 4"),"\u306e\u9806\u306b\u8a18\u9332\u3055\u308c\u308b\u3002"),(0,a.kt)("h4",{id:"\u5e30\u308a\u304c\u3051\u9806"},"\u5e30\u308a\u304c\u3051\u9806"),(0,a.kt)("p",null,"\u5168\u3066\u306e\u5b50\u30ce\u30fc\u30c9\u3092\u8a2a\u308c\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u63a2\u7d22\u6e08\u307f\u3068\u3059\u308b\u8d70\u67fb\u9806"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"\u30a4\u30e1\u30fc\u30b8\u56f3",src:n(5997).Z,title:"\u5e30\u308a\u304c\u3051\u9806",width:"587",height:"561"})),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"6 \u2192 7 \u2192 5 \u2192 3 \u2192 4 \u2192 2 \u2192 1"),"\u306e\u9806\u306b\u8a18\u9332\u3055\u308c\u308b\u3002"),(0,a.kt)("h3",{id:"\u30d7\u30ed\u30b0\u30e9\u30e0"},"\u30d7\u30ed\u30b0\u30e9\u30e0"),(0,a.kt)("p",null,"\u63a2\u7d22\u6e08\u307f\u3092\u8a18\u9332\u3059\u308b\u306b\u306f\u518d\u5e30\u51e6\u7406\u3092\u7528\u3044\u308b\u3068\u697d\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002"),(0,a.kt)("h4",{id:"\u884c\u304d\u304c\u3051\u9806-1"},"\u884c\u304d\u304c\u3051\u9806"),(0,a.kt)(o.Z,{groupId:"code",mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="depth-first-search-pre-order.py"',title:'"depth-first-search-pre-order.py"'},"from collections import deque\n\ndef DFS(s ,p = -1):\n    # \u63a2\u7d22\u5bfe\u8c61\u306b\u5165\u3063\u305f\u6642\u306b\u8a18\u9332\u3059\u308b\n    record.append(s)\n    for to in graph[s]:\n        # \u89aa\u8981\u7d20\u306b\u306f\u63a2\u7d22\u3057\u306a\u3044\n        if to == p:\n            continue\n        DFS(to,s)\nbox = [[1,3],[1,2],[3,5],[3,6],[5,7],[2,4]]\ngraph = [[] for _ in range(7)]\n\n# \u7121\u5411\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\nfor i in range(len(box)):\n    graph[box[i][0]-1].append(box[i][1]-1)\n    graph[box[i][1]-1].append(box[i][0]-1)\n\nrecord = []\nDFS(0)\n"))),(0,a.kt)(l.Z,{value:"C++",label:"C++",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="depth-first-search-pre-order.cpp"',title:'"depth-first-search-pre-order.cpp"'},"vector<int> record;\nvector<vector<int>> graph(7);\n\nvoid DFS(int s, int p = -1){\n    // \u63a2\u7d22\u5bfe\u8c61\u306b\u5165\u3063\u305f\u6642\u306b\u8a18\u9332\u3059\u308b\n    record.push_back(s);\n    for(auto to: graph[s]){\n        // \u89aa\u8981\u7d20\u306b\u306f\u63a2\u7d22\u3057\u306a\u3044\n        if (to == p) continue;\n        DFS(to, s);\n    }\n}\n\nint main() {\n\n    vector<pair<int,int>> box = {{1,3},{1,2},{3,5},{3,6},{5,7},{2,4}};\n    // \u7121\u5411\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\n    for(int i = 0; i < box.size();++i){\n        graph[box[i].first-1].push_back(box[i].second-1);\n        graph[box[i].second-1].push_back(box[i].first-1);\n    }\n\n    DFS(0);\n    return 0;\n}\n"))),(0,a.kt)(l.Z,{value:"C#",label:"C#",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="depth-first-search-pre-order.cs"',title:'"depth-first-search-pre-order.cs"'},"static List<int> record = new List<int>();\nstatic List<List<int>> graph = new List<List<int>>();\n\npublic static void Main(string[] args)\n{\n    int[,] box = new int[,] { { 1, 3 }, { 1, 2 }, { 3, 5 }, { 3, 6 }, { 5, 7 }, { 2, 4 } };\n\n    for (int i = 0;i < 7; ++i)\n    {\n        graph.Add(new List<int>());\n    }\n\n    //\u7121\u5411\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\n    for (int i = 0; i < box.Length/2; ++i)\n    {\n        graph[box[i, 0] - 1].Add(box[i, 1] - 1);\n        graph[box[i, 1] - 1].Add(box[i, 0] - 1);\n    }\n    DFS(0);\n}\n\nstatic void DFS(int s, int p = -1)\n{\n    // \u63a2\u7d22\u5bfe\u8c61\u306b\u5165\u3063\u305f\u6642\u306b\u8a18\u9332\u3059\u308b\n    record.Add(s);\n    foreach(int to in graph[s])\n    {\n        // \u89aa\u8981\u7d20\u306b\u306f\u63a2\u7d22\u3057\u306a\u3044\n        if (to == p) continue;\n        DFS(to, s);\n    }\n}\n")))),(0,a.kt)("h4",{id:"\u901a\u308a\u304c\u3051\u9806-1"},"\u901a\u308a\u304c\u3051\u9806"),(0,a.kt)("p",null,"\u901a\u308a\u304c\u3051\u9806\u306f 2 \u5206\u6728\u306e\u5834\u5408\u306e\u307f\u8868\u73fe\u3067\u304d\u308b\u8d70\u67fb\u9806\u3067\u3042\u308b\u3002\u305d\u306e\u305f\u3081\u3001",(0,a.kt)("inlineCode",{parentName:"p"},"\u884c\u304d\u304c\u3051\u9806"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"\u5e30\u308a\u304c\u3051\u9806"),"\u3068\u306f\u7570\u306a\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u306a\u308b\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"\u884c\u304d\u304c\u3051\u9806"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"\u5e30\u308a\u304c\u3051\u9806"),"\u306f\u591a\u5206\u6728\u3067\u3082\u540c\u69d8\u306b\u52d5\u4f5c\u3057\u307e\u3059\u3002"),(0,a.kt)(o.Z,{groupId:"code",mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="depth-first-search-in-order.py"',title:'"depth-first-search-in-order.py"'},"class tree:\n    def __init__(self,value):\n\n        self.left :tree = None\n        self.right :tree = None\n        self.value = value\ndef DFS(s : tree):\n    if s == None :return\n    # \u884c\u304d\u304c\u3051\u9806\u306a\u3089\u3053\u3053\u3067\u8ffd\u52a0\n    DFS(s.left)\n    # \u901a\u308a\u304c\u3051\u9806\u306a\u306e\u3067\u3053\u3053\u3067\u8ffd\u52a0\n    record.append(s.value)\n    DFS(s.right)\n    # \u5e30\u308a\u304c\u3051\u9806\u306a\u3089\u3053\u3053\u3067\u8ffd\u52a0\n\nroot = tree(0)\nroot.left = tree(2)\nroot.left.left = tree(5)\nroot.left.right = tree(4)\nroot.left.right.left = tree(6)\nroot.right = tree(1)\nroot.right.right = tree(3)\n\nrecord = []\nDFS(root)\n"))),(0,a.kt)(l.Z,{value:"C++",label:"C++",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="depth-first-search-in-order.cpp"',title:'"depth-first-search-in-order.cpp"'},"vector<int> record;\n\nstruct tree\n{\n    tree *left, *right;\n    int value;\n\n    tree() {}\n    tree(const int &val) : tree(nullptr, nullptr, val) {}\n    tree(tree *left_, tree *right_, const int &val_) : left(left_), right(right_), value(val_) {}\n};\n\nvoid DFS(tree *s)\n{\n    if (s == nullptr)\n        return;\n    // \u884c\u304d\u304c\u3051\u9806\u306a\u3089\u3053\u3053\u3067\u8ffd\u52a0\n    DFS(s->left);\n    // \u901a\u308a\u304c\u3051\u9806\u306a\u306e\u3067\u3053\u3053\u3067\u8ffd\u52a0\n    record.push_back(s->value);\n    DFS(s->right);\n    // \u5e30\u308a\u304c\u3051\u9806\u306a\u3089\u3053\u3053\u3067\u8ffd\u52a0\n}\n\nint main()\n{\n    tree *root = new tree(0);\n    root->left = new tree(2);\n    root->left->left = new tree(5);\n    root->left->right = new tree(4);\n    root->left->right->left = new tree(6);\n    root->right = new tree(1);\n    root->right->right = new tree(3);\n\n    DFS(root);\n\n    return 0;\n}\n\n"))),(0,a.kt)(l.Z,{value:"C#",label:"C#",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="depth-first-search-in-order.cs"',title:'"depth-first-search-in-order.cs"'},"static List<int> record = new List<int>();\n\npublic static void Main(string[] args)\n{\n    tree root = new tree(0);\n    root.left = new tree(2);\n    root.left.left = new tree(5);\n    root.left.right = new tree(4);\n    root.left.right.left = new tree(6);\n    root.right = new tree(1);\n    root.right.right = new tree(3);\n\n    DFS(root);\n}\n\nstatic void DFS(tree root)\n{\n    if (root != null)\n    {\n        // \u884c\u304d\u304c\u3051\u9806\u306a\u3089\u3053\u3053\u3067\u8ffd\u52a0\n        DFS(root.left);\n        // \u901a\u308a\u304c\u3051\u9806\u306a\u306e\u3067\u3053\u3053\u3067\u8ffd\u52a0\n        record.Add(root.value);\n        // \u5e30\u308a\u304c\u3051\u9806\u306a\u3089\u3053\u3053\u3067\u8ffd\u52a0\n        DFS(root.right);\n    }\n}\n")))),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"\u884c\u304d\u304c\u3051\u9806"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"\u5e30\u308a\u304c\u3051\u9806"),"\u3068\u3082\u306b\u8ffd\u52a0\u3059\u308b\u4f4d\u7f6e\u3092\u5909\u3048\u308b\u3060\u3051\u3067\u304d\u308b(2 \u5206\u6728\u306e\u5834\u5408\u306e\u307f)\u3002\n\u30dd\u30a4\u30f3\u30bf\u30fc\u3084\u53c2\u7167 ID \u306a\u3069\u8003\u3048\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3067\u3001\u5b9f\u88c5\u3068\u3057\u3066\u306f\u3084\u3084\u91cd\u3081\u3060\u3068\u601d\u3046\u3002"),(0,a.kt)("h4",{id:"\u5e30\u308a\u304c\u3051\u9806-1"},"\u5e30\u308a\u304c\u3051\u9806"),(0,a.kt)(o.Z,{groupId:"code",mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="depth-first-search-post-order.py"',title:'"depth-first-search-post-order.py"'},"from collections import deque\n\ndef DFS(s ,p = -1):\n\n    for to in graph[s]:\n        # \u89aa\u8981\u7d20\u306b\u306f\u63a2\u7d22\u3057\u306a\u3044\n        if to == p:\n            continue\n        DFS(to,s)\n    # \u63a2\u7d22\u3092\u7d42\u3048\u305f\u6642\u306b\u8a18\u9332\u3059\u308b\n    record.append(s)\nbox = [[1,3],[1,2],[3,5],[3,6],[5,7],[2,4]]\ngraph = [[] for _ in range(7)]\n\n# \u7121\u5411\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\nfor i in range(len(box)):\n    graph[box[i][0]-1].append(box[i][1]-1)\n    graph[box[i][1]-1].append(box[i][0]-1)\n\nrecord = []\nDFS(0)\n"))),(0,a.kt)(l.Z,{value:"C++",label:"C++",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="depth-first-search-post-order.cpp"',title:'"depth-first-search-post-order.cpp"'},'vector<int> record;\nvector<vector<int>> graph(7);\n\nvoid DFS(int s, int p = -1){\n\n    for(auto to: graph[s]){\n        // \u89aa\u8981\u7d20\u306b\u306f\u63a2\u7d22\u3057\u306a\u3044\n        if (to == p) continue;\n        DFS(to, s);\n    }\n    // \u63a2\u7d22\u3092\u7d42\u3048\u305f\u6642\u306b\u8a18\u9332\u3059\u308b\n    record.push_back(s);\n}\n\nint main() {\n\n    vector<pair<int,int>> box = {{1,3},{1,2},{3,5},{3,6},{5,7},{2,4}};\n    // \u7121\u5411\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\n    for(int i = 0; i < box.size();++i){\n        graph[box[i].first-1].push_back(box[i].second-1);\n        graph[box[i].second-1].push_back(box[i].first-1);\n    }\n\n    DFS(0);\n    rep(i, 0, record.size()) printf("%d ", record[i]);\n\n    return 0;\n}\n'))),(0,a.kt)(l.Z,{value:"C#",label:"C#",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="depth-first-search-post-order.cs"',title:'"depth-first-search-post-order.cs"'},'static List<int> record = new List<int>();\nstatic List<List<int>> graph = new List<List<int>>();\n\npublic static void Main(string[] args)\n{\n    int[,] box = new int[,] { { 1, 3 }, { 1, 2 }, { 3, 5 }, { 3, 6 }, { 5, 7 }, { 2, 4 } };\n\n    for (int i = 0;i < 7; ++i)\n    {\n        graph.Add(new List<int>());\n    }\n\n    //\u7121\u5411\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\n    for (int i = 0; i < box.Length/2; ++i)\n    {\n        graph[box[i, 0] - 1].Add(box[i, 1] - 1);\n        graph[box[i, 1] - 1].Add(box[i, 0] - 1);\n    }\n    DFS(0);\n\n    for(int i = 0; i< record.Count; ++i)\n    {\n        Console.Write(record[i] + " ");\n    }\n}\n\nstatic void DFS(int s, int p = -1)\n{\n\n    foreach(int to in graph[s])\n    {\n        // \u89aa\u8981\u7d20\u306b\u306f\u63a2\u7d22\u3057\u306a\u3044\n        if (to == p) continue;\n        DFS(to, s);\n    }\n    // \u63a2\u7d22\u3092\u7d42\u3048\u305f\u6642\u306b\u8a18\u9332\u3059\u308b\n    record.Add(s);\n}\n')))),(0,a.kt)("p",null,"\u63a2\u7d22\u6e08\u307f\u3092\u8a18\u9332\u3057\u306a\u3044\u5834\u5408\u306f\u518d\u5e30\u51e6\u7406\u3092\u4f7f\u308f\u305a\u306b\u6b21\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u3002"),(0,a.kt)(o.Z,{groupId:"code",mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="depth-first-search.py"',title:'"depth-first-search.py"'},"from collections import deque\nbox = [[1,2],[1,4],[2,3],[3,5],[4,7],[4,6],[6,8]]\ngraph = [[] for _ in range(8)]\n\n# \u6709\u5411\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\nfor i in range(len(box)):\n    graph[box[i][0]-1].append(box[i][1]-1)\n\n# stack\u3092\u4f5c\u6210\nq = deque()\n\n# \u9802\u70b91\u756a\u3092\u8ffd\u52a0\nq.append(0)\n\n# \u9802\u70b91\u304b\u3089\u306e\u8ddd\u96e2\u3092\u8a18\u9332\u3059\u308b\u914d\u5217\ndist = [-1] * 8\ndist[0] = 0\nwhile (len(q) > 0):\n\n    # pop\n    pos = q.pop()\n    for to in graph[pos]:\n\n        # \u672a\u63a2\u7d22\u30c1\u30a7\u30c3\u30af\n        if dist[to] == -1:\n            dist[to] = dist[pos] + 1\n\n            # push\n            q.append(to)\n\n\n"))),(0,a.kt)(l.Z,{value:"C++",label:"C++",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="depth-first-search.cpp"',title:'"depth-first-search.cpp"'},"int main() {\n    vector<pair<int,int>> box = {{1,2},{1,4},{2,3},{3,5},{4,7},{4,6},{6,8}};\n    vector<vector<int>> graph(8);\n    // \u6709\u5411\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\n    for(int i = 0; i < box.size();++i){\n        graph[box[i].first-1].push_back(box[i].second-1);\n    }\n\n    // stack\u3092\u4f5c\u6210\n    stack<int> q;\n\n    // \u9802\u70b91\u756a\u3092\u8ffd\u52a0\n    q.push(0);\n\n    // \u9802\u70b91\u304b\u3089\u306e\u8ddd\u96e2\u3092\u8a18\u9332\u3059\u308b\u914d\u5217\n    vector<int> dist(8,-1);\n    dist[0] = 0;\n\n    while (!q.empty())\n    {\n        // pop\n        int pos = q.top();q.pop();\n        for (auto to: graph[pos]){\n            if (dist[to] == -1){\n                dist[to] = dist[pos] + 1;\n\n                // push\n                q.push(to);\n            }\n        }\n    }\n\n    return 0;\n}\n"))),(0,a.kt)(l.Z,{value:"C#",label:"C#",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="depth-first-search.cs"',title:'"depth-first-search.cs"'},"public static void Main(string[] args)\n{\n    int[,] box = new int[,] { { 1, 2 }, { 1, 4 }, { 2, 3 }, { 3, 5 }, { 4, 7 }, { 4, 6 }, { 6, 8 } };\n    List<List<int>> graph = new List<List<int>>();\n    for (int i = 0;i < 8; ++i)\n    {\n        graph.Add(new List<int>());\n    }\n\n    for (int i = 0; i < box.Length/2; ++i)\n    {\n        graph[box[i, 0] - 1].Add(box[i, 1] - 1);\n    }\n\n    // stack\u3092\u4f5c\u6210\n    Stack<int> q = new Stack<int>();\n\n    // \u9802\u70b91\u756a\u3092\u8ffd\u52a0\n    q.Push(0);\n\n    // \u9802\u70b91\u304b\u3089\u306e\u8ddd\u96e2\u3092\u8a18\u9332\u3059\u308b\u914d\u5217\n    int[] dist = new int[8];\n    for (int i = 0; i < dist.Length; ++i) dist[i] = -1;\n    dist[0] = 0;\n\n    while (q.Count > 0)\n    {\n        // pop\n        int pos = q.Pop();\n        foreach (int to in graph[pos])\n        {\n            if (dist[to] == -1)\n            {\n                dist[to] = dist[pos] + 1;\n\n                // push\n                q.Push(to);\n            }\n        }\n    }\n\n}\n")))))}m.isMDXComponent=!0},5269:function(e,t,n){t.Z=n.p+"assets/images/depth-1.drawio-347f1316f3bb85efe2bfbe85b5d99196.svg"},4080:function(e,t,n){t.Z=n.p+"assets/images/depth-10.drawio-0da22f32fbf11291ca45a54535b1d4ee.svg"},878:function(e,t,n){t.Z=n.p+"assets/images/depth-11.drawio-14c30f4a7bd45142ddbcf4c2ebd0e34f.svg"},6762:function(e,t,n){t.Z=n.p+"assets/images/depth-12.drawio-69bf6544cce7762fc5a3ed4b436c901e.svg"},5997:function(e,t,n){t.Z=n.p+"assets/images/depth-13.drawio-fdca9796df7ca08afceb7b00d12f1fa8.svg"},5250:function(e,t,n){t.Z=n.p+"assets/images/depth-2.drawio-72d0ac74d3748248177f23cccd783150.svg"},6361:function(e,t,n){t.Z=n.p+"assets/images/depth-3.drawio-6e4a26c1e1031f04e97221aba6c6ef87.svg"},6218:function(e,t,n){t.Z=n.p+"assets/images/depth-4.drawio-349ee299b5f4dd4d28f24bd12affb72b.svg"},1658:function(e,t,n){t.Z=n.p+"assets/images/depth-5.drawio-c6f023de6d0a90437a90461fa108db66.svg"},6437:function(e,t,n){t.Z=n.p+"assets/images/depth-6.drawio-93d6825f0ef098a00f4c98929f6c3d85.svg"},2627:function(e,t,n){t.Z=n.p+"assets/images/depth-7.drawio-24417a51bdfaaf8dde9bf4860f2b4f17.svg"},6726:function(e,t,n){t.Z=n.p+"assets/images/depth-8.drawio-8b610ecdacc207c9a428a39df1f13bed.svg"},7372:function(e,t,n){t.Z=n.p+"assets/images/depth-9.drawio-4fb4b3baecf716f5c35ae213c3f5dad8.svg"}}]);