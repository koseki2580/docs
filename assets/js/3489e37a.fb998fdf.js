"use strict";(self.webpackChunkstudy_doxs=self.webpackChunkstudy_doxs||[]).push([[5866],{3905:(n,e,t)=>{t.d(e,{Zo:()=>o,kt:()=>N});var a=t(7294);function s(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function p(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function r(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?p(Object(t),!0).forEach((function(e){s(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function i(n,e){if(null==n)return{};var t,a,s=function(n,e){if(null==n)return{};var t,a,s={},p=Object.keys(n);for(a=0;a<p.length;a++)t=p[a],e.indexOf(t)>=0||(s[t]=n[t]);return s}(n,e);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(n);for(a=0;a<p.length;a++)t=p[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(s[t]=n[t])}return s}var m=a.createContext({}),l=function(n){var e=a.useContext(m),t=e;return n&&(t="function"==typeof n?n(e):r(r({},e),n)),t},o=function(n){var e=l(n.components);return a.createElement(m.Provider,{value:e},n.children)},c={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(n,e){var t=n.components,s=n.mdxType,p=n.originalType,m=n.parentName,o=i(n,["components","mdxType","originalType","parentName"]),u=l(t),N=s,k=u["".concat(m,".").concat(N)]||u[N]||c[N]||p;return t?a.createElement(k,r(r({ref:e},o),{},{components:t})):a.createElement(k,r({ref:e},o))}));function N(n,e){var t=arguments,s=e&&e.mdxType;if("string"==typeof n||s){var p=t.length,r=new Array(p);r[0]=u;var i={};for(var m in e)hasOwnProperty.call(e,m)&&(i[m]=e[m]);i.originalType=n,i.mdxType="string"==typeof n?n:s,r[1]=i;for(var l=2;l<p;l++)r[l]=t[l];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5162:(n,e,t)=>{t.d(e,{Z:()=>r});var a=t(7294),s=t(6010);const p="tabItem_Ymn6";function r(n){let{children:e,hidden:t,className:r}=n;return a.createElement("div",{role:"tabpanel",className:(0,s.Z)(p,r),hidden:t},e)}},4866:(n,e,t)=>{t.d(e,{Z:()=>w});var a=t(7462),s=t(7294),p=t(6010),r=t(2466),i=t(6550),m=t(1980),l=t(7392),o=t(12);function c(n){return function(n){return s.Children.map(n,(n=>{if((0,s.isValidElement)(n)&&"value"in n.props)return n;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof n.type?n.type:n.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(n).map((n=>{let{props:{value:e,label:t,attributes:a,default:s}}=n;return{value:e,label:t,attributes:a,default:s}}))}function u(n){const{values:e,children:t}=n;return(0,s.useMemo)((()=>{const n=e??c(t);return function(n){const e=(0,l.l)(n,((n,e)=>n.value===e.value));if(e.length>0)throw new Error(`Docusaurus error: Duplicate values "${e.map((n=>n.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(n),n}),[e,t])}function N(n){let{value:e,tabValues:t}=n;return t.some((n=>n.value===e))}function k(n){let{queryString:e=!1,groupId:t}=n;const a=(0,i.k6)(),p=function(n){let{queryString:e=!1,groupId:t}=n;if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,m._X)(p),(0,s.useCallback)((n=>{if(!p)return;const e=new URLSearchParams(a.location.search);e.set(p,n),a.replace({...a.location,search:e.toString()})}),[p,a])]}function h(n){const{defaultValue:e,queryString:t=!1,groupId:a}=n,p=u(n),[r,i]=(0,s.useState)((()=>function(n){let{defaultValue:e,tabValues:t}=n;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!N({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map((n=>n.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const a=t.find((n=>n.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:e,tabValues:p}))),[m,l]=k({queryString:t,groupId:a}),[c,h]=function(n){let{groupId:e}=n;const t=function(n){return n?`docusaurus.tab.${n}`:null}(e),[a,p]=(0,o.Nk)(t);return[a,(0,s.useCallback)((n=>{t&&p.set(n)}),[t,p])]}({groupId:a}),d=(()=>{const n=m??c;return N({value:n,tabValues:p})?n:null})();(0,s.useLayoutEffect)((()=>{d&&i(d)}),[d]);return{selectedValue:r,selectValue:(0,s.useCallback)((n=>{if(!N({value:n,tabValues:p}))throw new Error(`Can't select invalid tab value=${n}`);i(n),l(n),h(n)}),[l,h,p]),tabValues:p}}var d=t(2389);const g="tabList__CuJ",b="tabItem_LNqP";function v(n){let{className:e,block:t,selectedValue:i,selectValue:m,tabValues:l}=n;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.o5)(),u=n=>{const e=n.currentTarget,t=o.indexOf(e),a=l[t].value;a!==i&&(c(e),m(a))},N=n=>{var e;let t=null;switch(n.key){case"Enter":u(n);break;case"ArrowRight":{const e=o.indexOf(n.currentTarget)+1;t=o[e]??o[0];break}case"ArrowLeft":{const e=o.indexOf(n.currentTarget)-1;t=o[e]??o[o.length-1];break}}null==(e=t)||e.focus()};return s.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,p.Z)("tabs",{"tabs--block":t},e)},l.map((n=>{let{value:e,label:t,attributes:r}=n;return s.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===e?0:-1,"aria-selected":i===e,key:e,ref:n=>o.push(n),onKeyDown:N,onClick:u},r,{className:(0,p.Z)("tabs__item",b,null==r?void 0:r.className,{"tabs__item--active":i===e})}),t??e)})))}function f(n){let{lazy:e,children:t,selectedValue:a}=n;if(t=Array.isArray(t)?t:[t],e){const n=t.find((n=>n.props.value===a));return n?(0,s.cloneElement)(n,{className:"margin-top--md"}):null}return s.createElement("div",{className:"margin-top--md"},t.map(((n,e)=>(0,s.cloneElement)(n,{key:e,hidden:n.props.value!==a}))))}function x(n){const e=h(n);return s.createElement("div",{className:(0,p.Z)("tabs-container",g)},s.createElement(v,(0,a.Z)({},n,e)),s.createElement(f,(0,a.Z)({},n,e)))}function w(n){const e=(0,d.Z)();return s.createElement(x,(0,a.Z)({key:String(e)},n))}},7936:(n,e,t)=>{t.d(e,{Z:()=>s});var a=t(7294);function s(n){let{children:e,color:t}=n;return a.createElement("span",{style:{color:t}},e)}},7718:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>m,default:()=>N,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var a=t(7462),s=(t(7294),t(3905)),p=t(4866),r=t(5162);t(7936);const i={title:"\u30c0\u30d6\u30ea\u30f3\u30b0",sidebar_label:"\u30c0\u30d6\u30ea\u30f3\u30b0",draft:!1,toc_max_heading_level:5,tags:["\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0"]},m=void 0,l={unversionedId:"Algorithm/doubling",id:"Algorithm/doubling",title:"\u30c0\u30d6\u30ea\u30f3\u30b0",description:"\u30c0\u30d6\u30ea\u30f3\u30b0\u3068\u306f",source:"@site/docs/00-Algorithm/08-doubling.md",sourceDirName:"00-Algorithm",slug:"/Algorithm/doubling",permalink:"/study-docs/docs/Algorithm/doubling",draft:!1,editUrl:"https://github.com/koseki2580/study-docs/edit/main/docs/00-Algorithm/08-doubling.md",tags:[{label:"\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0",permalink:"/study-docs/docs/tags/\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0"}],version:"current",lastUpdatedBy:"koseki2580",lastUpdatedAt:1678100067,formattedLastUpdatedAt:"2023\u5e743\u67086\u65e5",sidebarPosition:8,frontMatter:{title:"\u30c0\u30d6\u30ea\u30f3\u30b0",sidebar_label:"\u30c0\u30d6\u30ea\u30f3\u30b0",draft:!1,toc_max_heading_level:5,tags:["\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0"]},sidebar:"AlgorithmSidebar",previous:{title:"\u5ea7\u6a19\u5727\u7e2e",permalink:"/study-docs/docs/Algorithm/coordinate-compression"},next:{title:"\u30c0\u30a4\u30af\u30b9\u30c8\u30e9\u6cd5",permalink:"/study-docs/docs/Algorithm/dijkstra"}},o={},c=[{value:"\u30c0\u30d6\u30ea\u30f3\u30b0\u3068\u306f",id:"\u30c0\u30d6\u30ea\u30f3\u30b0\u3068\u306f",level:2},{value:"\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0",id:"\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0",level:3},{value:"\u6d41\u308c",id:"\u6d41\u308c",level:4},{value:"\u30d7\u30ed\u30b0\u30e9\u30e0",id:"\u30d7\u30ed\u30b0\u30e9\u30e0",level:4},{value:"\u524d\u51e6\u7406",id:"\u524d\u51e6\u7406",level:5},{value:"\u30af\u30a8\u30ea",id:"\u30af\u30a8\u30ea",level:4},{value:"\u53c2\u8003",id:"\u53c2\u8003",level:2}],u={toc:c};function N(n){let{components:e,...i}=n;return(0,s.kt)("wrapper",(0,a.Z)({},u,i,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"\u30c0\u30d6\u30ea\u30f3\u30b0\u3068\u306f"},"\u30c0\u30d6\u30ea\u30f3\u30b0\u3068\u306f"),(0,s.kt)("p",null,"\u3042\u308b\u8981\u7d20\u306e K \u500b\u5148\u306e\u79fb\u52d5\u5148\u3092\u9ad8\u901f\u3067\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3042\u308b\u3002\n\u524d\u51e6\u7406\u3067\u79fb\u52d5\u5148\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3057\u3001\u30c6\u30fc\u30d6\u30eb\u3092\u7528\u3044\u3066\u9ad8\u901f\u3067\u30af\u30a8\u30ea\u3092\u51e6\u7406\u3059\u308b\u3002"),(0,s.kt)("p",null,"\u524d\u51e6\u7406\u306b\u306f\u5168\u8981\u7d20\u3092 N \u3068\u3057\u3001K \u500b\u5148\u306e\u8981\u7d20\u3092\u6c42\u3081\u308b\u5834\u5408\u306f O(N ",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow"},"l"),(0,s.kt)("mi",{parentName:"mrow"},"o"),(0,s.kt)("mi",{parentName:"mrow"},"g"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,s.kt)("mi",{parentName:"mrow"},"K"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"log(K)")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"g"),(0,s.kt)("span",{parentName:"span",className:"mopen"},"("),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07153em"}},"K"),(0,s.kt)("span",{parentName:"span",className:"mclose"},")"))))),")\u3067\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u3001\n\u30af\u30a8\u30ea\u306b\u5bfe\u3057\u3066\u306f O(",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow"},"l"),(0,s.kt)("mi",{parentName:"mrow"},"o"),(0,s.kt)("mi",{parentName:"mrow"},"g"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,s.kt)("mi",{parentName:"mrow"},"K"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"log(K)")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"g"),(0,s.kt)("span",{parentName:"span",className:"mopen"},"("),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07153em"}},"K"),(0,s.kt)("span",{parentName:"span",className:"mclose"},")"))))),")\u3067\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"\u30c0\u30d6\u30ea\u30f3\u30b0",src:t(9551).Z,title:"\u30c0\u30d6\u30ea\u30f3\u30b0",width:"361",height:"168"})),(0,s.kt)("h3",{id:"\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0"},"\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0"),(0,s.kt)("h4",{id:"\u6d41\u308c"},"\u6d41\u308c"),(0,s.kt)("p",null,"\u524d\u51e6\u7406\u3068\u3057\u3066\u3001\u3042\u308b\u8981\u7d20\u306e",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mn",{parentName:"msup"},"2"),(0,s.kt)("mi",{parentName:"msup"},"n"))),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"2^{n}")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6644em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord"},"2"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.6644em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"n"))))))))))))),"\u5148\u306e\u8981\u7d20\u3092\u8a08\u7b97\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u3053\u308c\u306f 2 \u9032\u6570\u306e\u6027\u8cea\u3092\u3046\u307e\u304f\u6d3b\u7528\u3059\u308b\u3053\u3068\u3067\u7dba\u9e97\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002"),(0,s.kt)("p",null,"\u30c0\u30d6\u30ea\u30f3\u30b0\u3092\u4f7f\u3063\u305f\u4f8b\u3068\u3057\u3066 LCA(Lowest Common Ancestor)\u3092\u8003\u3048\u308b\u3002\nLCA \u306f\u3042\u308b 2 \u3064\u306e\u8981\u7d20\u306e\u5171\u901a\u306e\u89aa(\u6df1\u3055\u304c\u5c0f\u3055\u3044)\u306e\u4e2d\u3067\u4e00\u756a\u8fd1\u3044(\u6df1\u3055\u304c\u5927\u304d\u3044)\u89aa\u3092\u63a2\u3059\u3082\u306e\u3067\u3042\u308b\u3002"),(0,s.kt)("p",null,"\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6728\u3092\u8003\u3048\u308b\u3002"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"\u30c0\u30d6\u30ea\u30f3\u30b0\u4f8b1",src:t(9033).Z,title:"\u30c0\u30d6\u30ea\u30f3\u30b0\u4f8b1",width:"692",height:"322"})),(0,s.kt)("p",null,"\u3053\u306e\u3088\u3046\u306a\u6728\u306e k \u500b\u524d(\u89aa)\u306e\u6728\u3092\u6c42\u3081\u308b\u3002\u521d\u3081\u306b 1 \u500b\u524d\u306e\u89aa\u3092\u6c42\u3081\u308b\u3002\n\u89aa\u304c\u5b58\u5728\u3057\u306a\u3044\u3082\u306e\u306b\u306f-1 \u3092\u4ee3\u5165\u3057\u3001\u5b58\u5728\u3057\u306a\u3044\u3053\u3068\u3092\u8868\u3059\u3002"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"1\u500b\u524d\u306e\u89aa",src:t(5069).Z,title:"1\u3064\u76ee\u524d\u306e\u89aa",width:"243",height:"723"})),(0,s.kt)("p",null,"1 \u500b\u524d\u306e\u89aa\u306f\u6df1\u3055\u512a\u5148\u63a2\u7d22\u3084\u5e45\u512a\u5148\u63a2\u7d22\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u7c21\u5358\u306b\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u307e\u305f\u30011 \u500b\u524d\u306e\u89aa\u306e 1 \u500b\u524d\u306e\u89aa\u306f 2 \u500b\u524d\u306e\u89aa\u3067\u3042\u308b\u305f\u3081\u30012 \u500b\u524d\u306e\u89aa\u3082\u4e0a\u306e\u8868\u3092\u6d3b\u7528\u3059\u308b\u3053\u3068\u3067\u7c21\u5358\u306b\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"2\u500b\u524d\u306e\u89aa\u306b\u3064\u3044\u3066",src:t(9736).Z,title:"2\u500b\u524d\u306e\u89aa\u306b\u3064\u3044\u3066",width:"231",height:"141"})),(0,s.kt)("p",null,"\u305d\u306e\u305f\u3081\u30012 \u500b\u524d\u306e\u89aa\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\u3002"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"2\u500b\u524d\u306e\u89aa",src:t(3647).Z,title:"2\u500b\u524d\u306e\u89aa",width:"363",height:"723"})),(0,s.kt)("p",null,"\u540c\u69d8\u306a\u8003\u3048\u65b9\u3067 4 \u500b\u524d\u306e\u89aa\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"4\u500b\u524d\u306e\u89aa\u306b\u3064\u3044\u3066",src:t(7620).Z,title:"4\u500b\u524d\u306e\u89aa\u306b\u3064\u3044\u3066",width:"411",height:"141"})),(0,s.kt)("p",null,"4 \u500b\u524d\u306e\u89aa\u3092\u6c42\u3081\u308b\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\u3002"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"4\u500b\u524d\u306e\u89aa",src:t(586).Z,title:"4\u500b\u524d\u306e\u89aa",width:"483",height:"723"})),(0,s.kt)("p",null,"\u540c\u69d8\u306b 8,16 \u500b\u524d\u306e\u89aa\u3092\u6c42\u3081\u308b\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\u3002"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"16\u500b\u524d\u306e\u89aa",src:t(2976).Z,title:"16\u500b\u524d\u306e\u89aa",width:"723",height:"723"})),(0,s.kt)("p",null,"\u3053\u308c\u5168\u3066\u306e\u8981\u7d20\u306e",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mn",{parentName:"msup"},"2"),(0,s.kt)("mi",{parentName:"msup"},"n"))),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"2^n")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6644em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord"},"2"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.6644em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"n")))))))))))),"\u500b\u524d\u306e\u89aa\u8981\u7d20\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002"),(0,s.kt)("p",null,"\u3053\u3053\u307e\u3067\u304c\u524d\u51e6\u7406\u306e\u90e8\u5206\u3067\u3042\u308b\u3002"),(0,s.kt)("p",null,"\u6b21\u306f\u3053\u306e\u8868\u3092\u6d3b\u7528\u3057\u3066\u30012 \u3064\u306e\u8981\u7d20\u306e LCA \u3092\u6c42\u3081\u308b\u3053\u3068\u3092\u8003\u3048\u308b\u524d\u306b\u3053\u306e\u8868\u3092\u4f7f\u7528\u3057\u3066\u30015 \u756a\u76ee\u306e\u8981\u7d20\u306e 3 \u3064\u524d\u306e\u89aa\u304c\u4f55\u304b\u3092\u8003\u3048\u3066\u307f\u308b\u3002"),(0,s.kt)("p",null,"3 \u3064\u524d\u306e\u89aa\u8981\u7d20\u306b\u3064\u3044\u3066\u306f\u6c42\u3081\u3066\u3044\u306a\u3044\u304c\u4f5c\u6210\u3057\u305f\u8868\u304b\u3089\u5c0e\u51fa\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002\n3 \u306f",(0,s.kt)("inlineCode",{parentName:"p"},"2 + 1 = 3"),"\u3068\u5206\u89e3\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u30012 \u3064\u524d\u306e\u89aa\u306e 1 \u3064\u524d\u306e\u89aa\u304c 3 \u3064\u524d\u306e\u89aa\u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002\n\u305d\u306e\u305f\u3081\u30015 \u756a\u306e 2 \u3064\u524d\u306e\u89aa\u306f\u8868\u304b\u3089 2 \u756a\u306e\u8981\u7d20\u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002\u3055\u3089\u306b 2 \u756a\u306e 1 \u3064\u76ee\u306e\u89aa\u306f 0 \u756a\u3067\u3042\u308b\u3053\u3068\u3082\u308f\u304b\u308b\u306e\u3067 5 \u756a\u76ee\u306e 3 \u3064\u524d\u306e\u89aa\u306f 0 \u756a\u3067\u3042\u308b\u3068\u3044\u3046\u3053\u3068\u304c\u5206\u304b\u308b\u3002\n\u3053\u308c\u306f 3 \u3092 2 \u9032\u6570\u3067\u8868\u3059\u3068",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mn",{parentName:"mrow"},"1"),(0,s.kt)("msub",{parentName:"mrow"},(0,s.kt)("mn",{parentName:"msub"},"1"),(0,s.kt)("mrow",{parentName:"msub"},(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,s.kt)("mn",{parentName:"mrow"},"2"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},")")))),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"11_{(2)}")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.9996em",verticalAlign:"-0.3552em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"1"),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord"},"1"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.3448em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-2.5198em",marginLeft:"0em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},(0,s.kt)("span",{parentName:"span",className:"mopen mtight"},"("),(0,s.kt)("span",{parentName:"span",className:"mord mtight"},"2"),(0,s.kt)("span",{parentName:"span",className:"mclose mtight"},")"))))),(0,s.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.3552em"}},(0,s.kt)("span",{parentName:"span"})))))))))),"\u3068\u306a\u308b\u306e\u3067\u30011 \u3068\u306a\u3063\u3066\u3044\u308b\u90e8\u5206\u3067\u8981\u7d20\u3092\u79fb\u52d5\u3055\u305b\u308b\u826f\u3044\u3002"),(0,s.kt)("admonition",{type:"info"},(0,s.kt)("p",{parentName:"admonition"},"LCA \u3067\u306f\u8981\u7d20\u306e\u6df1\u3055\u756a\u53f7\u3092\u4f7f\u7528\u3059\u308b\u3002\u3053\u308c\u306f\u524d\u51e6\u7406\u306e 1 \u3064\u524d\u306e\u89aa\u3092\u6c42\u3081\u308b\u969b\u306e\u5e45\u512a\u5148\u63a2\u7d22\u7b49\u3092\u3059\u308b\u969b\u306b\u4e00\u7dd2\u306b\u6df1\u3055\u3092\u6c42\u3081\u3066\u304a\u304f\u3002\n\u4eca\u56de\u306e\u5834\u5408\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n",(0,s.kt)("img",{alt:"\u6df1\u3055",src:t(2925).Z,title:"\u6df1\u3055",width:"255",height:"321"}))),(0,s.kt)("p",null,"LCA \u306e\u6c42\u3081\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u9806\u756a\u3067\u51e6\u7406\u3092\u884c\u3046\u3002"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"\u5bfe\u8c61\u8981\u7d20\u306e\u6df1\u3055\u3092\u63c3\u3048\u308b"),(0,s.kt)("li",{parentName:"ol"},"\u524d\u51e6\u7406\u3067\u4f5c\u6210\u3057\u305f\u8868\u3092\u7528\u3044\u3066\u5171\u901a\u306e\u89aa\u3092\u63a2\u3059\u3002")),(0,s.kt)("p",null,"2 \u3064\u306e\u8981\u7d20\u306e LCA \u3092\u6c42\u3081\u308b\u4f8b\u984c\u3068\u3057\u3066\u30013 \u756a\u3068 7 \u756a\u306e LCA \u3092\u6c42\u3081\u3066\u307f\u308b\u3002\n\u307e\u305a\u306f\u624b\u9806 1 \u306e\u8981\u7d20\u306e\u6df1\u3055\u3092\u63c3\u3048\u308b\u3053\u3068\u3092\u8003\u3048\u308b\u3002\n\u3053\u308c\u306f\u3068\u3082\u306b\u6df1\u3055\u304c 2 \u306a\u306e\u3067\u3001\u884c\u3046\u5fc5\u8981\u304c\u306a\u3044\u3002"),(0,s.kt)("p",null,"\u624b\u9806 2 \u3092\u8003\u3048\u308b\u3002\n\u524d\u51e6\u7406\u3067\u4f5c\u6210\u3057\u305f\u30c6\u30fc\u30d6\u30eb\u3092\u4f7f\u7528\u3057\u3001\u305d\u308c\u305e\u308c\u306e N \u500b\u524d\u306e\u89aa\u8981\u7d20\u3092\u8abf\u3079\u308b\u3002"),(0,s.kt)("p",null,"\u521d\u3081\u306b 16 \u500b\u524d\u306e\u89aa\u3092\u6bd4\u8f03\u3059\u308b\u3068\u3001\u3068\u3082\u306b",(0,s.kt)("inlineCode",{parentName:"p"},"-1"),"\u3068\u306a\u308a\u30012 \u3064\u306e\u8981\u7d20\u3067\u4e00\u81f4\u3057\u3066\u3044\u308b\u3002\u3053\u308c\u306f 16 \u500b\u524d\u307e\u3067\u306e\u3069\u3053\u304b\u3067\u5171\u901a\u8981\u7d20\u3092\u6301\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u306e\u3067\u3001\u623b\u308a\u904e\u304e\u3067\u3042\u308b\u3002\n8,4,2 \u500b\u524d\u306e\u8981\u7d20\u3082\u4e00\u81f4\u3057\u3066\u3044\u308b\u306e\u3067\u623b\u308a\u904e\u304e\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002"),(0,s.kt)("p",null,"1 \u500b\u524d\u306e\u8981\u7d20\u306f\u5225\u3005\u306e\u8981\u7d20\u306a\u306e\u3067\u3001\u6b21\u306e\u691c\u7d22\u3059\u308b\u57fa\u6e96\u8981\u7d20\u3092 1 \u500b\u524d\u306e\u89aa\u8981\u7d20\u306b\u5909\u66f4\u3059\u308b\u3002\n\u305d\u3046\u3059\u308b\u3068\u305d\u308c\u305e\u308c\u30011,2 \u3068\u306a\u308b\u3002"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"\u8981\u7d20\u5909\u66f4",src:t(9593).Z,title:"\u8981\u7d20\u5909\u66f4",width:"761",height:"441"})),(0,s.kt)("p",null,"\u5168\u3066\u306e\u524d\u51e6\u7406\u3067\u4f5c\u6210\u3057\u305f\u30c6\u30fc\u30d6\u30eb\u306e\u8981\u7d20\u3092\u78ba\u8a8d\u3057\u7d42\u3048\u305f\u6642\u70b9\u3067\u691c\u7d22\u5bfe\u8c61\u3068\u3057\u3066\u3044\u308b\u57fa\u6e96\u306e\u8981\u7d20 2 \u3064\u306e 1 \u500b\u524d\u306e\u89aa\u8981\u7d20\u304c\u5171\u901a\u89aa\u306e\u4e2d\u3067\u4e00\u756a\u8fd1\u3044\u3082\u306e\u3068\u306a\u3063\u3066\u3044\u308b\u3002\n\u305d\u306e\u305f\u3081\u30011 \u756a,2 \u756a\u306e\u8981\u7d20\u306e\u89aa\u8981\u7d20\u3067\u3042\u308b 0 \u756a\u304c LCA \u3068\u306a\u308b\u3002"),(0,s.kt)("p",null,"\u6b21\u306b 10 \u756a\u306e\u8981\u7d20\u3068 16 \u756a\u306e\u8981\u7d20\u306e LCA \u3092\u8003\u3048\u308b\u3002"),(0,s.kt)("p",null,"10 \u756a\u306e\u8981\u7d20\u306f\u6df1\u3055\u304c 5 \u3067\u3042\u308a\u300116 \u756a\u306e\u8981\u7d20\u306f 6 \u3067\u3042\u308a\u3001\u7570\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u6df1\u3055\u3092\u5408\u308f\u305b\u308b\u624b\u9806 1 \u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u6df1\u3055\u3092\u5408\u308f\u305b\u308b\u305f\u3081\u3001",(0,s.kt)("inlineCode",{parentName:"p"},"6 - 5 = 1"),"\u3067 16 \u756a\u306e\u8981\u7d20\u3092 1 \u500b\u524d\u306e\u89aa\u8981\u7d20\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u524d\u51e6\u7406\u4f5c\u6210\u3057\u305f\u30c6\u30fc\u30d6\u30eb\u3092\u4f7f\u7528\u3059\u308b\u3068 16 \u756a\u306e 1 \u500b\u524d\u306e\u89aa\u306f 14 \u756a\u306e\u8981\u7d20\u3068\u306a\u308b\u3002"),(0,s.kt)("p",null,"\u624b\u9806 2 \u3067\u306f 10 \u756a\u306e\u8981\u7d20\u3068 14 \u756a\u306e\u8981\u7d20\u306e\u5171\u901a\u306e\u89aa\u8981\u7d20\u3092\u6301\u305f\u306a\u3044\u30ae\u30ea\u30ae\u30ea\u306e\u89aa\u8981\u7d20\u3092\u6c42\u3081\u308b\u3002"),(0,s.kt)("p",null,"\u5148\u307b\u3069\u3068\u540c\u69d8\u306b 16 \u500b\u524d\u306e\u89aa\u8981\u7d20\u304b\u3089\u898b\u3066\u3044\u304f\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\u3002"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"\u8981\u7d20\u5909\u66f42",src:t(5807).Z,title:"\u8981\u7d20\u5909\u66f42",width:"816",height:"681"})),(0,s.kt)("p",null,"\u540c\u69d8\u306b 1 \u756a\u306e\u89aa\u8981\u7d20\u3067\u3042\u308b 0 \u756a\u304c LCA \u3068\u306a\u308b\u3002"),(0,s.kt)("h4",{id:"\u30d7\u30ed\u30b0\u30e9\u30e0"},"\u30d7\u30ed\u30b0\u30e9\u30e0"),(0,s.kt)("h5",{id:"\u524d\u51e6\u7406"},"\u524d\u51e6\u7406"),(0,s.kt)("p",null,"1 \u3064\u524d\u306e\u8981\u7d20\u3092\u6c42\u3081\u308b\u90e8\u5206\u306f\u5e45\u512a\u5148\u63a2\u7d22\u7b49\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u7c21\u5358\u306b\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u5272\u611b\u3057\u30012,4,8,16 \u500b\u524d\u306e\u8981\u7d20\u3092\u6c42\u3081\u308b\u51e6\u7406\u306f\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3067\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002"),(0,s.kt)("p",null,"\u3053\u3053\u3067\u306f",(0,s.kt)("inlineCode",{parentName:"p"},"lca_box[i][j]"),"\u306e",(0,s.kt)("inlineCode",{parentName:"p"},"i"),"\u306f",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mn",{parentName:"msup"},"2"),(0,s.kt)("mi",{parentName:"msup"},"i"))),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"2^{i}")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8247em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord"},"2"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8247em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i"))))))))))))),"\u500b\u524d\u306e\u8981\u7d20\u304b\u3092\u8868\u3057\u3001",(0,s.kt)("inlineCode",{parentName:"p"},"j"),"\u306f\u8981\u7d20\u756a\u53f7\u3067\u3042\u308a\u3001\u5024\u306f\u9077\u79fb\u5148\u306e\u8981\u7d20\u756a\u53f7\u3067\u3042\u308b\u3002\n\u3064\u307e\u308a\u3001",(0,s.kt)("inlineCode",{parentName:"p"},"lca_box[i][j]"),"\u306b N \u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u3068\u3059\u308b\u3068\u3001j \u756a\u76ee\u306e\u8981\u7d20\u306e",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mn",{parentName:"msup"},"2"),(0,s.kt)("mi",{parentName:"msup"},"i"))),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"2^{i}")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8247em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord"},"2"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8247em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i"))))))))))))),"\u500b\u524d\u306e\u8981\u7d20\u306f N \u3068\u306a\u308b\u3002\n",(0,s.kt)("inlineCode",{parentName:"p"},"lca_box[0][j]"),"\u306b\u5024\u3092\u683c\u7d0d\u3059\u308b\u90e8\u5206\u304c\u6df1\u3055\u512a\u5148\u63a2\u7d22\u30fb\u5e45\u512a\u5148\u63a2\u7d22\u3092\u7528\u3044\u3066\u57cb\u3081\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002"),(0,s.kt)("p",null,"count \u306f",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mn",{parentName:"msup"},"2"),(0,s.kt)("mi",{parentName:"msup"},"i"))),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"2^{i}")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8247em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord"},"2"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8247em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i"))))))))))))),"\u3067\u6c42\u3081\u305f\u3044\u4e57\u6570\u306e\u5024\u3067\u3042\u308a\u3001n \u306f\u8981\u7d20\u6570\u3068\u306a\u308b\u3002"),(0,s.kt)(p.Z,{groupId:"code",mdxType:"Tabs"},(0,s.kt)(r.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"# \u524d\u51e6\u7406\u3067\u6c42\u3081\u3066\u304a\u304f2^N\u3092\u6c42\u3081\u308b\nm = 1\ncount = 0\nwhile m < len(tree):\n    m <<= 1\n    count += 1\n\nlca_box = [[-1] * (len(tree) + 1) for _ in range(count+1)]\n\n# \u5e45\u512a\u5148\u63a2\u7d22\u3067\u6df1\u3055\u3092\u6c42\u3081\u308b\ndepth = [-1] * len(tree)\nq = deque()\nq.append(0)\ndepth[0] = 0\nwhile len(q) != 0:\n    pos = q.popleft()\n    for to in tree[pos]:\n        if depth != -1:\n            lca_box[0][to] = pos\n            depth[to] = depth[pos] + 1\n            q.append(to)\n\n\nfor i in range(1, count+1):\n    for j in range(len(tree)):\n        lca_box[i][j] = lca_box[i-1][lca_box[i-1][j]]\n"))),(0,s.kt)(r.Z,{value:"C++",label:"C++",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"// \u524d\u51e6\u7406\u3067\u6c42\u3081\u3066\u304a\u304f2^N\u3092\u6c42\u3081\u308b\n    int m = 1;\n    int count = 0;\n    while (m < tree.size()){\n        m <<= 1;\n        ++count;\n    }\n    vector<vector<int>> lca_box(count+1, vector<int>(tree.size()+1, -1));\n\n    // \u5e45\u512a\u5148\u63a2\u7d22\u3067\u6df1\u3055\u3092\u6c42\u3081\u308b\n    vector<int> depth(tree.size(), -1);\n    queue<int> q;\n    q.push(0);\n    depth[0] = 0;\n    while (!q.empty()){\n        int pos = q.front();q.pop();\n        for (int to: tree[pos]){\n            if (depth[to] == -1){\n                lca_box[0][to] = pos;\n                depth[to] = depth[pos] + 1;\n                q.push(to);\n            }\n        }\n    }\n\n    for (int i = 1; i < count + 1;++i){\n        for (int j = 0; j < tree.size(); ++j){\n            lca_box[i][j] = lca_box[i-1][lca_box[i-1][j]];\n        }\n    }\n"))),(0,s.kt)(r.Z,{value:"C#",label:"C#",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},"// \u524d\u51e6\u7406\u3067\u6c42\u3081\u3066\u304a\u304f2^N\u3092\u6c42\u3081\u308b\nint m = 1;\nint count = 0;\nwhile (m < tree.Count)\n{\n    m <<= 1;\n    ++count;\n}\nint[,] lca_box = new int[count + 1, tree.Count + 1];\n\n// \u5e45\u512a\u5148\u63a2\u7d22\u3067\u6df1\u3055\u3092\u6c42\u3081\u308b\nint[] depth = new int[tree.Count];\nfor (int i = 0; i < tree.Count; ++i)\n{\n    depth[i] = -1;\n}\nQueue<int> q = new Queue<int>();\nq.Enqueue(0);\ndepth[0] = 0;\nwhile (q.Count != 0)\n{\n    int pos = q.Dequeue();\n    foreach (int to in tree[pos])\n    {\n        if (depth[to] == -1)\n        {\n            lca_box[0, to] = pos;\n            depth[to] = depth[pos] + 1;\n            q.Enqueue(to);\n        }\n    }\n}\n\nfor (int i = 1; i < count + 1; ++i)\n{\n    for (int j = 0; j < tree.Count; ++j)\n    {\n        lca_box[i, j] = lca_box[i - 1, lca_box[i - 1, j]];\n    }\n}\n")))),(0,s.kt)("p",null,"\u3053\u3053\u3067\u30dd\u30a4\u30f3\u30c8\u3068\u306a\u3063\u3066\u3044\u308b\u306e\u306f"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"lca_box[i][j] = lca_box[i-1][lca_box[i-1][j]]\n")),(0,s.kt)("p",null,"\u3067\u3042\u308b\u30024 \u500b\u524d\u306e\u524d\u306e\u8981\u7d20\u3092\u6c42\u3081\u308b\u969b\u306b 2 \u500b\u524d\u306e\u8981\u7d20\u3092\u6d3b\u7528\u3057\u305f\u3088\u3046\u306b",(0,s.kt)("inlineCode",{parentName:"p"},"[lca_box[i-1][j]"),"\u3067\u6c42\u3081\u305f\u3044 N \u500b\u524d\u306e\u8981\u7d20\u306e",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mfrac",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"mfrac"},"N"),(0,s.kt)("mn",{parentName:"mfrac"},"2"))),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\frac{N}{2}")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"1.2173em",verticalAlign:"-0.345em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mopen nulldelimiter"}),(0,s.kt)("span",{parentName:"span",className:"mfrac"},(0,s.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8723em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-2.655em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,s.kt)("span",{parentName:"span",style:{top:"-3.23em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,s.kt)("span",{parentName:"span",className:"frac-line",style:{borderBottomWidth:"0.04em"}})),(0,s.kt)("span",{parentName:"span",style:{top:"-3.394em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.10903em"}},"N"))))),(0,s.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.345em"}},(0,s.kt)("span",{parentName:"span"}))))),(0,s.kt)("span",{parentName:"span",className:"mclose nulldelimiter"})))))),"\u500b\u524d\u306e\u8981\u7d20\u306e\u9077\u79fb\u5148\u8981\u7d20\u3092\u53d6\u5f97\u3057\u3001\n\u305d\u306e\u53d6\u5f97\u3057\u305f\u8981\u7d20\u306e\u9077\u79fb\u5148\u304c N \u500b\u524d\u306e\u8981\u7d20\u306e\u9077\u79fb\u5148\u3068\u306a\u308b\u305f\u3081\u3001",(0,s.kt)("inlineCode",{parentName:"p"},"lca_box[i-1][lca_box[i-1][j]]"),"\u3068\u306a\u3063\u3066\u3044\u308b\u3002"),(0,s.kt)("h4",{id:"\u30af\u30a8\u30ea"},"\u30af\u30a8\u30ea"),(0,s.kt)("p",null,"\u624b\u9806 1 \u306e\u6df1\u3055\u3092\u63c3\u3048\u308b\u51e6\u7406\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\u3002"),(0,s.kt)("p",null,"depth \u306b\u306f\u524d\u51e6\u7406\u6bb5\u968e\u3067\u6df1\u3055\u3092\u6c42\u3081\u305f\u3082\u306e\u304c\u683c\u7d0d\u3055\u308c\u3066\u304a\u308a\u3001",(0,s.kt)("inlineCode",{parentName:"p"},"depth[i]"),"\u3067 i \u756a\u76ee\u306e\u8981\u7d20\u306e\u6df1\u3055\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002"),(0,s.kt)(p.Z,{groupId:"code",mdxType:"Tabs"},(0,s.kt)(r.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},'def ancestors(u, up):\n    cnt = 0\n    while up != 0:\n        if up & 1 == 1:\n            u = lca_box[cnt][u]\n        cnt += 1\n        up >>= 1\n    return u\n\n\ncheck = [\n    (3, 7),\n    (10, 16),\n    (11, 15),\n    (2, 3)\n]\nfor u, v in check:\n    # \u5e38\u306bu\u5074\u306b\u6df1\u3055\u304c\u6df1\u3044\u65b9\u3092\u914d\u7f6e\n    if depth[u] < depth[v]:\n        u, v = v, u\n\n    # \u624b\u98061 \u6df1\u3055\u3092\u5408\u308f\u305b\u308b\n    up = depth[u] - depth[v]\n    u = ancestors(u, up)\n\n    # u,v\u81ea\u8eab\u304c\u5171\u901a\u306e\u8981\u7d20\u3068\u306a\u308b\u5834\u5408\u304c\u3042\u308b\u306e\u3067\u78ba\u8a8d\n    if u == v:\n        print(f"u: {u}, v:{v}")\n        continue\n'))),(0,s.kt)(r.Z,{value:"C++",label:"C++",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},'auto ancestors = [&](int u, int up){\n        int cnt = 0;\n        while (up != 0){\n            if (up & 1 == 1){\n                u = lca_box[cnt][u];\n            }\n            ++cnt;\n            up >>= 1;\n        }\n        return u;\n    };\n\n    vector<pair<int, int>> check = {\n        {3, 7},\n        {10, 16},\n        {11, 15},\n        {2, 3}\n    } ;\n    for (pair<int,int> xx: check){\n        int u = xx.first;\n        int v = xx.second;\n\n        // \u5e38\u306bu\u5074\u306b\u6df1\u3055\u304c\u6df1\u3044\u65b9\u3092\u914d\u7f6e\n        if (depth[u] < depth[v]){\n            swap(u,v);\n        }\n\n        // \u624b\u98061 \u6df1\u3055\u3092\u5408\u308f\u305b\u308b\n        int up = depth[u] - depth[v];\n        u = ancestors(u, up);\n\n        // u,v\u81ea\u8eab\u304c\u5171\u901a\u306e\u8981\u7d20\u3068\u306a\u308b\u5834\u5408\u304c\u3042\u308b\u306e\u3067\u78ba\u8a8d\n        if (u == v) {\n            printf("u: %d, v: %d\\n", u, v);\n            continue;\n        }\n'))),(0,s.kt)(r.Z,{value:"C#",label:"C#",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},'int Ancestors(int u, int up)\n{\n    int cnt = 0;\n    while (up != 0)\n    {\n        if ((up & 1) == 1)\n        {\n            u = lca_box[cnt, u];\n        }\n        ++cnt;\n        up >>= 1;\n    }\n    return u;\n}\nList<List<int>> check = new List<List<int>>\n{\n    new List<int>() { 3, 7 },\n    new List<int>() { 10, 16 },\n    new List<int>() { 11, 15 },\n    new List<int>() { 2, 3 }\n};\n\nforeach (List<int> xxx in check)\n{\n    int u = xxx[0];\n    int v = xxx[1];\n\n    // \u5e38\u306bu\u5074\u306b\u6df1\u3055\u304c\u6df1\u3044\u65b9\u3092\u914d\u7f6e\n    if (depth[u] < depth[v])\n    {\n        (u, v) = (v, u);\n    }\n\n    // \u624b\u98061 \u6df1\u3055\u3092\u5408\u308f\u305b\u308b\n    int up = depth[u] - depth[v];\n    u = Ancestors(u, up);\n\n    // u,v\u81ea\u8eab\u304c\u5171\u901a\u306e\u8981\u7d20\u3068\u306a\u308b\u5834\u5408\u304c\u3042\u308b\u306e\u3067\u78ba\u8a8d\n    if (u == v)\n    {\n        Console.WriteLine($"u: {u}, v: {v}");\n        continue;\n    }\n')))),(0,s.kt)("p",null,"\u6b21\u306b\u624b\u9806 2 \u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\u3002\ncount \u306f\u524d\u51e6\u7406\u3067\u4f7f\u7528\u3057\u305f\u3082\u306e\u3068\u540c\u3058\u3067\u3042\u308b\u3002"),(0,s.kt)(p.Z,{groupId:"code",mdxType:"Tabs"},(0,s.kt)(r.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},'# \u624b\u98062 \u89aa\u3092\u9061\u308b\nfor i in range(count, -1, -1):\n    nextu = lca_box[i][u]\n    nextv = lca_box[i][v]\n    # \u4e00\u81f4\u3057\u306a\u3044\u5834\u5408\u306e\u307f\u8981\u7d20\u3092\u66f4\u65b0\n    if nextu != nextv:\n        u = nextu\n        v = nextv\n\n# \u6700\u7d42\u7d50\u679c\u306e1\u3064\u524d\u304cLCA\u3068\u306a\u308b\nprint(f"u: {lca_box[0][u]}, v:{lca_box[0][v]}")\n'))),(0,s.kt)(r.Z,{value:"C++",label:"C++",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},'// \u624b\u98062 \u89aa\u3092\u9061\u308b\nfor (int i = count; i > -1; --i){\n  int nextu = lca_box[i][u];\n  int nextv = lca_box[i][v];\n  // \u4e00\u81f4\u3057\u306a\u3044\u5834\u5408\u306e\u307f\u8981\u7d20\u3092\u66f4\u65b0\n  if (nextu != nextv){\n    u = nextu;\n    v = nextv;\n  }\n}\n\n// \u6700\u7d42\u7d50\u679c\u306e1\u3064\u524d\u304cLCA\u3068\u306a\u308b\nprintf("u: %d, v: %d\\n", lca_box[0][u], lca_box[0][v]);\n'))),(0,s.kt)(r.Z,{value:"C#",label:"C#",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},'// \u624b\u98062 \u89aa\u3092\u9061\u308b\nfor (int i = count; i > -1; --i)\n{\n    int nextu = lca_box[i, u];\n    int nextv = lca_box[i, v];\n    // \u4e00\u81f4\u3057\u306a\u3044\u5834\u5408\u306e\u307f\u8981\u7d20\u3092\u66f4\u65b0\n    if (nextu != nextv)\n    {\n        u = nextu;\n        v = nextv;\n    }\n}\n\n// \u6700\u7d42\u7d50\u679c\u306e1\u3064\u524d\u304cLCA\u3068\u306a\u308b\nConsole.WriteLine($"u: {lca_box[0, u]}, v: {lca_box[0, v]}");\n')))),(0,s.kt)("p",null,"\u4e0a\u8a18\u306e\u4f8b\u3092\u5168\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u3068\u306a\u308b\u3002"),(0,s.kt)(p.Z,{groupId:"code",mdxType:"Tabs"},(0,s.kt)(r.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="doubling.py"',title:'"doubling.py"'},'from collections import deque\ntree = [\n    [1, 2],\n    [7],\n    [3, 4],\n    [5],\n    [6],\n    [],\n    [8],\n    [9],\n    [10, 11],\n    [12],\n    [15],\n    [13],\n    [14],\n    [],\n    [16],\n    [],\n    []\n]\n\n# \u524d\u51e6\u7406\u3067\u6c42\u3081\u3066\u304a\u304f2^N\u3092\u6c42\u3081\u308b\nm = 1\ncount = 0\nwhile m < len(tree):\n    m <<= 1\n    count += 1\n\nlca_box = [[-1] * (len(tree) + 1) for _ in range(count+1)]\n\n# \u5e45\u512a\u5148\u63a2\u7d22\u3067\u6df1\u3055\u3092\u6c42\u3081\u308b\ndepth = [-1] * len(tree)\nq = deque()\nq.append(0)\ndepth[0] = 0\nwhile len(q) != 0:\n    pos = q.popleft()\n    for to in tree[pos]:\n        if depth != -1:\n            lca_box[0][to] = pos\n            depth[to] = depth[pos] + 1\n            q.append(to)\n\n\nfor i in range(1, count+1):\n    for j in range(len(tree)):\n        lca_box[i][j] = lca_box[i-1][lca_box[i-1][j]]\n\n\ndef ancestors(u, up):\n    cnt = 0\n    while up != 0:\n        if up & 1 == 1:\n            u = lca_box[cnt][u]\n        cnt += 1\n        up >>= 1\n    return u\n\n\ncheck = [\n    (3, 7),\n    (10, 16),\n    (11, 15),\n    (2, 3)\n]\nfor u, v in check:\n    # \u5e38\u306bu\u5074\u306b\u6df1\u3055\u304c\u6df1\u3044\u65b9\u3092\u914d\u7f6e\n    if depth[u] < depth[v]:\n        u, v = v, u\n\n    # \u624b\u98061 \u6df1\u3055\u3092\u5408\u308f\u305b\u308b\n    up = depth[u] - depth[v]\n    u = ancestors(u, up)\n\n    # u,v\u81ea\u8eab\u304c\u5171\u901a\u306e\u8981\u7d20\u3068\u306a\u308b\u5834\u5408\u304c\u3042\u308b\u306e\u3067\u78ba\u8a8d\n    if u == v:\n        print(f"u: {u}, v:{v}")\n        continue\n\n    # \u624b\u98062 \u89aa\u3092\u9061\u308b\n    for i in range(count, -1, -1):\n        nextu = lca_box[i][u]\n        nextv = lca_box[i][v]\n        # \u4e00\u81f4\u3057\u306a\u3044\u5834\u5408\u306e\u307f\u8981\u7d20\u3092\u66f4\u65b0\n        if nextu != nextv:\n            u = nextu\n            v = nextv\n\n    # \u6700\u7d42\u7d50\u679c\u306e1\u3064\u524d\u304cLCA\u3068\u306a\u308b\n    print(f"u: {lca_box[0][u]}, v:{lca_box[0][v]}")\n\n'))),(0,s.kt)(r.Z,{value:"C++",label:"C++",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="doubling.cpp"',title:'"doubling.cpp"'},'\nint main() {\n    vector<vector<int>> tree = {\n        {1, 2},\n        {7},\n        {3, 4},\n        {5},\n        {6},\n        {},\n        {8},\n        {9},\n        {10, 11},\n        {12},\n        {15},\n        {13},\n        {14},\n        {},\n        {16},\n        {},\n        {}\n    };\n\n    // \u524d\u51e6\u7406\u3067\u6c42\u3081\u3066\u304a\u304f2^N\u3092\u6c42\u3081\u308b\n    int m = 1;\n    int count = 0;\n    while (m < tree.size()){\n        m <<= 1;\n        ++count;\n    }\n    vector<vector<int>> lca_box(count+1, vector<int>(tree.size()+1, -1));\n\n    // \u5e45\u512a\u5148\u63a2\u7d22\u3067\u6df1\u3055\u3092\u6c42\u3081\u308b\n    vector<int> depth(tree.size(), -1);\n    queue<int> q;\n    q.push(0);\n    depth[0] = 0;\n    while (!q.empty()){\n        int pos = q.front();q.pop();\n        for (int to: tree[pos]){\n            if (depth[to] == -1){\n                lca_box[0][to] = pos;\n                depth[to] = depth[pos] + 1;\n                q.push(to);\n            }\n        }\n    }\n\n    for (int i = 1; i < count + 1;++i){\n        for (int j = 0; j < tree.size(); ++j){\n            lca_box[i][j] = lca_box[i-1][lca_box[i-1][j]];\n        }\n    }\n\n    auto ancestors = [&](int u, int up){\n        int cnt = 0;\n        while (up != 0){\n            if (up & 1 == 1){\n                u = lca_box[cnt][u];\n            }\n            ++cnt;\n            up >>= 1;\n        }\n        return u;\n    };\n\n    vector<pair<int, int>> check = {\n        {3, 7},\n        {10, 16},\n        {11, 15},\n        {2, 3}\n    } ;\n    for (pair<int,int> xx: check){\n        int u = xx.first;\n        int v = xx.second;\n\n        // \u5e38\u306bu\u5074\u306b\u6df1\u3055\u304c\u6df1\u3044\u65b9\u3092\u914d\u7f6e\n        if (depth[u] < depth[v]){\n            swap(u,v);\n        }\n\n        // \u624b\u98061 \u6df1\u3055\u3092\u5408\u308f\u305b\u308b\n        int up = depth[u] - depth[v];\n        u = ancestors(u, up);\n\n        // u,v\u81ea\u8eab\u304c\u5171\u901a\u306e\u8981\u7d20\u3068\u306a\u308b\u5834\u5408\u304c\u3042\u308b\u306e\u3067\u78ba\u8a8d\n        if (u == v) {\n            printf("u: %d, v: %d\\n", u, v);\n            continue;\n        }\n\n        // \u624b\u98062 \u89aa\u3092\u9061\u308b\n        for (int i = count; i > -1; --i){\n            int nextu = lca_box[i][u];\n            int nextv = lca_box[i][v];\n            // \u4e00\u81f4\u3057\u306a\u3044\u5834\u5408\u306e\u307f\u8981\u7d20\u3092\u66f4\u65b0\n            if (nextu != nextv){\n                u = nextu;\n                v = nextv;\n            }\n        }\n\n        // \u6700\u7d42\u7d50\u679c\u306e1\u3064\u524d\u304cLCA\u3068\u306a\u308b\n        printf("u: %d, v: %d\\n", lca_box[0][u], lca_box[0][v]);\n    }\n\n        return 0;\n}\n\n'))),(0,s.kt)(r.Z,{value:"C#",label:"C#",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="doubling.cs"',title:'"doubling.cs"'},'public static void Main(string[] args)\n{\n    List<List<int>> tree = new List<List<int>>\n    {\n        new List<int>() { 1, 2 },\n        new List<int>() { 7 },\n        new List<int>() { 3, 4 },\n        new List<int>() { 5 },\n        new List<int>() { 6 },\n        new List<int>() { },\n        new List<int>() { 8 },\n        new List<int>() { 9 },\n        new List<int>() { 10, 11 },\n        new List<int>() { 12 },\n        new List<int>() { 15 },\n        new List<int>() { 13 },\n        new List<int>() { 14 },\n        new List<int>() { },\n        new List<int>() { 16 },\n        new List<int>() { },\n        new List<int>() { }\n    };\n\n    // \u524d\u51e6\u7406\u3067\u6c42\u3081\u3066\u304a\u304f2^N\u3092\u6c42\u3081\u308b\n    int m = 1;\n    int count = 0;\n    while (m < tree.Count)\n    {\n        m <<= 1;\n        ++count;\n    }\n    int[,] lca_box = new int[count + 1, tree.Count + 1];\n\n    // \u5e45\u512a\u5148\u63a2\u7d22\u3067\u6df1\u3055\u3092\u6c42\u3081\u308b\n    int[] depth = new int[tree.Count];\n    for (int i = 0; i < tree.Count; ++i)\n    {\n        depth[i] = -1;\n    }\n    Queue<int> q = new Queue<int>();\n    q.Enqueue(0);\n    depth[0] = 0;\n    while (q.Count != 0)\n    {\n        int pos = q.Dequeue();\n        foreach (int to in tree[pos])\n        {\n            if (depth[to] == -1)\n            {\n                lca_box[0, to] = pos;\n                depth[to] = depth[pos] + 1;\n                q.Enqueue(to);\n            }\n        }\n    }\n\n    for (int i = 1; i < count + 1; ++i)\n    {\n        for (int j = 0; j < tree.Count; ++j)\n        {\n            lca_box[i, j] = lca_box[i - 1, lca_box[i - 1, j]];\n        }\n    }\n\n    int Ancestors(int u, int up)\n    {\n        int cnt = 0;\n        while (up != 0)\n        {\n            if ((up & 1) == 1)\n            {\n                u = lca_box[cnt, u];\n            }\n            ++cnt;\n            up >>= 1;\n        }\n        return u;\n    }\n    List<List<int>> check = new List<List<int>>\n    {\n        new List<int>() { 3, 7 },\n        new List<int>() { 10, 16 },\n        new List<int>() { 11, 15 },\n        new List<int>() { 2, 3 }\n    };\n\n    foreach (List<int> xxx in check)\n    {\n        int u = xxx[0];\n        int v = xxx[1];\n\n        // \u5e38\u306bu\u5074\u306b\u6df1\u3055\u304c\u6df1\u3044\u65b9\u3092\u914d\u7f6e\n        if (depth[u] < depth[v])\n        {\n            (u, v) = (v, u);\n        }\n\n        // \u624b\u98061 \u6df1\u3055\u3092\u5408\u308f\u305b\u308b\n        int up = depth[u] - depth[v];\n        u = Ancestors(u, up);\n\n        // u,v\u81ea\u8eab\u304c\u5171\u901a\u306e\u8981\u7d20\u3068\u306a\u308b\u5834\u5408\u304c\u3042\u308b\u306e\u3067\u78ba\u8a8d\n        if (u == v)\n        {\n            Console.WriteLine($"u: {u}, v: {v}");\n            continue;\n        }\n\n        // \u624b\u98062 \u89aa\u3092\u9061\u308b\n        for (int i = count; i > -1; --i)\n        {\n            int nextu = lca_box[i, u];\n            int nextv = lca_box[i, v];\n            // \u4e00\u81f4\u3057\u306a\u3044\u5834\u5408\u306e\u307f\u8981\u7d20\u3092\u66f4\u65b0\n            if (nextu != nextv)\n            {\n                u = nextu;\n                v = nextv;\n            }\n        }\n\n        // \u6700\u7d42\u7d50\u679c\u306e1\u3064\u524d\u304cLCA\u3068\u306a\u308b\n        Console.WriteLine($"u: {lca_box[0, u]}, v: {lca_box[0, v]}");\n    }\n}\n')))),(0,s.kt)("h2",{id:"\u53c2\u8003"},"\u53c2\u8003"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://algo-logic.info/doubling/"},"https://algo-logic.info/doubling/"))))}N.isMDXComponent=!0},9551:(n,e,t)=>{t.d(e,{Z:()=>a});const a=t.p+"assets/images/doubling-1.drawio-f836d3d4453d20432f7ac54dadc3ed5e.svg"},9593:(n,e,t)=>{t.d(e,{Z:()=>a});const a=t.p+"assets/images/doubling-10.drawio-295d41d3362c5d3bfa1a9b1fe2ca877a.svg"},5807:(n,e,t)=>{t.d(e,{Z:()=>a});const a=t.p+"assets/images/doubling-11.drawio-ca61383ab34a5ee6be8df0a3b4126367.svg"},9033:(n,e,t)=>{t.d(e,{Z:()=>a});const a=t.p+"assets/images/doubling-2.drawio-0f686da572be762e50319a3f50c6dd7a.svg"},9736:(n,e,t)=>{t.d(e,{Z:()=>a});const a=t.p+"assets/images/doubling-3.drawio-ac24688f89c2f9bc8b04e6ab25be172e.svg"},5069:(n,e,t)=>{t.d(e,{Z:()=>a});const a=t.p+"assets/images/doubling-4.drawio-cbb698c25a9f28e69aa84f05866637bb.svg"},3647:(n,e,t)=>{t.d(e,{Z:()=>a});const a=t.p+"assets/images/doubling-5.drawio-53e7fb868dcb6f2ec972263939eeee5c.svg"},7620:(n,e,t)=>{t.d(e,{Z:()=>a});const a=t.p+"assets/images/doubling-6.drawio-f2015d758752116f699109daeace9cab.svg"},586:(n,e,t)=>{t.d(e,{Z:()=>a});const a=t.p+"assets/images/doubling-7.drawio-ba7be6d3536e030c851aaa94d4b18484.svg"},2976:(n,e,t)=>{t.d(e,{Z:()=>a});const a=t.p+"assets/images/doubling-8.drawio-5c001a7f98889365f442b092626d4af4.svg"},2925:(n,e,t)=>{t.d(e,{Z:()=>a});const a=t.p+"assets/images/doubling-9.drawio-02145c3b63799acc2c32f643c3d0303f.svg"}}]);