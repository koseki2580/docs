"use strict";(self.webpackChunkstudy_doxs=self.webpackChunkstudy_doxs||[]).push([[339],{85162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(67294),i=n(86010);const r="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.Z)(r,l),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>u});var a=n(87462),i=n(67294),r=n(86010),l=n(72389),o=n(67392),s=n(7094),p=n(12466);const d="tabList__CuJ",c="tabItem_LNqP";function h(e){var t;const{lazy:n,block:l,defaultValue:h,values:u,groupId:m,className:k}=e,g=i.Children.map(e.children,(e=>{if((0,i.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=u??g.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),b=(0,o.l)(f,((e,t)=>e.value===t.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===h?h:h??(null==(t=g.find((e=>e.props.default)))?void 0:t.props.value)??g[0].props.value;if(null!==v&&!f.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:N,setTabGroupChoices:x}=(0,s.U)(),[w,y]=(0,i.useState)(v),C=[],{blockElementScrollPositionUntilNextRender:Z}=(0,p.o5)();if(null!=m){const e=N[m];null!=e&&e!==w&&f.some((t=>t.value===e))&&y(e)}const T=e=>{const t=e.currentTarget,n=C.indexOf(t),a=f[n].value;a!==w&&(Z(t),y(a),null!=m&&x(m,String(a)))},D=e=>{var t;let n=null;switch(e.key){case"Enter":T(e);break;case"ArrowRight":{const t=C.indexOf(e.currentTarget)+1;n=C[t]??C[0];break}case"ArrowLeft":{const t=C.indexOf(e.currentTarget)-1;n=C[t]??C[C.length-1];break}}null==(t=n)||t.focus()};return i.createElement("div",{className:(0,r.Z)("tabs-container",d)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":l},k)},f.map((e=>{let{value:t,label:n,attributes:l}=e;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>C.push(e),onKeyDown:D,onClick:T},l,{className:(0,r.Z)("tabs__item",c,null==l?void 0:l.className,{"tabs__item--active":w===t})}),n??t)}))),n?(0,i.cloneElement)(g.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function u(e){const t=(0,l.Z)();return i.createElement(h,(0,a.Z)({key:String(t)},e))}},69640:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var a=n(87462),i=(n(67294),n(3905)),r=(n(16758),n(65488)),l=n(85162);const o={title:"\u6df1\u3055\u512a\u5148\u63a2\u7d22",sidebar_label:"\u6df1\u3055\u512a\u5148\u63a2\u7d22",draft:!1,toc_max_heading_level:4,tags:["\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0"]},s=void 0,p={unversionedId:"Algorithm/depth-first-search",id:"Algorithm/depth-first-search",title:"\u6df1\u3055\u512a\u5148\u63a2\u7d22",description:"\u6df1\u3055\u512a\u5148\u63a2\u7d22\u3068\u306f",source:"@site/docs/00-Algorithm/02-depth-first-search.mdx",sourceDirName:"00-Algorithm",slug:"/Algorithm/depth-first-search",permalink:"/study-docs/docs/Algorithm/depth-first-search",draft:!1,editUrl:"https://github.com/koseki2580/study-docs/edit/main/docs/00-Algorithm/02-depth-first-search.mdx",tags:[{label:"\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0",permalink:"/study-docs/docs/tags/\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0"}],version:"current",lastUpdatedBy:"koseki2580",lastUpdatedAt:1659353735,formattedLastUpdatedAt:"2022\u5e748\u67081\u65e5",sidebarPosition:2,frontMatter:{title:"\u6df1\u3055\u512a\u5148\u63a2\u7d22",sidebar_label:"\u6df1\u3055\u512a\u5148\u63a2\u7d22",draft:!1,toc_max_heading_level:4,tags:["\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0"]},sidebar:"AlgorithmSidebar",previous:{title:"\u5e45\u512a\u5148\u63a2\u7d22",permalink:"/study-docs/docs/Algorithm/breadth-first-search"},next:{title:"\u518d\u5e30\u51e6\u7406",permalink:"/study-docs/docs/Algorithm/recursive"}},d={},c=[{value:"\u6df1\u3055\u512a\u5148\u63a2\u7d22\u3068\u306f",id:"\u6df1\u3055\u512a\u5148\u63a2\u7d22\u3068\u306f",level:2},{value:"\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0",id:"\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0",level:2},{value:"\u6d41\u308c",id:"\u6d41\u308c",level:3},{value:"\u4f7f\u7528\u3059\u308b\u30c7\u30fc\u30bf\u69cb\u9020",id:"\u4f7f\u7528\u3059\u308b\u30c7\u30fc\u30bf\u69cb\u9020",level:3},{value:"\u8d70\u67fb\u9806",id:"\u8d70\u67fb\u9806",level:3},{value:"\u884c\u304d\u304c\u3051\u9806",id:"\u884c\u304d\u304c\u3051\u9806",level:4},{value:"\u901a\u308a\u304c\u3051\u9806",id:"\u901a\u308a\u304c\u3051\u9806",level:4},{value:"\u5e30\u308a\u304c\u3051\u9806",id:"\u5e30\u308a\u304c\u3051\u9806",level:4},{value:"\u30d7\u30ed\u30b0\u30e9\u30e0",id:"\u30d7\u30ed\u30b0\u30e9\u30e0",level:3},{value:"\u884c\u304d\u304c\u3051\u9806",id:"\u884c\u304d\u304c\u3051\u9806-1",level:4},{value:"\u901a\u308a\u304c\u3051\u9806",id:"\u901a\u308a\u304c\u3051\u9806-1",level:4},{value:"\u5e30\u308a\u304c\u3051\u9806",id:"\u5e30\u308a\u304c\u3051\u9806-1",level:4}],h={toc:c};function u(e){let{components:t,...o}=e;return(0,i.kt)("wrapper",(0,a.Z)({},h,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"\u6df1\u3055\u512a\u5148\u63a2\u7d22\u3068\u306f"},"\u6df1\u3055\u512a\u5148\u63a2\u7d22\u3068\u306f"),(0,i.kt)("p",null,"\u6df1\u3055\u512a\u5148\u63a2\u7d22(DFS : Depth First Search)\u3068\u306f",(0,i.kt)("a",{parentName:"p",href:"/docs/Data-structure/graph"},"\u30b0\u30e9\u30d5"),"\u3084",(0,i.kt)("a",{parentName:"p",href:"/docs/Data-structure/tree"},"\u6728\u69cb\u9020"),"\u3092\u63a2\u7d22\u3059\u308b\u305f\u3081\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3042\u308a\u3001\u63a2\u7d22\u3092\u958b\u59cb\u3059\u308b\u4f4d\u7f6e\u304b\u3089\u8fd1\u3044\u3082\u306e\u304b\u3089\u63a2\u7d22\u3057\u3066\u3044\u304f\u63a2\u7d22\u624b\u6cd5\u3002"),(0,i.kt)("h2",{id:"\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0"},"\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0"),(0,i.kt)("h3",{id:"\u6d41\u308c"},"\u6d41\u308c"),(0,i.kt)("p",null,"\u6b21\u306e\u56f3\u306e\u3088\u3046\u306a\u6728\u69cb\u9020\u304c\u3042\u3063\u305f\u3068\u3059\u308b\u3002"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"\u30a4\u30e1\u30fc\u30b8\u56f3",src:n(5269).Z,title:"\u6700\u521d\u306e\u6728\u69cb\u9020",width:"555",height:"201"})),(0,i.kt)("p",null,"\u9802\u70b9",(0,i.kt)("inlineCode",{parentName:"p"},"1"),"\u3092\u59cb\u70b9\u3068\u3057\u3066\u3001\u5e45\u512a\u5148\u63a2\u7d22\u3092\u884c\u3046\u3068\u6b21\u306e\u3088\u3046\u306a\u6d41\u308c\u306b\u306a\u308b\u3002"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"\u59cb\u70b9\u306f\u63a2\u7d22\u6e08\u307f\u3068\u3057\u3066\u8a18\u9332\u3059\u308b\u3002")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"\u30a4\u30e1\u30fc\u30b8\u56f3",src:n(15250).Z,title:"\u624b\u98061\u5f8c\u306e\u6728\u69cb\u9020",width:"555",height:"201"})),(0,i.kt)("p",null,"\u9802\u70b9",(0,i.kt)("inlineCode",{parentName:"p"},"1"),"\u3068\u7e4b\u304c\u3063\u3066\u3044\u308b\u9802\u70b9",(0,i.kt)("inlineCode",{parentName:"p"},"2,4"),"\u3092\u6b21\u306e\u63a2\u7d22\u70b9\u306b\u8ffd\u52a0\u3059\u308b\u3002"),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u9802\u70b9",(0,i.kt)("inlineCode",{parentName:"p"},"4"),"\u63a2\u7d22\u6e08\u307f\u3068\u3057\u3066\u8a18\u9332\u3059\u308b\u3002\n",(0,i.kt)("img",{alt:"\u30a4\u30e1\u30fc\u30b8\u56f3",src:n(86361).Z,title:"\u624b\u98062\u5f8c\u306e\u6728\u69cb\u9020",width:"555",height:"201"}),"\n\u9802\u70b9",(0,i.kt)("inlineCode",{parentName:"p"},"4"),"\u3068\u7e4b\u304c\u3063\u3066\u3044\u308b\u9802\u70b9",(0,i.kt)("inlineCode",{parentName:"p"},"7,6"),"\u3092\u6b21\u306e\u63a2\u7d22\u70b9\u306b\u8ffd\u52a0\u3059\u308b")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u9802\u70b9",(0,i.kt)("inlineCode",{parentName:"p"},"6"),"\u63a2\u7d22\u6e08\u307f\u3068\u3057\u3066\u8a18\u9332\u3059\u308b\u3002\n",(0,i.kt)("img",{alt:"\u30a4\u30e1\u30fc\u30b8\u56f3",src:n(16218).Z,title:"\u624b\u98063\u5f8c\u306e\u6728\u69cb\u9020",width:"555",height:"201"}),"\n\u9802\u70b9",(0,i.kt)("inlineCode",{parentName:"p"},"6"),"\u3068\u7e4b\u304c\u3063\u3066\u3044\u308b\u9802\u70b9",(0,i.kt)("inlineCode",{parentName:"p"},"8"),"\u3092\u6b21\u306e\u63a2\u7d22\u70b9\u306b\u8ffd\u52a0\u3059\u308b")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u9802\u70b9",(0,i.kt)("inlineCode",{parentName:"p"},"8"),"\u63a2\u7d22\u6e08\u307f\u3068\u3057\u3066\u8a18\u9332\u3059\u308b\u3002\n",(0,i.kt)("img",{alt:"\u30a4\u30e1\u30fc\u30b8\u56f3",src:n(11658).Z,title:"\u624b\u98064\u5f8c\u306e\u6728\u69cb\u9020",width:"555",height:"201"}),"\n\u9802\u70b9",(0,i.kt)("inlineCode",{parentName:"p"},"8"),"\u3068\u7e4b\u304c\u3063\u3066\u3044\u308b\u9802\u70b9\u306f\u5b58\u5728\u3057\u306a\u3044\u306e\u3067\u4f55\u3082\u8ffd\u52a0\u3057\u306a\u3044")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u9802\u70b9",(0,i.kt)("inlineCode",{parentName:"p"},"7"),"\u63a2\u7d22\u6e08\u307f\u3068\u3057\u3066\u8a18\u9332\u3059\u308b\u3002\n",(0,i.kt)("img",{alt:"\u30a4\u30e1\u30fc\u30b8\u56f3",src:n(46437).Z,title:"\u624b\u98065\u5f8c\u306e\u6728\u69cb\u9020",width:"555",height:"201"}),"\n\u9802\u70b9",(0,i.kt)("inlineCode",{parentName:"p"},"7"),"\u3068\u7e4b\u304c\u3063\u3066\u3044\u308b\u9802\u70b9\u306f\u5b58\u5728\u3057\u306a\u3044\u306e\u3067\u4f55\u3082\u8ffd\u52a0\u3057\u306a\u3044")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u9802\u70b9",(0,i.kt)("inlineCode",{parentName:"p"},"2"),"\u63a2\u7d22\u6e08\u307f\u3068\u3057\u3066\u8a18\u9332\u3059\u308b\u3002\n",(0,i.kt)("img",{alt:"\u30a4\u30e1\u30fc\u30b8\u56f3",src:n(32627).Z,title:"\u624b\u98066\u5f8c\u306e\u6728\u69cb\u9020",width:"555",height:"201"}),"\n\u9802\u70b9",(0,i.kt)("inlineCode",{parentName:"p"},"2"),"\u3068\u7e4b\u304c\u3063\u3066\u3044\u308b\u9802\u70b9",(0,i.kt)("inlineCode",{parentName:"p"},"3"),"\u3092\u6b21\u306e\u63a2\u7d22\u70b9\u306b\u8ffd\u52a0\u3059\u308b")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u9802\u70b9",(0,i.kt)("inlineCode",{parentName:"p"},"3"),"\u63a2\u7d22\u6e08\u307f\u3068\u3057\u3066\u8a18\u9332\u3059\u308b\u3002\n",(0,i.kt)("img",{alt:"\u30a4\u30e1\u30fc\u30b8\u56f3",src:n(62263).Z,title:"\u624b\u98067\u5f8c\u306e\u6728\u69cb\u9020",width:"555",height:"201"}),"\n\u9802\u70b9",(0,i.kt)("inlineCode",{parentName:"p"},"3"),"\u3068\u7e4b\u304c\u3063\u3066\u3044\u308b\u9802\u70b9",(0,i.kt)("inlineCode",{parentName:"p"},"5"),"\u3092\u6b21\u306e\u63a2\u7d22\u70b9\u306b\u8ffd\u52a0\u3059\u308b")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u9802\u70b9",(0,i.kt)("inlineCode",{parentName:"p"},"5"),"\u63a2\u7d22\u6e08\u307f\u3068\u3057\u3066\u8a18\u9332\u3059\u308b\u3002\n",(0,i.kt)("img",{alt:"\u30a4\u30e1\u30fc\u30b8\u56f3",src:n(17372).Z,title:"\u624b\u98068\u5f8c\u306e\u6728\u69cb\u9020",width:"601",height:"201"}),"\n\u9802\u70b9",(0,i.kt)("inlineCode",{parentName:"p"},"5"),"\u3068\u7e4b\u304c\u3063\u3066\u3044\u308b\u9802\u70b9\u306f\u5b58\u5728\u3057\u306a\u3044\u306e\u3067\u4f55\u3082\u8ffd\u52a0\u3057\u306a\u3044"))),(0,i.kt)("h3",{id:"\u4f7f\u7528\u3059\u308b\u30c7\u30fc\u30bf\u69cb\u9020"},"\u4f7f\u7528\u3059\u308b\u30c7\u30fc\u30bf\u69cb\u9020"),(0,i.kt)("p",null,"\u6d41\u308c\u306e\u6b21\u306e\u63a2\u7d22\u70b9\u306e\u914d\u5217\u306e\u9806\u756a\u3092\u898b\u308b\u3068\u914d\u5217\u65b0\u305f\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u969b\u3082\u914d\u5217\u304b\u3089\u8981\u7d20\u3092\u53d6\u308a\u51fa\u3059\u969b\u3082\u4e00\u756a\u53f3\u5074\u3001\u8981\u7d20\u756a\u53f7\u306e\u4e00\u756a\u5f8c\u308d\u306e\u8981\u7d20\u306b\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u308b\u3002"),(0,i.kt)("p",null,"\u3064\u307e\u308a\u3001FILO \u306e\u52d5\u4f5c\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u3002\u3053\u306e FILO \u3092\u8868\u3059\u306e\u306b\u9069\u3057\u305f\u30c7\u30fc\u30bf\u69cb\u9020\u304c",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("a",{parentName:"strong",href:"/docs/Data-structure/stack"},"Stack")),"\u3067\u3042\u308b\u3002"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u6b21\u306e\u63a2\u7d22\u70b9\u306e\u914d\u5217\u306e\u4e00\u756a\u5f8c\u308d\u306e\u8981\u7d20\u3092\u53d6\u308a\u51fa\u3057\u3001\u63a2\u7d22\u3092\u884c\u3046"),(0,i.kt)("li",{parentName:"ul"},"\u63a2\u7d22\u3057\u305f\u969b\u306b\u65b0\u305f\u306a\u672a\u63a2\u7d22\u8981\u7d20\u304c\u898b\u3064\u304b\u3063\u305f\u3089\u3001\u6b21\u306e\u63a2\u7d22\u70b9\u306e\u914d\u5217\u306e\u5f8c\u308d\u306b\u8981\u7d20\u306e\u8ffd\u52a0\u3059\u308b")),(0,i.kt)("p",null,"\u4ee5\u4e0a\u306e 2 \u3064\u306e\u51e6\u7406\u3092\u884c\u3048\u308c\u3070\u6df1\u3055\u512a\u5148\u63a2\u7d22\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u305d\u306e\u305f\u3081\u3001\u305d\u308c\u305e\u308c Stack \u3092\u7528\u3044\u308b\u3068"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u6b21\u306e\u63a2\u7d22\u70b9\u306e\u914d\u5217\u306e\u4e00\u756a\u5f8c\u308d\u306e\u8981\u7d20\u3092",(0,i.kt)("inlineCode",{parentName:"li"},"pop"),"\u3057\uff08\u53d6\u308a\u51fa\u3057\uff09\u3001\u63a2\u7d22\u3092\u884c\u3046"),(0,i.kt)("li",{parentName:"ul"},"\u63a2\u7d22\u3057\u305f\u969b\u306b\u65b0\u305f\u306a\u672a\u63a2\u7d22\u8981\u7d20\u304c\u898b\u3064\u304b\u3063\u305f\u3089\u3001\u6b21\u306e\u63a2\u7d22\u70b9\u306e\u914d\u5217\u306e\u5f8c\u308d\u306b",(0,i.kt)("inlineCode",{parentName:"li"},"push"),"\uff08\u8981\u7d20\u306e\u8ffd\u52a0\uff09\u3059\u308b")),(0,i.kt)("p",null,"\u3068\u8a00\u3048\u308b\u306e\u3067 Stack \u3092\u7528\u3044\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002"),(0,i.kt)("h3",{id:"\u8d70\u67fb\u9806"},"\u8d70\u67fb\u9806"),(0,i.kt)("p",null,"\u6df1\u3055\u512a\u5148\u63a2\u7d22\u306b\u306f 3 \u7a2e\u985e\u306e\u8d70\u67fb\u9806\u304c\u5b58\u5728\u3059\u308b\u3002\u8d70\u67fb\u9806\u3068\u306f\u7c21\u5358\u306b\u3044\u3046\u3068\u3069\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u8a2a\u308c\u305f\u3053\u3068\u3092\u8a18\u9332\u3059\u308b\u304b\u3068\u3044\u3046\u3053\u3068\u3067\u3042\u308b\u3002\n\u63a2\u7d22\u3059\u308b\u9806\u756a\u306f\u540c\u3058\u3067\u3042\u308a(\u6839\u304b\u3089\u6728\u69cb\u9020\u306e\u5de6\u306b\u6cbf\u3046\u5f62)\u3001\u8a2a\u308c\u305f\u756a\u53f7\u306e\u8a18\u9332\u9806\u304c\u7570\u306a\u308b\u3002"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u884c\u304d\u304c\u3051\u9806(\u9802\u70b9\u306b\u5230\u9054\u6642)"),(0,i.kt)("li",{parentName:"ul"},"\u901a\u308a\u304c\u3051\u9806(\u5de6\u90e8\u5206\u6728\u3092\u8d70\u67fb\u7d42\u4e86\u6642)"),(0,i.kt)("li",{parentName:"ul"},"\u5e30\u308a\u304c\u3051\u9806(\u90e8\u5206\u6728\u3092\u8d70\u67fb\u7d42\u4e86\u6642)")),(0,i.kt)("p",null,"\u305d\u308c\u305e\u308c\u306e\u8d70\u67fb\u9806\u5e8f\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\u3002(\u4e0a\u306e\u6d41\u308c\u306e\u8a18\u9332(\u63a2\u7d22\u6e08\u307f\u70b9\u306e\u4e26\u3073)\u306f\u884c\u304d\u304c\u3051\u9806\u3067\u3042\u308b)"),(0,i.kt)("p",null,"\u305d\u308c\u305e\u308c\u306e\u8d70\u67fb\u9806\u306e\u9055\u3044\u3092\u6b21\u306e\u56f3\u3092\u30d9\u30fc\u30b9\u306b\u78ba\u8a8d\u3059\u308b\u3002\u8d64\u70b9\u7dda\u306b\u6cbf\u3063\u3066\u9802\u70b9\u3092\u8a2a\u308c\u308b\u3068\u3059\u308b\u3002"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"\u30a4\u30e1\u30fc\u30b8\u56f3",src:n(24080).Z,title:"\u6728\u69cb\u9020\u30d9\u30fc\u30b9",width:"587",height:"561"})),(0,i.kt)("p",null,"\u8a18\u9332\u3059\u308b\u9806\u756a\u306f\u9802\u70b9\u306b\u3064\u3044\u3066\u308b\u9752\u8272\u306e\u4e38\u3092\u901a\u3063\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u9802\u70b9\u3092\u8a18\u9332\u3059\u308b\u3002"),(0,i.kt)("h4",{id:"\u884c\u304d\u304c\u3051\u9806"},"\u884c\u304d\u304c\u3051\u9806"),(0,i.kt)("p",null,"\u9802\u70b9\u306b\u8a2a\u308c\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u63a2\u7d22\u6e08\u307f\u3068\u3059\u308b\u8d70\u67fb\u9806"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"\u30a4\u30e1\u30fc\u30b8\u56f3",src:n(20878).Z,title:"\u884c\u304d\u304c\u3051\u9806",width:"587",height:"561"})),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"1 \u2192 3 \u2192 6 \u2192 5 \u2192 7 \u2192 2 \u2192 4"),"\u306e\u9806\u306b\u8a18\u9332\u3055\u308c\u308b\u3002"),(0,i.kt)("h4",{id:"\u901a\u308a\u304c\u3051\u9806"},"\u901a\u308a\u304c\u3051\u9806"),(0,i.kt)("p",null,"\u5de6\u90e8\u5206\u6728\u3092\u8d70\u67fb\u3057\u7d42\u3048\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u63a2\u7d22\u6e08\u307f\u3068\u3059\u308b\u8d70\u67fb\u9806(\u591a\u5206\u6728\u3067\u306f\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044)"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"\u30a4\u30e1\u30fc\u30b8\u56f3",src:n(36762).Z,title:"\u901a\u308a\u304c\u3051\u9806",width:"587",height:"561"})),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"6 \u2192 3 \u2192 7 \u2192 5 \u2192 1 \u2192 2 \u2192 4"),"\u306e\u9806\u306b\u8a18\u9332\u3055\u308c\u308b\u3002"),(0,i.kt)("h4",{id:"\u5e30\u308a\u304c\u3051\u9806"},"\u5e30\u308a\u304c\u3051\u9806"),(0,i.kt)("p",null,"\u5168\u3066\u306e\u5b50\u30ce\u30fc\u30c9\u3092\u8a2a\u308c\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u63a2\u7d22\u6e08\u307f\u3068\u3059\u308b\u8d70\u67fb\u9806"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"\u30a4\u30e1\u30fc\u30b8\u56f3",src:n(65997).Z,title:"\u5e30\u308a\u304c\u3051\u9806",width:"587",height:"561"})),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"6 \u2192 7 \u2192 5 \u2192 3 \u2192 4 \u2192 2 \u2192 1"),"\u306e\u9806\u306b\u8a18\u9332\u3055\u308c\u308b\u3002"),(0,i.kt)("h3",{id:"\u30d7\u30ed\u30b0\u30e9\u30e0"},"\u30d7\u30ed\u30b0\u30e9\u30e0"),(0,i.kt)("p",null,"\u63a2\u7d22\u6e08\u307f\u3092\u8a18\u9332\u3059\u308b\u306b\u306f\u518d\u5e30\u51e6\u7406\u3092\u7528\u3044\u308b\u3068\u697d\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002"),(0,i.kt)("h4",{id:"\u884c\u304d\u304c\u3051\u9806-1"},"\u884c\u304d\u304c\u3051\u9806"),(0,i.kt)(r.Z,{groupId:"code",mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="depth-first-search-pre-order.py"',title:'"depth-first-search-pre-order.py"'},"from collections import deque\n\ndef DFS(s ,p = -1):\n    # \u63a2\u7d22\u5bfe\u8c61\u306b\u5165\u3063\u305f\u6642\u306b\u8a18\u9332\u3059\u308b\n    record.append(s)\n    check[s] = True\n    for to in graph[s]:\n        # \u4e00\u5ea6\u63a2\u7d22\u3057\u305f\u3082\u306e\u306f\u63a2\u7d22\u3057\u306a\u3044\n        if check[to] == True:\n            continue\n        DFS(to,s)\nbox = [[1,3],[1,2],[3,6],[3,5],[5,7],[2,4]]\ngraph = [[] for _ in range(7)]\n\n# \u7121\u5411\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\nfor i in range(len(box)):\n    graph[box[i][0]-1].append(box[i][1]-1)\n    graph[box[i][1]-1].append(box[i][0]-1)\n\ncheck = [False] * 7\nrecord = []\nDFS(0)\n"))),(0,i.kt)(l.Z,{value:"C++",label:"C++",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="depth-first-search-pre-order.cpp"',title:'"depth-first-search-pre-order.cpp"'},"vector<int> record;\nvector<bool> check(7, false);\nvector<vector<int>> graph(7);\n\nvoid DFS(int s, int p = -1)\n{\n    // \u63a2\u7d22\u5bfe\u8c61\u306b\u5165\u3063\u305f\u6642\u306b\u8a18\u9332\u3059\u308b\n    record.push_back(s);\n    check[s] = true;\n    for (auto to : graph[s])\n    {\n        // \u4e00\u5ea6\u63a2\u7d22\u3057\u305f\u3082\u306e\u306f\u63a2\u7d22\u3057\u306a\u3044\n        if (check[to] == true)\n            continue;\n        DFS(to, s);\n    }\n}\n\nint main()\n{\n\n    vector<pair<int, int>> box = {{1, 3}, {1, 2}, {3, 6}, {3, 5}, {5, 7}, {2, 4}};\n    // \u7121\u5411\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\n    for (int i = 0; i < box.size(); ++i)\n    {\n        graph[box[i].first - 1].push_back(box[i].second - 1);\n        graph[box[i].second - 1].push_back(box[i].first - 1);\n    }\n\n    DFS(0);\n    return 0;\n}\n"))),(0,i.kt)(l.Z,{value:"C#",label:"C#",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="depth-first-search-pre-order.cs"',title:'"depth-first-search-pre-order.cs"'},'static List<bool> check = new List<bool>();\nstatic List<int> record = new List<int>();\nstatic List<List<int>> graph = new List<List<int>>();\n\npublic static void Main(string[] args)\n{\n    int[,] box = new int[,] { { 1, 3 }, { 1, 2 }, { 3, 6 }, { 3, 5 }, { 5, 7 }, { 2, 4 } };\n\n    for (int i = 0; i < 7; ++i)\n    {\n        graph.Add(new List<int>());\n        check.Add(false);\n    }\n\n    //\u7121\u5411\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\n    for (int i = 0; i < box.Length / 2; ++i)\n    {\n        graph[box[i, 0] - 1].Add(box[i, 1] - 1);\n        graph[box[i, 1] - 1].Add(box[i, 0] - 1);\n    }\n    DFS(0);\n    for(int i = 0; i < 7; ++i)\n    {\n        Console.Write(record[i] + " ");\n    }\n}\n\nstatic void DFS(int s, int p = -1)\n{\n    // \u63a2\u7d22\u5bfe\u8c61\u306b\u5165\u3063\u305f\u6642\u306b\u8a18\u9332\u3059\u308b\n    record.Add(s);\n    check[s] = true;\n    foreach (int to in graph[s])\n    {\n        // \u4e00\u5ea6\u63a2\u7d22\u3057\u305f\u3082\u306e\u306f\u63a2\u7d22\u3057\u306a\u3044\n        if (check[to] == true) continue;\n        DFS(to, s);\n    }\n}\n')))),(0,i.kt)("h4",{id:"\u901a\u308a\u304c\u3051\u9806-1"},"\u901a\u308a\u304c\u3051\u9806"),(0,i.kt)("p",null,"\u901a\u308a\u304c\u3051\u9806\u306f 2 \u5206\u6728\u306e\u5834\u5408\u306e\u307f\u8868\u73fe\u3067\u304d\u308b\u8d70\u67fb\u9806\u3067\u3042\u308b\u3002\u305d\u306e\u305f\u3081\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"\u884c\u304d\u304c\u3051\u9806"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"\u5e30\u308a\u304c\u3051\u9806"),"\u3068\u306f\u7570\u306a\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u306a\u308b\u3002"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"\u884c\u304d\u304c\u3051\u9806"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"\u5e30\u308a\u304c\u3051\u9806"),"\u306f\u591a\u5206\u6728\u3067\u3082\u540c\u69d8\u306b\u52d5\u4f5c\u3057\u307e\u3059\u3002"),(0,i.kt)(r.Z,{groupId:"code",mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="depth-first-search-in-order.py"',title:'"depth-first-search-in-order.py"'},"class tree:\n    def __init__(self,value):\n\n        self.left :tree = None\n        self.right :tree = None\n        self.value = value\ndef DFS(s : tree):\n    if s == None :return\n    # \u884c\u304d\u304c\u3051\u9806\u306a\u3089\u3053\u3053\u3067\u8ffd\u52a0\n    DFS(s.left)\n    # \u901a\u308a\u304c\u3051\u9806\u306a\u306e\u3067\u3053\u3053\u3067\u8ffd\u52a0\n    record.append(s.value)\n    DFS(s.right)\n    # \u5e30\u308a\u304c\u3051\u9806\u306a\u3089\u3053\u3053\u3067\u8ffd\u52a0\n\nroot = tree(0)\nroot.left = tree(2)\nroot.left.left = tree(5)\nroot.left.right = tree(4)\nroot.left.right.left = tree(6)\nroot.right = tree(1)\nroot.right.right = tree(3)\n\nrecord = []\nDFS(root)\n"))),(0,i.kt)(l.Z,{value:"C++",label:"C++",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="depth-first-search-in-order.cpp"',title:'"depth-first-search-in-order.cpp"'},"vector<int> record;\n\nstruct tree\n{\n    tree *left, *right;\n    int value;\n\n    tree() {}\n    tree(const int &val) : tree(nullptr, nullptr, val) {}\n    tree(tree *left_, tree *right_, const int &val_) : left(left_), right(right_), value(val_) {}\n};\n\nvoid DFS(tree *s)\n{\n    if (s == nullptr)\n        return;\n    // \u884c\u304d\u304c\u3051\u9806\u306a\u3089\u3053\u3053\u3067\u8ffd\u52a0\n    DFS(s->left);\n    // \u901a\u308a\u304c\u3051\u9806\u306a\u306e\u3067\u3053\u3053\u3067\u8ffd\u52a0\n    record.push_back(s->value);\n    DFS(s->right);\n    // \u5e30\u308a\u304c\u3051\u9806\u306a\u3089\u3053\u3053\u3067\u8ffd\u52a0\n}\n\nint main()\n{\n    tree *root = new tree(0);\n    root->left = new tree(2);\n    root->left->left = new tree(5);\n    root->left->right = new tree(4);\n    root->left->right->left = new tree(6);\n    root->right = new tree(1);\n    root->right->right = new tree(3);\n\n    DFS(root);\n\n    return 0;\n}\n\n"))),(0,i.kt)(l.Z,{value:"C#",label:"C#",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="depth-first-search-in-order.cs"',title:'"depth-first-search-in-order.cs"'},"\nclass tree\n{\n    public tree left = null;\n    public tree right = null;\n    public int value;\n    public tree(int x)\n    {\n        value = x;\n    }\n}\nstatic List<int> record = new List<int>();\n\npublic static void Main(string[] args)\n{\n    tree root = new tree(0);\n    root.left = new tree(2);\n    root.left.left = new tree(5);\n    root.left.right = new tree(4);\n    root.left.right.left = new tree(6);\n    root.right = new tree(1);\n    root.right.right = new tree(3);\n\n    DFS(root);\n}\n\nstatic void DFS(tree root)\n{\n    if (root != null)\n    {\n        // \u884c\u304d\u304c\u3051\u9806\u306a\u3089\u3053\u3053\u3067\u8ffd\u52a0\n        DFS(root.left);\n        // \u901a\u308a\u304c\u3051\u9806\u306a\u306e\u3067\u3053\u3053\u3067\u8ffd\u52a0\n        record.Add(root.value);\n        // \u5e30\u308a\u304c\u3051\u9806\u306a\u3089\u3053\u3053\u3067\u8ffd\u52a0\n        DFS(root.right);\n    }\n}\n")))),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"\u884c\u304d\u304c\u3051\u9806"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"\u5e30\u308a\u304c\u3051\u9806"),"\u3068\u3082\u306b\u8ffd\u52a0\u3059\u308b\u4f4d\u7f6e\u3092\u5909\u3048\u308b\u3060\u3051\u3067\u304d\u308b(2 \u5206\u6728\u306e\u5834\u5408\u306e\u307f)\u3002\n\u30dd\u30a4\u30f3\u30bf\u30fc\u3084\u53c2\u7167 ID \u306a\u3069\u8003\u3048\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3067\u3001\u5b9f\u88c5\u3068\u3057\u3066\u306f\u3084\u3084\u91cd\u3081\u3060\u3068\u601d\u3046\u3002"),(0,i.kt)("h4",{id:"\u5e30\u308a\u304c\u3051\u9806-1"},"\u5e30\u308a\u304c\u3051\u9806"),(0,i.kt)(r.Z,{groupId:"code",mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="depth-first-search-post-order.py"',title:'"depth-first-search-post-order.py"'},"from collections import deque\n\ndef DFS(s ,p = -1):\n    check[s] = True\n    for to in graph[s]:\n        # \u4e00\u5ea6\u63a2\u7d22\u3057\u305f\u3082\u306e\u306f\u63a2\u7d22\u3057\u306a\u3044\n        if check[to] == True:\n            continue\n        DFS(to,s)\n    # \u63a2\u7d22\u3092\u7d42\u3048\u305f\u6642\u306b\u8a18\u9332\u3059\u308b\n    record.append(s)\nbox = [[1,3],[1,2],[3,6],[3,5],[5,7],[2,4]]\ngraph = [[] for _ in range(7)]\n\n# \u7121\u5411\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\nfor i in range(len(box)):\n    graph[box[i][0]-1].append(box[i][1]-1)\n    graph[box[i][1]-1].append(box[i][0]-1)\n\ncheck = [False] * 7\nrecord = []\nDFS(0)\n"))),(0,i.kt)(l.Z,{value:"C++",label:"C++",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="depth-first-search-post-order.cpp"',title:'"depth-first-search-post-order.cpp"'},'vector<int> record;\nvector<bool> check(7, false);\nvector<vector<int>> graph(7);\n\nvoid DFS(int s, int p = -1)\n{\n    check[s] = true;\n    for (auto to : graph[s])\n    {\n        // \u4e00\u5ea6\u63a2\u7d22\u3057\u305f\u3082\u306e\u306f\u63a2\u7d22\u3057\u306a\u3044\n        if (check[to] == true)\n            continue;\n        DFS(to, s);\n    }\n    // \u63a2\u7d22\u5bfe\u8c61\u306b\u5165\u3063\u305f\u6642\u306b\u8a18\u9332\u3059\u308b\n    record.push_back(s);\n}\n\nint main()\n{\n\n    vector<pair<int, int>> box = {{1, 3}, {1, 2}, {3, 6}, {3, 5}, {5, 7}, {2, 4}};\n    // \u7121\u5411\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\n    for (int i = 0; i < box.size(); ++i)\n    {\n        graph[box[i].first - 1].push_back(box[i].second - 1);\n        graph[box[i].second - 1].push_back(box[i].first - 1);\n    }\n\n    DFS(0);\n    rep(i, 0, 7) printf("%d ", record[i]);\n    return 0;\n}\n'))),(0,i.kt)(l.Z,{value:"C#",label:"C#",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="depth-first-search-post-order.cs"',title:'"depth-first-search-post-order.cs"'},'static List<bool> check = new List<bool>();\nstatic List<int> record = new List<int>();\nstatic List<List<int>> graph = new List<List<int>>();\n\npublic static void Main(string[] args)\n{\n    int[,] box = new int[,] { { 1, 3 }, { 1, 2 }, { 3, 6 }, { 3, 5 }, { 5, 7 }, { 2, 4 } };\n\n    for (int i = 0; i < 7; ++i)\n    {\n        graph.Add(new List<int>());\n        check.Add(false);\n    }\n\n    //\u7121\u5411\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\n    for (int i = 0; i < box.Length / 2; ++i)\n    {\n        graph[box[i, 0] - 1].Add(box[i, 1] - 1);\n        graph[box[i, 1] - 1].Add(box[i, 0] - 1);\n    }\n    DFS(0);\n    for(int i = 0; i < 7; ++i)\n    {\n        Console.Write(record[i] + " ");\n    }\n}\n\nstatic void DFS(int s, int p = -1)\n{\n    check[s] = true;\n    foreach (int to in graph[s])\n    {\n        // \u4e00\u5ea6\u63a2\u7d22\u3057\u305f\u3082\u306e\u306f\u63a2\u7d22\u3057\u306a\u3044\n        if (check[to] == true) continue;\n        DFS(to, s);\n    }\n    // \u63a2\u7d22\u5bfe\u8c61\u306b\u5165\u3063\u305f\u6642\u306b\u8a18\u9332\u3059\u308b\n    record.Add(s);\n}\n')))),(0,i.kt)("p",null,"\u63a2\u7d22\u6e08\u307f\u3092\u8a18\u9332\u3057\u306a\u3044\u5834\u5408\u306f\u518d\u5e30\u51e6\u7406\u3092\u4f7f\u308f\u305a\u306b\u6b21\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u3002"),(0,i.kt)(r.Z,{groupId:"code",mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="depth-first-search.py"',title:'"depth-first-search.py"'},"from collections import deque\nbox = [[1,2],[1,4],[2,3],[3,5],[4,7],[4,6],[6,8]]\ngraph = [[] for _ in range(8)]\n\n# \u6709\u5411\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\nfor i in range(len(box)):\n    graph[box[i][0]-1].append(box[i][1]-1)\n\n# stack\u3092\u4f5c\u6210\nq = deque()\n\n# \u9802\u70b91\u756a\u3092\u8ffd\u52a0\nq.append(0)\n\n# \u9802\u70b91\u304b\u3089\u306e\u8ddd\u96e2\u3092\u8a18\u9332\u3059\u308b\u914d\u5217\ndist = [-1] * 8\ndist[0] = 0\nwhile (len(q) > 0):\n\n    # pop\n    pos = q.pop()\n    for to in graph[pos]:\n\n        # \u672a\u63a2\u7d22\u30c1\u30a7\u30c3\u30af\n        if dist[to] == -1:\n            dist[to] = dist[pos] + 1\n\n            # push\n            q.append(to)\n\n\n"))),(0,i.kt)(l.Z,{value:"C++",label:"C++",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="depth-first-search.cpp"',title:'"depth-first-search.cpp"'},"int main() {\n    vector<pair<int,int>> box = {{1,2},{1,4},{2,3},{3,5},{4,7},{4,6},{6,8}};\n    vector<vector<int>> graph(8);\n    // \u6709\u5411\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\n    for(int i = 0; i < box.size();++i){\n        graph[box[i].first-1].push_back(box[i].second-1);\n    }\n\n    // stack\u3092\u4f5c\u6210\n    stack<int> q;\n\n    // \u9802\u70b91\u756a\u3092\u8ffd\u52a0\n    q.push(0);\n\n    // \u9802\u70b91\u304b\u3089\u306e\u8ddd\u96e2\u3092\u8a18\u9332\u3059\u308b\u914d\u5217\n    vector<int> dist(8,-1);\n    dist[0] = 0;\n\n    while (!q.empty())\n    {\n        // pop\n        int pos = q.top();q.pop();\n        for (auto to: graph[pos]){\n            if (dist[to] == -1){\n                dist[to] = dist[pos] + 1;\n\n                // push\n                q.push(to);\n            }\n        }\n    }\n\n    return 0;\n}\n"))),(0,i.kt)(l.Z,{value:"C#",label:"C#",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="depth-first-search.cs"',title:'"depth-first-search.cs"'},"public static void Main(string[] args)\n{\n    int[,] box = new int[,] { { 1, 2 }, { 1, 4 }, { 2, 3 }, { 3, 5 }, { 4, 7 }, { 4, 6 }, { 6, 8 } };\n    List<List<int>> graph = new List<List<int>>();\n    for (int i = 0;i < 8; ++i)\n    {\n        graph.Add(new List<int>());\n    }\n\n    for (int i = 0; i < box.Length/2; ++i)\n    {\n        graph[box[i, 0] - 1].Add(box[i, 1] - 1);\n    }\n\n    // stack\u3092\u4f5c\u6210\n    Stack<int> q = new Stack<int>();\n\n    // \u9802\u70b91\u756a\u3092\u8ffd\u52a0\n    q.Push(0);\n\n    // \u9802\u70b91\u304b\u3089\u306e\u8ddd\u96e2\u3092\u8a18\u9332\u3059\u308b\u914d\u5217\n    int[] dist = new int[8];\n    for (int i = 0; i < dist.Length; ++i) dist[i] = -1;\n    dist[0] = 0;\n\n    while (q.Count > 0)\n    {\n        // pop\n        int pos = q.Pop();\n        foreach (int to in graph[pos])\n        {\n            if (dist[to] == -1)\n            {\n                dist[to] = dist[pos] + 1;\n\n                // push\n                q.Push(to);\n            }\n        }\n    }\n\n}\n")))))}u.isMDXComponent=!0},5269:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/depth-1.drawio-b98610c77089e13e8e3cc9f5ab730cd8.svg"},24080:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/depth-10.drawio-00159927641fdad958aa06ad6918c500.svg"},20878:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/depth-11.drawio-a6ca2a02fb023508a8ecf88190971b60.svg"},36762:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/depth-12.drawio-a586f8be139f0eb6a2210799673f9e46.svg"},65997:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/depth-13.drawio-ebf71f6dc7aa5ac1c673853e9759ba88.svg"},15250:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/depth-2.drawio-a8bb31661d160a954827406036688756.svg"},86361:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/depth-3.drawio-66e3d90527f4d1ec3b380b06daa04f20.svg"},16218:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/depth-4.drawio-5d40a01da739920ab3bcea770ecd7c1e.svg"},11658:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/depth-5.drawio-c41f0a214a53c94106a2cfec582df64c.svg"},46437:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/depth-6.drawio-5aa60325881b5730e6a91bb0f56c0f69.svg"},32627:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/depth-7.drawio-59ff4ebf758ce94c180b1ab29a5e3f5c.svg"},62263:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/depth-8.drawio-57aac699257d71c63b5a3563ccc0502f.svg"},17372:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/depth-9.drawio-1303622ff7ec55217d4955ea079eb666.svg"}}]);