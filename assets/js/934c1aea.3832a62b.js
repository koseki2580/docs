"use strict";(self.webpackChunkstudy_doxs=self.webpackChunkstudy_doxs||[]).push([[4792],{47168:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>p,toc:()=>c});var i=t(85893),r=t(11151),s=t(74866),a=t(85162);const l={title:"\u8ee2\u7f6e\u5f0f\u6697\u53f7",sidebar_label:"\u8ee2\u7f6e\u5f0f\u6697\u53f7",draft:!1,toc_max_heading_level:4,tags:["\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0","\u53e4\u5178\u6697\u53f7"]},o=void 0,p={id:"Cryptography/classical-cipher/transposition-cipher",title:"\u8ee2\u7f6e\u5f0f\u6697\u53f7",description:"\u8ee2\u7f6e\u5f0f\u6697\u53f7\u3068\u306f",source:"@site/docs/02-Cryptography/00-classical-cipher/03-transposition-cipher.md",sourceDirName:"02-Cryptography/00-classical-cipher",slug:"/Cryptography/classical-cipher/transposition-cipher",permalink:"/study-docs/docs/Cryptography/classical-cipher/transposition-cipher",draft:!1,unlisted:!1,editUrl:"https://github.com/koseki2580/study-docs/edit/main/docs/02-Cryptography/00-classical-cipher/03-transposition-cipher.md",tags:[{label:"\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0",permalink:"/study-docs/docs/tags/\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0"},{label:"\u53e4\u5178\u6697\u53f7",permalink:"/study-docs/docs/tags/\u53e4\u5178\u6697\u53f7"}],version:"current",lastUpdatedBy:"koseki2580",lastUpdatedAt:1697349922,formattedLastUpdatedAt:"2023\u5e7410\u670815\u65e5",sidebarPosition:3,frontMatter:{title:"\u8ee2\u7f6e\u5f0f\u6697\u53f7",sidebar_label:"\u8ee2\u7f6e\u5f0f\u6697\u53f7",draft:!1,toc_max_heading_level:4,tags:["\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0","\u53e4\u5178\u6697\u53f7"]},sidebar:"CryptographySidebar",previous:{title:"\u30b9\u30ad\u30e5\u30bf\u30ec\u30fc\u6697\u53f7",permalink:"/study-docs/docs/Cryptography/classical-cipher/scythia-cipher"},next:{title:"\u5358\u4e00\u63db\u5b57\u5f0f\u6697\u53f7",permalink:"/study-docs/docs/Cryptography/classical-cipher/simple-substitution-cipher"}},u={},c=[{value:"\u8ee2\u7f6e\u5f0f\u6697\u53f7\u3068\u306f",id:"\u8ee2\u7f6e\u5f0f\u6697\u53f7\u3068\u306f",level:2},{value:"\u30d7\u30ed\u30b0\u30e9\u30e0",id:"\u30d7\u30ed\u30b0\u30e9\u30e0",level:3},{value:"\u52d5\u4f5c",id:"\u52d5\u4f5c",level:3}];function d(e){const n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"\u8ee2\u7f6e\u5f0f\u6697\u53f7\u3068\u306f",children:"\u8ee2\u7f6e\u5f0f\u6697\u53f7\u3068\u306f"}),"\n",(0,i.jsxs)(n.p,{children:["\u5e73\u6587\u306e\u9806\u756a\u3092\u5165\u308c\u66ff\u3048\u308b\u6697\u53f7\u65b9\u5f0f\u3092",(0,i.jsx)(n.code,{children:"\u8ee2\u7f6e\u5f0f\u6697\u53f7"}),"\u3068\u3044\u3046\u3002\n\u5e73\u6587\u3092\u4e00\u5b9a\u306e\u30d6\u30ed\u30c3\u30af\u306b\u5206\u3051\u3066\u3001\u9806\u756a\u3092\u5165\u308c\u66ff\u3048\u3066\u3044\u304f\u3002\u30d6\u30ed\u30c3\u30af\u306e\u9577\u3055\u3092 n \u3068\u3059\u308b\u3068\u5e73\u6587\u306e\u6587\u5b57\u306e\u6570\u304c n \u306e\u5834\u5408\u6570\u51fa\u306a\u3044\u5834\u5408\u306f\u7dba\u9e97\u306b\u30d6\u30ed\u30c3\u30af\u5206\u3051\u304c\u3067\u304d\u306a\u3044\u3002\u4f59\u3063\u305f\u30d6\u30ed\u30c3\u30af\u306b\u306f\u4f55\u3089\u304b\u306e\u6587\u5b57\u3092\u5165\u308c\u30d1\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u65b9\u6cd5\u3084\u305d\u306e\u307e\u307e\u306b\u3057\u3066\u9806\u756a\u3092\u5165\u308c\u66ff\u3048\u306a\u3044\u65b9\u6cd5\u7b49\u304c\u3042\u308b\u3002\n\u30d1\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u5834\u5408\u306f\u5358\u7d14\u306b\u30d1\u30c6\u30a3\u30f3\u30b0\u3057\u3066\u3057\u307e\u3046\u3068\u30d1\u30c6\u30a3\u30f3\u30b0\u6587\u5b57\u4ee5\u5916\u306e\u79fb\u52d5\u4f4d\u7f6e\u304c\u30d0\u30ec\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308b\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3042\u308b\u3002"]}),"\n",(0,i.jsx)(n.h3,{id:"\u30d7\u30ed\u30b0\u30e9\u30e0",children:"\u30d7\u30ed\u30b0\u30e9\u30e0"}),"\n",(0,i.jsxs)(s.Z,{groupId:"code",children:[(0,i.jsx)(a.Z,{value:"python",label:"Python",default:!0,children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="transposition-cipher.py"',children:'import random\ndef generate_transposition_table(size: int):\n    table = [i for i in range(size)]\n    random.shuffle(table)\n    return table\n\n\ndef transposition_cipher(input_text: str, transposition_table: list[int], direction: str = "encryption"):\n    input_text = input_text.upper()\n    result = []\n    size = len(transposition_table)\n    if direction == "decryption":\n        temp_table = [0] * size\n        for i in range(size):\n            temp_table[transposition_table[i]] = i\n        transposition_table = temp_table\n\n    for i in range(0, len(input_text) - size+1, size):\n        temp_text = ""\n        for j in range(size):\n            temp_text += input_text[i + transposition_table[j]]\n        result.append(temp_text)\n    if len(input_text) % size != 0:\n        result.append(\n            input_text[-(len(input_text) % size):]\n        )\n    return "".join(result)\n'})})}),(0,i.jsx)(a.Z,{value:"C++",label:"C++",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",metastring:'title="transposition-cipher.cpp"',children:'vector<int> generateTranspositionTable(int size)\n{\n    vector<int> table;\n    for (int i = 0; i < size; ++i)\n        table.push_back(i);\n    std::random_device get_rand_dev;\n\n    std::mt19937_64 get_rand_mt(get_rand_dev());\n    std::shuffle(table.begin(), table.end(), get_rand_mt);\n    return table;\n}\n\nstring transpositionCipher(string inputText, vector<int> transpositionTable, string direction = "encryption")\n{\n    transform(inputText.begin(), inputText.end(), inputText.begin(), ::toupper);\n    vector<string> result;\n    int size = transpositionTable.size();\n    if (direction == "decryption")\n    {\n        vector<int> tempTable(size, 0);\n        for (int i = 0; i < size; ++i)\n            tempTable[transpositionTable[i]] = i;\n        swap(transpositionTable, tempTable);\n    }\n    for (int i = 0; i < inputText.size() - size + 1; i += size)\n    {\n        string tempText = "";\n        for (int j = 0; j < size; ++j)\n            tempText += inputText[i + transpositionTable[j]];\n        result.push_back(tempText);\n    }\n    if (inputText.size() % size != 0)\n    {\n        result.push_back(inputText.substr(inputText.size() - (inputText.size() % size)));\n    }\n    std::ostringstream os;\n    std::copy(result.begin(), result.end(), std::ostream_iterator<std::string>(os));\n    return os.str();\n}\n'})})}),(0,i.jsx)(a.Z,{value:"C#",label:"C#",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",metastring:'title="transposition-cipher.cs"',children:'static private int[] GenerateTranspositionTable(int size)\n{\n    int[] table = new int[size];\n    for (int i = 0; i < size; ++i)\n    {\n        table[i] = i;\n    }\n    return table.OrderBy(i => Guid.NewGuid()).ToArray();\n}\n\nstatic private string TranspositionCipher(\n    string inputText,\n    int[] transpositionTable,\n    string direction = "encryption"\n)\n{\n    inputText.ToUpper();\n    List<StringBuilder> result = new List<StringBuilder>();\n    int size = transpositionTable.Length;\n    if (direction == "decryption")\n    {\n        int[] tempTable = new int[size];\n        for (int i = 0; i < size; ++i)\n        {\n            tempTable[transpositionTable[i]] = i;\n        }\n        (transpositionTable, tempTable) = (tempTable, transpositionTable);\n    }\n    for (int i = 0; i < inputText.Length - size + 1; i += size)\n    {\n        StringBuilder tempText = new StringBuilder();\n        for (int j = 0; j < size; ++j)\n        {\n            tempText.Append(inputText[i + transpositionTable[j]]);\n        }\n        result.Add(tempText);\n    }\n    if (inputText.Length % size != 0)\n    {\n        result.Add(\n            new StringBuilder(\n                inputText.Substring(inputText.Length - (inputText.Length % size))\n            )\n        );\n    }\n    StringBuilder ret_string = new StringBuilder();\n    for (int i = 0; i < result.Count; ++i)\n    {\n        ret_string.Append(result[i]);\n    }\n    return ret_string.ToString();\n}\n'})})}),(0,i.jsxs)(a.Z,{value:"Rust",label:"Rust",children:[(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"rand \u30af\u30ec\u30fc\u30c8\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",metastring:'title="transposition-cipher.rs"',children:"use rand::seq::SliceRandom;\n\nfn  generate_transposition_table(size:usize) -> Vec<usize>{\n    let mut table = vec![0; size];\n    for i in 0..size{\n        table[i] = i;\n    }\n    let mut rng = rand::thread_rng();\n    table.shuffle(&mut rng);\n    table\n}\nfn transposition_cipher_to_encrypt(input_text:String, transposition_table:Vec<usize>) -> String{\n    let  input_text_upper = input_text.to_uppercase();\n    let mut result:Vec<String> = vec!();\n    let size = transposition_table.len();\n    for i in (0..( input_text.len() - size + 1)).step_by(size){\n        let mut temp_text = String::new();\n        for j in 0..size{\n            let pos = i + transposition_table[j];\n            temp_text += &input_text_upper[pos..pos+1];\n        }\n        result.push(temp_text);\n    }\n    if (input_text.len() % size != 0){\n        result.push((&(input_text_upper[input_text_upper.len() - (input_text_upper.len() % size)..])).to_string())\n    }\n    let mut ret_string = String::new();\n    for i in 0..result.len(){\n\n        ret_string += &result[i];\n    }\n    ret_string\n}\n\nfn transposition_cipher_to_decrypt(input_text:String, transposition_table:Vec<usize>) -> String{\n    let  input_text_upper = input_text.to_uppercase();\n    let mut result:Vec<String> = vec!();\n    let size = transposition_table.len();\n    let mut decrypt_transposition_table:Vec<usize> = vec![0; size];\n    for i in 0..size{\n        decrypt_transposition_table[transposition_table[i]] = i;\n    }\n    for i in (0..( input_text.len() - size + 1)).step_by(size){\n        let mut temp_text = String::new();\n        for j in 0..size{\n            let pos = i + decrypt_transposition_table[j];\n            temp_text += &input_text_upper[pos..pos+1];\n        }\n        result.push(temp_text);\n    }\n    if (input_text.len() % size != 0){\n        result.push((&(input_text_upper[input_text_upper.len() - (input_text_upper.len() % size)..])).to_string())\n    }\n    let mut ret_string = String::new();\n    for i in 0..result.len(){\n\n        ret_string += &result[i];\n    }\n    ret_string\n}\n"})})]}),(0,i.jsx)(a.Z,{value:"JavaScript",label:"JavaScript",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",metastring:'title="transposition-cipher.js"',children:'//Fisher-Yates\u30b7\u30e3\u30c3\u30d5\u30eb\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; --i) {\n    const j = Math.floor(Math.random() * (i + 1));\n    // \u8981\u7d20\u306e\u4ea4\u63db\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\nfunction generateTranspositionTable(size) {\n  let table = Array.from({ length: size }, (_, index) => index);\n  shuffleArray(table);\n  return table;\n}\n\nfunction transpositionCipher(\n  inputText,\n  transpositionTable,\n  direction = "encryption"\n) {\n  inputText.toUpperCase();\n  let result = [];\n  const size = transpositionTable.length;\n  if (direction === "decryption") {\n    let tempTable = new Array(size).fill(0);\n    for (let i = 0; i < size; ++i) {\n      tempTable[transpositionTable[i]] = i;\n    }\n    transpositionTable = tempTable;\n  }\n  for (let i = 0; i < inputText.length - size + 1; i += size) {\n    let tempText = "";\n    for (let j = 0; j < size; ++j) {\n      tempText += inputText[i + transpositionTable[j]];\n    }\n    result.push(tempText);\n  }\n  if (inputText.length % size !== 0) {\n    result.push(\n      inputText.substring(inputText.length - (inputText.length % size))\n    );\n  }\n  let ret_string = "";\n  for (let i = 0; i < result.length; ++i) {\n    ret_string += result[i];\n  }\n  return ret_string;\n}\n'})})})]}),"\n",(0,i.jsx)(n.h3,{id:"\u52d5\u4f5c",children:"\u52d5\u4f5c"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",metastring:"live",live:!0,children:'function TranspositionCipher(props) {\n  // \u6697\u53f7\u5316 or \u5fa9\u53f7\u5316\u3059\u308b\u6587\u5b57\u5217\n  const inputText = "APPLE";\n\n  // \u8ee2\u7f6e\u3059\u308b\u30d6\u30ed\u30c3\u30af\u6570\n  const size = 3;\n\n  // \u6697\u53f7\u5316 or \u5fa9\u53f7\u5316\n  const direction = "encryption";\n\n  //Fisher-Yates\u30b7\u30e3\u30c3\u30d5\u30eb\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\n  function shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; --i) {\n      const j = Math.floor(Math.random() * (i + 1));\n      // \u8981\u7d20\u306e\u4ea4\u63db\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  function generateTranspositionTable(size) {\n    let table = Array.from({ length: size }, (_, index) => index);\n    shuffleArray(table);\n    return table;\n  }\n\n  function transpositionCipher(\n    inputText,\n    transpositionTable,\n    direction = "encryption"\n  ) {\n    inputText.toUpperCase();\n    let result = [];\n    const size = transpositionTable.length;\n    if (direction === "decryption") {\n      let tempTable = new Array(size).fill(0);\n      for (let i = 0; i < size; ++i) {\n        tempTable[transpositionTable[i]] = i;\n      }\n      transpositionTable = tempTable;\n    }\n    for (let i = 0; i < inputText.length - size + 1; i += size) {\n      let tempText = "";\n      for (let j = 0; j < size; ++j) {\n        tempText += inputText[i + transpositionTable[j]];\n      }\n      result.push(tempText);\n    }\n    if (inputText.length % size !== 0) {\n      result.push(\n        inputText.substring(inputText.length - (inputText.length % size))\n      );\n    }\n    let ret_string = "";\n    for (let i = 0; i < result.length; ++i) {\n      ret_string += result[i];\n    }\n    return ret_string;\n  }\n\n  // React\n  const [table, setTable] = useState(undefined);\n  const [cipher, setCipher] = useState(undefined);\n\n  // table\u304c\u751f\u6210\u3055\u308c\u305f\u5f8c\u306b\u6697\u53f7\u5316\u3092\u884c\u3046\n  useEffect(() => {\n    if (!table) return;\n    const cipher = transpositionCipher(inputText, table, "encryption");\n    setCipher(cipher);\n  }, [table]);\n  // \u8aad\u307f\u8fbc\u307f\u6642\u306b\u4e00\u5ea6\u3060\u3051\u547c\u3073\u51fa\u3059\n  useEffect(() => {\n    // \u8aad\u307f\u8fbc\u307f\u3067\u304d\u3066\u304b\u3089\u547c\u3073\u3060\u3059\n    setTable(generateTranspositionTable(size));\n  }, []);\n\n  return (\n    <div\n      style={{\n        display: "flex",\n        flexDirection: "row",\n        flexWrap: "nowrap",\n        alignItems: "flex-start",\n        justifyContent: "space-evenly",\n      }}\n    >\n      <div>\n        <h3>\u5143\u306e\u6587\u5b57\u5217</h3>\n        <p>{inputText}</p>\n      </div>\n      {table === undefined || cipher === undefined ? (\n        /* \u5909\u63db\u30c6\u30fc\u30d6\u30eb\u3092\u751f\u6210\u3057\u3066\u308b\u304b\u3064\u6697\u53f7\u5316\u6e08\u307f\u3067\u3042\u308c\u3070\u8868\u793a */ <></>\n      ) : (\n        <>\n          <span className="mrel" style={{ padding: "5px", margin: "auto 0px" }}>\n            \u2192\n          </span>\n          <div style={{ overflowX: "scroll" }}>\n            <h3>\u6697\u53f7\u5316</h3>\n            <p>{cipher}</p>\n          </div>\n          <span className="mrel" style={{ padding: "5px", margin: "auto 0px" }}>\n            \u2192\n          </span>\n          <div>\n            <h3>\u5fa9\u53f7\u5316</h3>\n            <p style={{ padding: "1px", margin: "2px" }}>\n              {transpositionCipher(cipher, table, "decryption")}\n            </p>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},85162:(e,n,t)=>{t.d(n,{Z:()=>a});t(67294);var i=t(86010);const r={tabItem:"tabItem_Ymn6"};var s=t(85893);function a(e){let{children:n,hidden:t,className:a}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,i.Z)(r.tabItem,a),hidden:t,children:n})}},74866:(e,n,t)=>{t.d(n,{Z:()=>v});var i=t(67294),r=t(86010),s=t(12466),a=t(16550),l=t(20469),o=t(91980),p=t(67392),u=t(50012);function c(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function d(e){const{values:n,children:t}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return c(e).map((e=>{let{props:{value:n,label:t,attributes:i,default:r}}=e;return{value:n,label:t,attributes:i,default:r}}))}(t);return function(e){const n=(0,p.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function b(e){let{queryString:n=!1,groupId:t}=e;const r=(0,a.k6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o._X)(s),(0,i.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(r.location.search);n.set(s,e),r.replace({...r.location,search:n.toString()})}),[s,r])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,s=d(e),[a,o]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=t.find((e=>e.default))??t[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:s}))),[p,c]=b({queryString:t,groupId:r}),[f,g]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,s]=(0,u.Nk)(t);return[r,(0,i.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:r}),m=(()=>{const e=p??f;return h({value:e,tabValues:s})?e:null})();(0,l.Z)((()=>{m&&o(m)}),[m]);return{selectedValue:a,selectValue:(0,i.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),c(e),g(e)}),[c,g,s]),tabValues:s}}var g=t(72389);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(85893);function _(e){let{className:n,block:t,selectedValue:i,selectValue:a,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:p}=(0,s.o5)(),u=e=>{const n=e.currentTarget,t=o.indexOf(n),r=l[t].value;r!==i&&(p(n),a(r))},c=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>o.push(e),onKeyDown:c,onClick:u,...s,className:(0,r.Z)("tabs__item",m.tabItem,s?.className,{"tabs__item--active":i===n}),children:t??n},n)}))})}function T(e){let{lazy:n,children:t,selectedValue:r}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===r));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function y(e){const n=f(e);return(0,x.jsxs)("div",{className:(0,r.Z)("tabs-container",m.tabList),children:[(0,x.jsx)(_,{...e,...n}),(0,x.jsx)(T,{...e,...n})]})}function v(e){const n=(0,g.Z)();return(0,x.jsx)(y,{...e,children:c(e.children)},String(n))}},11151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>a});var i=t(67294);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);