"use strict";(self.webpackChunkstudy_doxs=self.webpackChunkstudy_doxs||[]).push([[2062],{44140:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>b,frontMatter:()=>l,metadata:()=>u,toc:()=>c});var r=t(85893),i=t(11151),a=t(74866),s=t(85162);const l={title:"\u5358\u4e00\u63db\u5b57\u5f0f\u6697\u53f7",sidebar_label:"\u5358\u4e00\u63db\u5b57\u5f0f\u6697\u53f7",draft:!1,toc_max_heading_level:4,tags:["\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0","\u53e4\u5178\u6697\u53f7"]},o=void 0,u={id:"Cryptography/classical-cipher/simple-substitution-cipher",title:"\u5358\u4e00\u63db\u5b57\u5f0f\u6697\u53f7",description:"\u5358\u4e00\u63db\u5b57\u5f0f\u6697\u53f7\u3068\u306f",source:"@site/docs/02-Cryptography/00-classical-cipher/04-simple-substitution-cipher.md",sourceDirName:"02-Cryptography/00-classical-cipher",slug:"/Cryptography/classical-cipher/simple-substitution-cipher",permalink:"/study-docs/docs/Cryptography/classical-cipher/simple-substitution-cipher",draft:!1,unlisted:!1,editUrl:"https://github.com/koseki2580/study-docs/edit/main/docs/02-Cryptography/00-classical-cipher/04-simple-substitution-cipher.md",tags:[{label:"\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0",permalink:"/study-docs/docs/tags/\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0"},{label:"\u53e4\u5178\u6697\u53f7",permalink:"/study-docs/docs/tags/\u53e4\u5178\u6697\u53f7"}],version:"current",lastUpdatedBy:"koseki2580",lastUpdatedAt:1697539840,formattedLastUpdatedAt:"2023\u5e7410\u670817\u65e5",sidebarPosition:4,frontMatter:{title:"\u5358\u4e00\u63db\u5b57\u5f0f\u6697\u53f7",sidebar_label:"\u5358\u4e00\u63db\u5b57\u5f0f\u6697\u53f7",draft:!1,toc_max_heading_level:4,tags:["\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0","\u53e4\u5178\u6697\u53f7"]},sidebar:"CryptographySidebar",previous:{title:"\u8ee2\u7f6e\u5f0f\u6697\u53f7",permalink:"/study-docs/docs/Cryptography/classical-cipher/transposition-cipher"},next:{title:"\u591a\u8868\u5f0f\u6697\u53f7",permalink:"/study-docs/docs/Cryptography/classical-cipher/polyalphabetic-substitution-cipher"}},p={},c=[{value:"\u5358\u4e00\u63db\u5b57\u5f0f\u6697\u53f7\u3068\u306f",id:"\u5358\u4e00\u63db\u5b57\u5f0f\u6697\u53f7\u3068\u306f",level:2},{value:"\u30d7\u30ed\u30b0\u30e9\u30e0",id:"\u30d7\u30ed\u30b0\u30e9\u30e0",level:3},{value:"\u52d5\u4f5c",id:"\u52d5\u4f5c",level:3}];function d(e){const n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"\u5358\u4e00\u63db\u5b57\u5f0f\u6697\u53f7\u3068\u306f",children:"\u5358\u4e00\u63db\u5b57\u5f0f\u6697\u53f7\u3068\u306f"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"\u63db\u5b57\u5f0f\u6697\u53f7"}),"\u3068\u306f\u5e73\u6587\u306e 1 \u6587\u5b57\u307e\u305f\u306f\u6570\u6587\u5b57\u5358\u4f4d\u3067\u5225\u306e\u6587\u5b57\u306b\u5bfe\u5fdc\u3055\u305b\u3066\u5909\u63db\u3059\u308b\u6697\u53f7\u306e\u3053\u3068\u3092\u8a00\u3046\u3002\n\u5358\u4e00\u3068\u3042\u308b\u306e\u3067\u5909\u63db\u8868\u3092 1 \u3064\u3060\u3051\u4f7f\u7528\u3057\u3066\u6697\u53f7\u5316\u3092\u884c\u3046\u3002"]}),"\n",(0,r.jsx)(n.h3,{id:"\u30d7\u30ed\u30b0\u30e9\u30e0",children:"\u30d7\u30ed\u30b0\u30e9\u30e0"}),"\n",(0,r.jsxs)(a.Z,{groupId:"code",children:[(0,r.jsx)(s.Z,{value:"python",label:"Python",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",metastring:'title="simple-substitution-cipher.py"',children:'import random\ndef generate_simple_substitution_table():\n    base = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"\n    table = [i for i in base]\n    random.shuffle(table)\n    return "".join(table)\n\n\ndef simple_substitution_cipher(input_text: str, transposition_table: str, direction: str = "encryption"):\n    input_text = input_text.upper()\n    base = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"\n\n    result = []\n    if direction == "decryption":\n        transposition_table, base = base, transposition_table\n    for i in range(len(input_text)):\n        result.append(transposition_table[base.index(input_text[i])])\n    return "".join(result)\n'})})}),(0,r.jsx)(s.Z,{value:"C++",label:"C++",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",metastring:'title="simple-substitution-cipher.cpp"',children:'\nstring generateSimpleSubstitutionTable()\n{\n    string base = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n    vector<char> table(base.begin(), base.end());\n\n    random_device get_rand_dev;\n\n    std::mt19937_64 get_rand_mt(get_rand_dev());\n    std::shuffle(table.begin(), table.end(), get_rand_mt);\n    string result(table.begin(), table.end());\n\n    return result;\n}\nstring simpleSubstitutionCipher(string inputText, string transpositionTable, string direction = "encryption")\n{\n    transform(inputText.begin(), inputText.end(), inputText.begin(), ::toupper);\n    string base = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n    if (direction == "decryption")\n        swap(base, transpositionTable);\n    string retText;\n    for (int i = 0; i < inputText.size(); ++i)\n    {\n        retText += transpositionTable[base.find(inputText[i])];\n    }\n    return retText;\n}\n'})})}),(0,r.jsx)(s.Z,{value:"C#",label:"C#",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",metastring:'title="simple-substitution-cipher.cs"',children:'private static String GenerateSimpleSubstitutionTable()\n{\n    String _base = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n    char[] chars = _base.ToCharArray();\n    return new String(chars.OrderBy(i => Guid.NewGuid()).ToArray());\n}\n\nprivate static String SimpleSubstitutionCipher(\n    String inputText,\n    String transpositionTable,\n    String direction = "encryption"\n)\n{\n    inputText.ToUpper();\n    String _base = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n    if (direction == "decryption")\n    {\n        (_base, transpositionTable) = (transpositionTable, _base);\n    }\n    StringBuilder retText = new StringBuilder();\n    for (int i = 0; i < inputText.Length; ++i)\n    {\n        retText.Append(transpositionTable[_base.IndexOf(inputText[i])]);\n    }\n    return retText.ToString();\n}\n'})})}),(0,r.jsxs)(s.Z,{value:"Rust",label:"Rust",children:[(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"rand \u30af\u30ec\u30fc\u30c8\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",metastring:'title="simple-substitution-cipher.rs"',children:'fn generate_simple_substitution_table() -> String{\n    let base = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n    let mut chars: Vec<char> = base.chars().collect();\n    chars.shuffle(&mut rand::thread_rng());\n\n    chars.iter().collect()\n}\n\nfn  simple_substitution_cipher_to_encryption(input_text:String, transposition_table:String ) -> String {\n    let input_text_upper = input_text.to_uppercase();\n    let base = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n    let mut ret_text = String::new();\n    for i in 0..input_text_upper.len(){\n        let pos =  base.find(input_text_upper.chars().nth(i).unwrap()).unwrap();\n        ret_text.push(transposition_table.chars().nth(pos).unwrap());\n    }\n    ret_text.to_string()\n}\n\nfn  simple_substitution_cipher_to_decryption(input_text:String, transposition_table:String) -> String {\n    let input_text_upper = input_text.to_uppercase();\n    let base = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n    let mut ret_text = String::new();\n    for i in 0..input_text_upper.len(){\n        let pos =  transposition_table.find(input_text_upper.chars().nth(i).unwrap()).unwrap();\n        ret_text.push(base.chars().nth(pos).unwrap());\n    }\n    ret_text.to_string()\n}\n'})})]}),(0,r.jsx)(s.Z,{value:"JavaScript",label:"JavaScript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="simple-substitution-cipher.js"',children:'//Fisher-Yates\u30b7\u30e3\u30c3\u30d5\u30eb\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; --i) {\n    const j = Math.floor(Math.random() * (i + 1));\n    // \u8981\u7d20\u306e\u4ea4\u63db\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\nfunction generateSimpleSubstitutionTable() {\n  const base = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n  const chars = base.split("");\n  shuffleArray(chars);\n  return chars;\n}\n\nfunction simpleSubstitutionCipher(\n  inputText,\n  transpositionTable,\n  direction = "encryption"\n) {\n  inputText = inputText.toUpperCase();\n  const base = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n  let retText = "";\n  let _base = base;\n  let _transpositionTable = transpositionTable;\n  if (direction == "decryption") {\n    _transpositionTable = base;\n    _base = transpositionTable;\n  }\n  for (let i = 0; i < inputText.length; ++i) {\n    retText += _transpositionTable[_base.indexOf(inputText[i])];\n  }\n  return retText;\n}\n'})})})]}),"\n",(0,r.jsx)(n.h3,{id:"\u52d5\u4f5c",children:"\u52d5\u4f5c"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:"live",live:!0,children:'function SimpleSubstitutionCipher(props) {\n  // \u6697\u53f7\u5316 or \u5fa9\u53f7\u5316\u3059\u308b\u6587\u5b57\u5217\n  const inputText = "APPLE";\n\n  // encryption or decryption\n  const direction = "encryption";\n\n  // \u4ee5\u4e0b\u306f\u7279\u306b\u5909\u66f4\u3057\u306a\u304f\u3066\u826f\u3044\n  const base = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n\n  //Fisher-Yates\u30b7\u30e3\u30c3\u30d5\u30eb\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\n  function shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; --i) {\n      const j = Math.floor(Math.random() * (i + 1));\n      // \u8981\u7d20\u306e\u4ea4\u63db\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  function generateSimpleSubstitutionTable() {\n    const chars = base.split("");\n    shuffleArray(chars);\n    return chars;\n  }\n  function simpleSubstitutionCipher(\n    inputText,\n    transpositionTable,\n    direction = "encryption"\n  ) {\n    inputText = inputText.toUpperCase();\n    let retText = "";\n    let _base = base;\n    let _transpositionTable = transpositionTable;\n    if (direction == "decryption") {\n      _transpositionTable = base;\n      _base = transpositionTable;\n    }\n    for (let i = 0; i < inputText.length; ++i) {\n      retText += _transpositionTable[_base.indexOf(inputText[i])];\n    }\n    return retText;\n  }\n\n  // React\n  const [table, setTable] = useState(undefined);\n  const [cipher, setCipher] = useState(undefined);\n\n  // table\u304c\u751f\u6210\u3055\u308c\u305f\u5f8c\u306b\u6697\u53f7\u5316\u3092\u884c\u3046\n  useEffect(() => {\n    if (!table) return;\n    const cipher = simpleSubstitutionCipher(inputText, table, "encryption");\n    setCipher(cipher);\n  }, [table]);\n  // \u8aad\u307f\u8fbc\u307f\u6642\u306b\u4e00\u5ea6\u3060\u3051\u547c\u3073\u51fa\u3059\n  useEffect(() => {\n    // \u8aad\u307f\u8fbc\u307f\u3067\u304d\u3066\u304b\u3089\u547c\u3073\u3060\u3059\n    setTable(generateSimpleSubstitutionTable());\n  }, []);\n  return (\n    <>\n      <div\n        style={{\n          display: "flex",\n          flexDirection: "row",\n          flexWrap: "nowrap",\n          alignItems: "flex-start",\n          justifyContent: "space-evenly",\n        }}\n      >\n        <div>\n          <h3>\u5143\u306e\u6587\u5b57\u5217</h3>\n          <p>{inputText}</p>\n        </div>\n        {table === undefined || cipher === undefined ? (\n          /* \u5909\u63db\u30c6\u30fc\u30d6\u30eb\u3092\u751f\u6210\u3057\u3066\u308b\u304b\u3064\u6697\u53f7\u5316\u6e08\u307f\u3067\u3042\u308c\u3070\u8868\u793a */ <></>\n        ) : (\n          <>\n            <span\n              className="mrel"\n              style={{ padding: "5px", margin: "auto 0px" }}\n            >\n              \u2192\n            </span>\n            <div>\n              <h3>\u6697\u53f7\u5316</h3>\n              <p>{cipher}</p>\n            </div>\n            <span\n              className="mrel"\n              style={{ padding: "5px", margin: "auto 0px" }}\n            >\n              \u2192\n            </span>\n            <div>\n              <h3>\u5fa9\u53f7\u5316</h3>\n              <p style={{ padding: "1px", margin: "2px" }}>\n                {simpleSubstitutionCipher(cipher, table, "decryption")}\n              </p>\n            </div>\n          </>\n        )}\n      </div>\n      <h3>\u5909\u63db\u30c6\u30fc\u30d6\u30eb</h3>\n      {table === undefined || cipher === undefined ? (\n        /* \u5909\u63db\u30c6\u30fc\u30d6\u30eb\u3092\u751f\u6210\u3057\u3066\u308b\u304b\u3064\u6697\u53f7\u5316\u6e08\u307f\u3067\u3042\u308c\u3070\u8868\u793a */ <></>\n      ) : (\n        <p>{table}</p>\n      )}\n    </>\n  );\n}\n'})})]})}function b(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},85162:(e,n,t)=>{t.d(n,{Z:()=>s});t(67294);var r=t(36905);const i={tabItem:"tabItem_Ymn6"};var a=t(85893);function s(e){let{children:n,hidden:t,className:s}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,r.Z)(i.tabItem,s),hidden:t,children:n})}},74866:(e,n,t)=>{t.d(n,{Z:()=>v});var r=t(67294),i=t(36905),a=t(12466),s=t(16550),l=t(20469),o=t(91980),u=t(67392),p=t(50012);function c(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function d(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return c(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:i}}=e;return{value:n,label:t,attributes:r,default:i}}))}(t);return function(e){const n=(0,u.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function b(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function h(e){let{queryString:n=!1,groupId:t}=e;const i=(0,s.k6)(),a=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o._X)(a),(0,r.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(i.location.search);n.set(a,e),i.replace({...i.location,search:n.toString()})}),[a,i])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,a=d(e),[s,o]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!b({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:a}))),[u,c]=h({queryString:t,groupId:i}),[f,m]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,a]=(0,p.Nk)(t);return[i,(0,r.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:i}),g=(()=>{const e=u??f;return b({value:e,tabValues:a})?e:null})();(0,l.Z)((()=>{g&&o(g)}),[g]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!b({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);o(e),c(e),m(e)}),[c,m,a]),tabValues:a}}var m=t(72389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(85893);function _(e){let{className:n,block:t,selectedValue:r,selectValue:s,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:u}=(0,a.o5)(),p=e=>{const n=e.currentTarget,t=o.indexOf(n),i=l[t].value;i!==r&&(u(n),s(i))},c=e=>{let n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:a}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>o.push(e),onKeyDown:c,onClick:p,...a,className:(0,i.Z)("tabs__item",g.tabItem,a?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function y(e){let{lazy:n,children:t,selectedValue:i}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===i));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function T(e){const n=f(e);return(0,x.jsxs)("div",{className:(0,i.Z)("tabs-container",g.tabList),children:[(0,x.jsx)(_,{...e,...n}),(0,x.jsx)(y,{...e,...n})]})}function v(e){const n=(0,m.Z)();return(0,x.jsx)(T,{...e,children:c(e.children)},String(n))}},11151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>s});var r=t(67294);const i={},a=r.createContext(i);function s(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);