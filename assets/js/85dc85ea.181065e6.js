"use strict";(self.webpackChunkstudy_doxs=self.webpackChunkstudy_doxs||[]).push([[2558],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var o=r.createContext({}),p=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(o.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(t),m=i,g=d["".concat(o,".").concat(m)]||d[m]||c[m]||a;return t?r.createElement(g,l(l({ref:n},u),{},{components:t})):r.createElement(g,l({ref:n},u))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,l=new Array(a);l[0]=d;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s.mdxType="string"==typeof e?e:i,l[1]=s;for(var p=2;p<a;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},85162:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(67294),i=t(86010);const a="tabItem_Ymn6";function l(e){let{children:n,hidden:t,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,i.Z)(a,l),hidden:t},n)}},74866:(e,n,t)=>{t.d(n,{Z:()=>_});var r=t(87462),i=t(67294),a=t(86010),l=t(12466),s=t(16550),o=t(91980),p=t(67392),u=t(50012);function c(e){return function(e){return i.Children.map(e,(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:i}}=e;return{value:n,label:t,attributes:r,default:i}}))}function d(e){const{values:n,children:t}=e;return(0,i.useMemo)((()=>{const e=n??c(t);return function(e){const n=(0,p.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:t}=e;const r=(0,s.k6)(),a=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o._X)(a),(0,i.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(r.location.search);n.set(a,e),r.replace({...r.location,search:n.toString()})}),[a,r])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,a=d(e),[l,s]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:a}))),[o,p]=g({queryString:t,groupId:r}),[c,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,a]=(0,u.Nk)(t);return[r,(0,i.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:r}),y=(()=>{const e=o??c;return m({value:e,tabValues:a})?e:null})();(0,i.useLayoutEffect)((()=>{y&&s(y)}),[y]);return{selectedValue:l,selectValue:(0,i.useCallback)((e=>{if(!m({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);s(e),p(e),f(e)}),[p,f,a]),tabValues:a}}var y=t(72389);const h="tabList__CuJ",b="tabItem_LNqP";function k(e){let{className:n,block:t,selectedValue:s,selectValue:o,tabValues:p}=e;const u=[],{blockElementScrollPositionUntilNextRender:c}=(0,l.o5)(),d=e=>{const n=e.currentTarget,t=u.indexOf(n),r=p[t].value;r!==s&&(c(n),o(r))},m=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=u.indexOf(e.currentTarget)+1;n=u[t]??u[0];break}case"ArrowLeft":{const t=u.indexOf(e.currentTarget)-1;n=u[t]??u[u.length-1];break}}n?.focus()};return i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":t},n)},p.map((e=>{let{value:n,label:t,attributes:l}=e;return i.createElement("li",(0,r.Z)({role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,key:n,ref:e=>u.push(e),onKeyDown:m,onClick:d},l,{className:(0,a.Z)("tabs__item",b,l?.className,{"tabs__item--active":s===n})}),t??n)})))}function v(e){let{lazy:n,children:t,selectedValue:r}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===r));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return i.createElement("div",{className:"margin-top--md"},a.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==r}))))}function x(e){const n=f(e);return i.createElement("div",{className:(0,a.Z)("tabs-container",h)},i.createElement(k,(0,r.Z)({},e,n)),i.createElement(v,(0,r.Z)({},e,n)))}function _(e){const n=(0,y.Z)();return i.createElement(x,(0,r.Z)({key:String(n)},e))}},63367:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>m,frontMatter:()=>s,metadata:()=>p,toc:()=>c});var r=t(87462),i=(t(67294),t(3905)),a=t(74866),l=t(85162);const s={title:"\u30f4\u30a3\u30b8\u30e5\u30cd\u30eb\u6697\u53f7",sidebar_label:"\u30f4\u30a3\u30b8\u30e5\u30cd\u30eb\u6697\u53f7",draft:!1,toc_max_heading_level:4,tags:["\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0","\u53e4\u5178\u6697\u53f7"]},o=void 0,p={unversionedId:"Cryptography/classical-cipher/vigenere-cipher",id:"Cryptography/classical-cipher/vigenere-cipher",title:"\u30f4\u30a3\u30b8\u30e5\u30cd\u30eb\u6697\u53f7",description:"\u30f4\u30a3\u30b8\u30e5\u30cd\u30eb\u6697\u53f7\u3068\u306f",source:"@site/docs/02-Cryptography/00-classical-cipher/06-vigenere-cipher.md",sourceDirName:"02-Cryptography/00-classical-cipher",slug:"/Cryptography/classical-cipher/vigenere-cipher",permalink:"/study-docs/docs/Cryptography/classical-cipher/vigenere-cipher",draft:!1,editUrl:"https://github.com/koseki2580/study-docs/edit/main/docs/02-Cryptography/00-classical-cipher/06-vigenere-cipher.md",tags:[{label:"\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0",permalink:"/study-docs/docs/tags/\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0"},{label:"\u53e4\u5178\u6697\u53f7",permalink:"/study-docs/docs/tags/\u53e4\u5178\u6697\u53f7"}],version:"current",lastUpdatedBy:"koseki2580",lastUpdatedAt:1697714353,formattedLastUpdatedAt:"2023\u5e7410\u670819\u65e5",sidebarPosition:6,frontMatter:{title:"\u30f4\u30a3\u30b8\u30e5\u30cd\u30eb\u6697\u53f7",sidebar_label:"\u30f4\u30a3\u30b8\u30e5\u30cd\u30eb\u6697\u53f7",draft:!1,toc_max_heading_level:4,tags:["\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0","\u53e4\u5178\u6697\u53f7"]},sidebar:"CryptographySidebar",previous:{title:"\u591a\u8868\u5f0f\u6697\u53f7",permalink:"/study-docs/docs/Cryptography/classical-cipher/polyalphabetic-substitution-cipher"}},u={},c=[{value:"\u30f4\u30a3\u30b8\u30e5\u30cd\u30eb\u6697\u53f7\u3068\u306f",id:"\u30f4\u30a3\u30b8\u30e5\u30cd\u30eb\u6697\u53f7\u3068\u306f",level:2},{value:"\u30d7\u30ed\u30b0\u30e9\u30e0",id:"\u30d7\u30ed\u30b0\u30e9\u30e0",level:3},{value:"\u52d5\u4f5c",id:"\u52d5\u4f5c",level:3}],d={toc:c};function m(e){let{components:n,...s}=e;return(0,i.kt)("wrapper",(0,r.Z)({},d,s,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"\u30f4\u30a3\u30b8\u30e5\u30cd\u30eb\u6697\u53f7\u3068\u306f"},"\u30f4\u30a3\u30b8\u30e5\u30cd\u30eb\u6697\u53f7\u3068\u306f"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"\u30f4\u30a3\u30b8\u30e5\u30cd\u30eb\u6697\u53f7"),"\u306f",(0,i.kt)("a",{parentName:"p",href:"/docs/Cryptography/classical-cipher/polyalphabetic-substitution-cipher"},"\u591a\u8868\u5f0f\u6697\u53f7"),"\u306e\u4e00\u7a2e\u3067\u3042\u308a\u3001\u30f4\u30a3\u30b8\u30e5\u30cd\u30eb\u8868(\u4e0b\u56f3)\u3068\u8a00\u3046\u8868\u3092\u4f7f\u3063\u3066\u6697\u53f7\u5316\u3092\u884c\u3046\u6697\u53f7\u65b9\u5f0f\u3002\n",(0,i.kt)("img",{alt:"\u30f4\u30a3\u30b8\u30e5\u30cd\u30eb\u8868",src:t(23921).Z,width:"1082",height:"1081"})),(0,i.kt)("p",null,"\u8d64\u8272\u30a8\u30ea\u30a2\u306e\u6587\u5b57\u304c\u5e73\u6587\u3092\u8868\u3057\u3001\u9752\u8272\u30a8\u30ea\u30a2\u306e\u6587\u5b57\u304c\u9375\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3002\u7dd1\u8272\u30a8\u30ea\u30a2\u306e\u6587\u5b57\u304c\u6697\u53f7\u5316\u5f8c\u306e\u6587\u5b57\u3092\u8868\u3057\u3066\u3044\u308b\u3002"),(0,i.kt)("p",null,"\u4f8b\u3048\u3070\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"APPLE"),"\u3092\u6697\u53f7\u5316\u3057\u305f\u3044\u3068\u3059\u308b\u3002",(0,i.kt)("inlineCode",{parentName:"p"},"RINGO"),"\u3092\u9375\u3068\u3057\u305f\u5834\u5408\u3001\u5e73\u6587\u306e",(0,i.kt)("inlineCode",{parentName:"p"},"A"),"\u3068\u9375\u306e",(0,i.kt)("inlineCode",{parentName:"p"},"R"),"\u3067\u5408\u81f4\u3059\u308b",(0,i.kt)("inlineCode",{parentName:"p"},"R"),"\u304c\u6697\u53f7\u5316\u5f8c\u306e\u6587\u5b57\u3068\u306a\u308b\u3002"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"\u30f4\u30a3\u30b8\u30e5\u30cd\u30eb\u6697\u53f71",src:t(36838).Z,width:"1084",height:"1084"})),(0,i.kt)("p",null,"\u7d9a\u3051\u3066\u3001",(0,i.kt)("inlineCode",{parentName:"p"},"P"),"\u3068",(0,i.kt)("inlineCode",{parentName:"p"},"I"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"P"),"\u3068",(0,i.kt)("inlineCode",{parentName:"p"},"N"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"L"),"\u3068",(0,i.kt)("inlineCode",{parentName:"p"},"G"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"E"),"\u3068",(0,i.kt)("inlineCode",{parentName:"p"},"O"),"\u3067\u6697\u53f7\u6587\u5b57\u3092\u5c0e\u51fa\u3059\u308b\u3002"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"\u30f4\u30a3\u30b8\u30e5\u30cd\u30eb\u6697\u53f72",src:t(61778).Z,width:"1085",height:"1084"})),(0,i.kt)("p",null,"\u5e73\u6587",(0,i.kt)("inlineCode",{parentName:"p"},"APPLE"),"\u3068\u9375",(0,i.kt)("inlineCode",{parentName:"p"},"RINGO"),"\u3067\u6697\u53f7\u5316\u3057\u305f\u7d50\u679c\u3001\u6697\u53f7\u6587",(0,i.kt)("inlineCode",{parentName:"p"},"RXCRS"),"\u304c\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002"),(0,i.kt)("h3",{id:"\u30d7\u30ed\u30b0\u30e9\u30e0"},"\u30d7\u30ed\u30b0\u30e9\u30e0"),(0,i.kt)(a.Z,{groupId:"code",mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="vigenere-cipher.py"',title:'"vigenere-cipher.py"'},'import random\ndef generate_key(size: int):\n    base = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"\n    result = []\n    for _ in range(size):\n        result.append(base[random.randint(0, 26)])\n    return "".join(result)\n\n\ndef vigenere_cipher(input_text: str, key: str, direction: str = "encryption"):\n    input_text = input_text.upper()\n    key = key.upper()\n    base = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"\n    mod = len(key)\n\n    result = []\n    dx = 1\n    if direction == "decryption":\n        dx = -1\n    for i in range(len(input_text)):\n        result.append(\n            base[(dx * base.find(key[i % mod]) + base.find(input_text[i])) % 26])\n    return "".join(result)\n'))),(0,i.kt)(l.Z,{value:"C++",label:"C++",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="vigenere-cipher.cpp"',title:'"vigenere-cipher.cpp"'},'string generateKey(int size)\n{\n    string base = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n    string result = "";\n    std::random_device rnd;\n    std::mt19937 mt(rnd());\n    uniform_int_distribution<> rand26(0, 25);\n    for (int i = 0; i < size; ++i)\n        result += base[rand26(mt)];\n\n    return result;\n}\n\nstring vigenereCipher(string inputText, string key, string direction = "encryption")\n{\n    string base = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n    transform(inputText.begin(), inputText.end(), inputText.begin(), ::toupper);\n    transform(key.begin(), key.end(), key.begin(), ::toupper);\n\n    int mod = key.size();\n\n    string result = "";\n    int dx = 1;\n    if (direction == "decryption")\n        dx = -1;\n    for (int i = 0; i < inputText.size(); ++i)\n    {\n        result += base[(dx * base.find(key[i % mod]) + base.find(inputText[i]) + 26) % 26];\n    }\n    return result;\n}\n\n'))),(0,i.kt)(l.Z,{value:"C#",label:"C#",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="vigenere-cipher.cs"',title:'"vigenere-cipher.cs"'},'private static String GenerateKey(int size)\n{\n    String _base = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n    var rand = new Random();\n    StringBuilder result = new StringBuilder();\n    for (int i = 0; i < size; ++i)\n    {\n        result.Append(_base[rand.Next(0, 26)]);\n    }\n    return result.ToString();\n}\n\nprivate static String VigenereCipher(\n    String inputText,\n    String key,\n    String direction = "encryption"\n)\n{\n    String _base = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n    inputText.ToUpper();\n    key.ToUpper();\n    int mod = key.Length;\n    StringBuilder result = new StringBuilder();\n    int dx = 1;\n    if (direction == "decryption")\n        dx = -1;\n    for (int i = 0; i < inputText.Length; ++i)\n    {\n        result.Append(\n            _base[\n                (dx * _base.IndexOf(key[i % mod]) + _base.IndexOf(inputText[i]) + 26) % 26\n            ]\n        );\n    }\n    return result.ToString();\n}\n\n'))),(0,i.kt)(l.Z,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"rand \u30af\u30ec\u30fc\u30c8\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust",metastring:'title="vigenere-cipher.rs"',title:'"vigenere-cipher.rs"'},'use rand::Rng;\n\nfn generate_key(size:usize) -> String{\n    let base = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n    let mut result = String::new();\n    let mut rng = rand::thread_rng();\n    for i in 0..size{\n        let  rand = rng.gen_range(0..26);\n        result += &base[rand..rand+1];\n    }\n    result\n}\n\nfn vigenere_cipher_to_encryption(input_text:String, key:String) -> String{\n    let base = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n    let  input_text_upper:String  = input_text.to_uppercase();\n    let key_upper: String = key.to_uppercase();\n    let _mod = key.len();\n    let mut result = String::new();\n    for i in 0..input_text.len(){\n        let pos_ =  base.find(key_upper.chars().nth(i % _mod).unwrap()).unwrap();\n        let pos__ = base.find(input_text_upper.chars().nth(i).unwrap()).unwrap();\n        let pos = (pos_ + pos__) % 26;\n        result += &base[pos..pos+1];\n    }\n    result\n}\n\nfn vigenere_cipher_to_decryption(input_text:String, key:String) -> String{\n    let base = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n    let  input_text_upper:String  = input_text.to_uppercase();\n    let key_upper: String = key.to_uppercase();\n    let _mod = key.len();\n    let mut result = String::new();\n    for i in 0..input_text.len(){\n        let pos_ =  base.find(key_upper.chars().nth(i % _mod).unwrap()).unwrap();\n        let pos__ = base.find(input_text_upper.chars().nth(i).unwrap()).unwrap();\n        let pos = ( 26 + pos__  - pos_) % 26;\n        result += &base[pos..pos+1];\n    }\n    result\n}\n\n'))),(0,i.kt)(l.Z,{value:"JavaScript",label:"JavaScript",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="vigenere-cipher.js"',title:'"vigenere-cipher.js"'},'// \u6307\u5b9a\u7bc4\u56f2\u5185\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u3067\u6570\u5b57\u3092\u751f\u6210 [min, max]\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nfunction generateKey(size) {\n  let result = "";\n  for (let i = 0; i < size; ++i) {\n    result += base[getRandomInt(0, 26)];\n  }\n  return result;\n}\n\nfunction vigenereCipher(inputText, key, direction = "encryption") {\n  const base = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n  inputText = inputText.toUpperCase();\n  key = key.toUpperCase();\n  const mod = key.length;\n  let dx = 1;\n  if (direction == "decryption") dx = -1;\n  result = "";\n  for (let i = 0; i < inputText.length; ++i) {\n    result +=\n      base[\n        (dx * base.indexOf(key[i % mod]) + base.indexOf(inputText[i]) + 26) % 26\n      ];\n  }\n  return result;\n}\n')))),(0,i.kt)("h3",{id:"\u52d5\u4f5c"},"\u52d5\u4f5c"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function SimpleSubstitutionCipher(props) {\n  // \u6697\u53f7\u5316 or \u5fa9\u53f7\u5316\u3059\u308b\u6587\u5b57\u5217\n  const inputText = "APPLE";\n\n  // encryption or decryption\n  const direction = "encryption";\n\n  // \u624b\u52d5\u3067\u9375\u3092\u6307\u5b9a\u3059\u308b\n  const defaultKey = "RINGO";\n\n  // defaultKey\u304cnull\u306e\u5834\u5408\u306b\u4f5c\u6210\u3059\u308b\u9375\u306e\u9577\u3055\n  const size = 3;\n\n  // \u4ee5\u4e0b\u306f\u7279\u306b\u5909\u66f4\u3057\u306a\u304f\u3066\u826f\u3044\n  const base = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";\n\n  // \u6307\u5b9a\u7bc4\u56f2\u5185\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u3067\u6570\u5b57\u3092\u751f\u6210 [min, max]\n  function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  function generateKey(size) {\n    let result = "";\n    for (let i = 0; i < size; ++i) {\n      result += base[getRandomInt(0, 26)];\n    }\n    return result;\n  }\n\n  function vigenereCipher(inputText, key, direction = "encryption") {\n    inputText = inputText.toUpperCase();\n    key = key.toUpperCase();\n    const mod = key.length;\n    let dx = 1;\n    if (direction == "decryption") dx = -1;\n    result = "";\n    for (let i = 0; i < inputText.length; ++i) {\n      result +=\n        base[\n          (dx * base.indexOf(key[i % mod]) + base.indexOf(inputText[i]) + 26) %\n            26\n        ];\n    }\n    return result;\n  }\n\n  // React\n  const [key, setKey] = useState(undefined);\n  const [cipher, setCipher] = useState(undefined);\n\n  // table\u304c\u751f\u6210\u3055\u308c\u305f\u5f8c\u306b\u6697\u53f7\u5316\u3092\u884c\u3046\n  useEffect(() => {\n    if (!key) return;\n    const cipher = vigenereCipher(inputText, key, "encryption");\n    setCipher(cipher);\n  }, [key]);\n  // \u8aad\u307f\u8fbc\u307f\u6642\u306b\u4e00\u5ea6\u3060\u3051\u547c\u3073\u51fa\u3059\n  useEffect(() => {\n    // \u8aad\u307f\u8fbc\u307f\u3067\u304d\u3066\u304b\u3089\u547c\u3073\u3060\u3059\n    if (!defaultKey) {\n      setKey(generateKey(size));\n    } else {\n      setKey(defaultKey);\n    }\n  }, []);\n  return (\n    <>\n      <div\n        style={{\n          display: "flex",\n          flexDirection: "row",\n          flexWrap: "nowrap",\n          alignItems: "flex-start",\n          justifyContent: "space-evenly",\n        }}\n      >\n        <div>\n          <h3>\u5143\u306e\u6587\u5b57\u5217</h3>\n          <p>{inputText}</p>\n        </div>\n        {key === undefined || cipher === undefined ? (\n          /* \u5909\u63db\u30c6\u30fc\u30d6\u30eb\u3092\u751f\u6210\u3057\u3066\u308b\u304b\u3064\u6697\u53f7\u5316\u6e08\u307f\u3067\u3042\u308c\u3070\u8868\u793a */ <></>\n        ) : (\n          <>\n            <span\n              className="mrel"\n              style={{ padding: "5px", margin: "auto 0px" }}\n            >\n              \u2192\n            </span>\n            <div>\n              <h3>\u6697\u53f7\u5316</h3>\n              <p>{cipher}</p>\n            </div>\n            <span\n              className="mrel"\n              style={{ padding: "5px", margin: "auto 0px" }}\n            >\n              \u2192\n            </span>\n            <div>\n              <h3>\u5fa9\u53f7\u5316</h3>\n              <p style={{ padding: "1px", margin: "2px" }}>\n                {vigenereCipher(cipher, key, "decryption")}\n              </p>\n            </div>\n          </>\n        )}\n      </div>\n      <h3>\u9375</h3>\n      {key === undefined || cipher === undefined ? (\n        /* \u5909\u63db\u30c6\u30fc\u30d6\u30eb\u3092\u751f\u6210\u3057\u3066\u308b\u304b\u3064\u6697\u53f7\u5316\u6e08\u307f\u3067\u3042\u308c\u3070\u8868\u793a */ <></>\n      ) : (\n        <p>{key}</p>\n      )}\n    </>\n  );\n}\n')))}m.isMDXComponent=!0},23921:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/vigenere-cipher-1.drawio-6fe2eee8374da15103b990e9f1f211fe.svg"},36838:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/vigenere-cipher-2.drawio-d42ad434de6226a1b62e61dc2ced74a3.svg"},61778:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/vigenere-cipher-3.drawio-5019fab286a8e984fa58e28aa12c9078.svg"}}]);